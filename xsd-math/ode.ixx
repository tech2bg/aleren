// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_MATH_ODE_IXX
#define CXX___SCHEMA_XSD_MATH_ODE_IXX

// Begin prologue.
//
//
// End prologue.

#include "types.ixx"

// XsdOdeSolver
// 

inline
const XsdOdeSolver::method_optional& XsdOdeSolver::
method () const
{
  return this->method_;
}

inline
XsdOdeSolver::method_optional& XsdOdeSolver::
method ()
{
  return this->method_;
}

inline
void XsdOdeSolver::
method (const method_type& x)
{
  this->method_.set (x);
}

inline
void XsdOdeSolver::
method (const method_optional& x)
{
  this->method_ = x;
}

inline
void XsdOdeSolver::
method (::std::auto_ptr< method_type > x)
{
  this->method_.set (x);
}

inline
const XsdOdeSolver::method_type& XsdOdeSolver::
method_default_value ()
{
  return method_default_value_;
}

inline
const XsdOdeSolver::error_optional& XsdOdeSolver::
error () const
{
  return this->error_;
}

inline
XsdOdeSolver::error_optional& XsdOdeSolver::
error ()
{
  return this->error_;
}

inline
void XsdOdeSolver::
error (const error_type& x)
{
  this->error_.set (x);
}

inline
void XsdOdeSolver::
error (const error_optional& x)
{
  this->error_ = x;
}

inline
void XsdOdeSolver::
error (::std::auto_ptr< error_type > x)
{
  this->error_.set (x);
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_MATH_ODE_IXX
