// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_MODEL_SCENARIO_IXX
#define CXX___SCHEMA_XSD_MODEL_SCENARIO_IXX

// Begin prologue.
//
//
// End prologue.

#include "market.ixx"

#include "leasemodel.ixx"

// XsdScenarioRow
// 


// XsdScenario
// 

inline
const XsdScenario::row_sequence& XsdScenario::
row () const
{
  return this->row_;
}

inline
XsdScenario::row_sequence& XsdScenario::
row ()
{
  return this->row_;
}

inline
void XsdScenario::
row (const row_sequence& s)
{
  this->row_ = s;
}

inline
const XsdScenario::events_type& XsdScenario::
events () const
{
  return this->events_.get ();
}

inline
XsdScenario::events_type& XsdScenario::
events ()
{
  return this->events_.get ();
}

inline
void XsdScenario::
events (const events_type& x)
{
  this->events_.set (x);
}

inline
void XsdScenario::
events (::std::auto_ptr< events_type > x)
{
  this->events_.set (x);
}

inline
const XsdScenario::schemaType_type& XsdScenario::
schemaType () const
{
  return this->schemaType_.get ();
}

inline
const XsdScenario::schemaType_type& XsdScenario::
schemaType_default_value ()
{
  return schemaType_default_value_;
}


// XsdScenarioEvents
// 

inline
const XsdScenarioEvents::defaults_sequence& XsdScenarioEvents::
defaults () const
{
  return this->defaults_;
}

inline
XsdScenarioEvents::defaults_sequence& XsdScenarioEvents::
defaults ()
{
  return this->defaults_;
}

inline
void XsdScenarioEvents::
defaults (const defaults_sequence& s)
{
  this->defaults_ = s;
}

inline
const XsdScenarioEvents::ratings_optional& XsdScenarioEvents::
ratings () const
{
  return this->ratings_;
}

inline
XsdScenarioEvents::ratings_optional& XsdScenarioEvents::
ratings ()
{
  return this->ratings_;
}

inline
void XsdScenarioEvents::
ratings (const ratings_type& x)
{
  this->ratings_.set (x);
}

inline
void XsdScenarioEvents::
ratings (const ratings_optional& x)
{
  this->ratings_ = x;
}

inline
void XsdScenarioEvents::
ratings (::std::auto_ptr< ratings_type > x)
{
  this->ratings_.set (x);
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_MODEL_SCENARIO_IXX
