// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_MODEL_PROCESS_IXX
#define CXX___SCHEMA_XSD_MODEL_PROCESS_IXX

// Begin prologue.
//
//
// End prologue.

#include "market.ixx"

// XsdProcess
// 

inline
const XsdProcess::market_optional& XsdProcess::
market () const
{
  return this->market_;
}

inline
XsdProcess::market_optional& XsdProcess::
market ()
{
  return this->market_;
}

inline
void XsdProcess::
market (const market_type& x)
{
  this->market_.set (x);
}

inline
void XsdProcess::
market (const market_optional& x)
{
  this->market_ = x;
}

inline
void XsdProcess::
market (::std::auto_ptr< market_type > x)
{
  this->market_.set (x);
}

inline
const XsdProcess::params_optional& XsdProcess::
params () const
{
  return this->params_;
}

inline
XsdProcess::params_optional& XsdProcess::
params ()
{
  return this->params_;
}

inline
void XsdProcess::
params (const params_type& x)
{
  this->params_.set (x);
}

inline
void XsdProcess::
params (const params_optional& x)
{
  this->params_ = x;
}

inline
void XsdProcess::
params (::std::auto_ptr< params_type > x)
{
  this->params_.set (x);
}


// XsdPriceProcess
// 

inline
const XsdPriceProcess::discountKey_type& XsdPriceProcess::
discountKey () const
{
  return this->discountKey_.get ();
}

inline
XsdPriceProcess::discountKey_type& XsdPriceProcess::
discountKey ()
{
  return this->discountKey_.get ();
}

inline
void XsdPriceProcess::
discountKey (const discountKey_type& x)
{
  this->discountKey_.set (x);
}

inline
void XsdPriceProcess::
discountKey (::std::auto_ptr< discountKey_type > x)
{
  this->discountKey_.set (x);
}

inline
const XsdPriceProcess::quoteKey_type& XsdPriceProcess::
quoteKey () const
{
  return this->quoteKey_.get ();
}

inline
XsdPriceProcess::quoteKey_type& XsdPriceProcess::
quoteKey ()
{
  return this->quoteKey_.get ();
}

inline
void XsdPriceProcess::
quoteKey (const quoteKey_type& x)
{
  this->quoteKey_.set (x);
}

inline
void XsdPriceProcess::
quoteKey (::std::auto_ptr< quoteKey_type > x)
{
  this->quoteKey_.set (x);
}

inline
const XsdPriceProcess::dividendYield_optional& XsdPriceProcess::
dividendYield () const
{
  return this->dividendYield_;
}

inline
XsdPriceProcess::dividendYield_optional& XsdPriceProcess::
dividendYield ()
{
  return this->dividendYield_;
}

inline
void XsdPriceProcess::
dividendYield (const dividendYield_type& x)
{
  this->dividendYield_.set (x);
}

inline
void XsdPriceProcess::
dividendYield (const dividendYield_optional& x)
{
  this->dividendYield_ = x;
}

inline
void XsdPriceProcess::
dividendYield (::std::auto_ptr< dividendYield_type > x)
{
  this->dividendYield_.set (x);
}


// XsdRateProcess
// 

inline
const XsdRateProcess::discountKey_type& XsdRateProcess::
discountKey () const
{
  return this->discountKey_.get ();
}

inline
XsdRateProcess::discountKey_type& XsdRateProcess::
discountKey ()
{
  return this->discountKey_.get ();
}

inline
void XsdRateProcess::
discountKey (const discountKey_type& x)
{
  this->discountKey_.set (x);
}

inline
void XsdRateProcess::
discountKey (::std::auto_ptr< discountKey_type > x)
{
  this->discountKey_.set (x);
}


// XsdCurrencyProcess
// 

inline
const XsdCurrencyProcess::exchange_type& XsdCurrencyProcess::
exchange () const
{
  return this->exchange_.get ();
}

inline
XsdCurrencyProcess::exchange_type& XsdCurrencyProcess::
exchange ()
{
  return this->exchange_.get ();
}

inline
void XsdCurrencyProcess::
exchange (const exchange_type& x)
{
  this->exchange_.set (x);
}

inline
void XsdCurrencyProcess::
exchange (::std::auto_ptr< exchange_type > x)
{
  this->exchange_.set (x);
}

inline
const XsdCurrencyProcess::discount_type& XsdCurrencyProcess::
discount () const
{
  return this->discount_.get ();
}

inline
XsdCurrencyProcess::discount_type& XsdCurrencyProcess::
discount ()
{
  return this->discount_.get ();
}

inline
void XsdCurrencyProcess::
discount (const discount_type& x)
{
  this->discount_.set (x);
}

inline
void XsdCurrencyProcess::
discount (::std::auto_ptr< discount_type > x)
{
  this->discount_.set (x);
}


// XsdHestonProcess
// 

inline
const XsdHestonProcess::volatility_type& XsdHestonProcess::
volatility () const
{
  return this->volatility_.get ();
}

inline
XsdHestonProcess::volatility_type& XsdHestonProcess::
volatility ()
{
  return this->volatility_.get ();
}

inline
void XsdHestonProcess::
volatility (const volatility_type& x)
{
  this->volatility_.set (x);
}

inline
void XsdHestonProcess::
volatility (::std::auto_ptr< volatility_type > x)
{
  this->volatility_.set (x);
}

inline
const XsdHestonProcess::kappa_type& XsdHestonProcess::
kappa () const
{
  return this->kappa_.get ();
}

inline
XsdHestonProcess::kappa_type& XsdHestonProcess::
kappa ()
{
  return this->kappa_.get ();
}

inline
void XsdHestonProcess::
kappa (const kappa_type& x)
{
  this->kappa_.set (x);
}

inline
void XsdHestonProcess::
kappa (::std::auto_ptr< kappa_type > x)
{
  this->kappa_.set (x);
}

inline
const XsdHestonProcess::theta_type& XsdHestonProcess::
theta () const
{
  return this->theta_.get ();
}

inline
XsdHestonProcess::theta_type& XsdHestonProcess::
theta ()
{
  return this->theta_.get ();
}

inline
void XsdHestonProcess::
theta (const theta_type& x)
{
  this->theta_.set (x);
}

inline
void XsdHestonProcess::
theta (::std::auto_ptr< theta_type > x)
{
  this->theta_.set (x);
}

inline
const XsdHestonProcess::sigma_type& XsdHestonProcess::
sigma () const
{
  return this->sigma_.get ();
}

inline
XsdHestonProcess::sigma_type& XsdHestonProcess::
sigma ()
{
  return this->sigma_.get ();
}

inline
void XsdHestonProcess::
sigma (const sigma_type& x)
{
  this->sigma_.set (x);
}

inline
void XsdHestonProcess::
sigma (::std::auto_ptr< sigma_type > x)
{
  this->sigma_.set (x);
}

inline
const XsdHestonProcess::correlation_optional& XsdHestonProcess::
correlation () const
{
  return this->correlation_;
}

inline
XsdHestonProcess::correlation_optional& XsdHestonProcess::
correlation ()
{
  return this->correlation_;
}

inline
void XsdHestonProcess::
correlation (const correlation_type& x)
{
  this->correlation_.set (x);
}

inline
void XsdHestonProcess::
correlation (const correlation_optional& x)
{
  this->correlation_ = x;
}

inline
void XsdHestonProcess::
correlation (::std::auto_ptr< correlation_type > x)
{
  this->correlation_.set (x);
}

inline
const XsdHestonProcess::boundary_optional& XsdHestonProcess::
boundary () const
{
  return this->boundary_;
}

inline
XsdHestonProcess::boundary_optional& XsdHestonProcess::
boundary ()
{
  return this->boundary_;
}

inline
void XsdHestonProcess::
boundary (const boundary_type& x)
{
  this->boundary_.set (x);
}

inline
void XsdHestonProcess::
boundary (const boundary_optional& x)
{
  this->boundary_ = x;
}

inline
void XsdHestonProcess::
boundary (::std::auto_ptr< boundary_type > x)
{
  this->boundary_.set (x);
}

inline
const XsdHestonProcess::boundary_type& XsdHestonProcess::
boundary_default_value ()
{
  return boundary_default_value_;
}


// XsdBatesProcess
// 

inline
const XsdBatesProcess::lambda_optional& XsdBatesProcess::
lambda () const
{
  return this->lambda_;
}

inline
XsdBatesProcess::lambda_optional& XsdBatesProcess::
lambda ()
{
  return this->lambda_;
}

inline
void XsdBatesProcess::
lambda (const lambda_type& x)
{
  this->lambda_.set (x);
}

inline
void XsdBatesProcess::
lambda (const lambda_optional& x)
{
  this->lambda_ = x;
}

inline
void XsdBatesProcess::
lambda (::std::auto_ptr< lambda_type > x)
{
  this->lambda_.set (x);
}

inline
const XsdBatesProcess::nu_optional& XsdBatesProcess::
nu () const
{
  return this->nu_;
}

inline
XsdBatesProcess::nu_optional& XsdBatesProcess::
nu ()
{
  return this->nu_;
}

inline
void XsdBatesProcess::
nu (const nu_type& x)
{
  this->nu_.set (x);
}

inline
void XsdBatesProcess::
nu (const nu_optional& x)
{
  this->nu_ = x;
}

inline
void XsdBatesProcess::
nu (::std::auto_ptr< nu_type > x)
{
  this->nu_.set (x);
}

inline
const XsdBatesProcess::delta_optional& XsdBatesProcess::
delta () const
{
  return this->delta_;
}

inline
XsdBatesProcess::delta_optional& XsdBatesProcess::
delta ()
{
  return this->delta_;
}

inline
void XsdBatesProcess::
delta (const delta_type& x)
{
  this->delta_.set (x);
}

inline
void XsdBatesProcess::
delta (const delta_optional& x)
{
  this->delta_ = x;
}

inline
void XsdBatesProcess::
delta (::std::auto_ptr< delta_type > x)
{
  this->delta_.set (x);
}

inline
const XsdBatesProcess::deterministicJump_optional& XsdBatesProcess::
deterministicJump () const
{
  return this->deterministicJump_;
}

inline
XsdBatesProcess::deterministicJump_optional& XsdBatesProcess::
deterministicJump ()
{
  return this->deterministicJump_;
}

inline
void XsdBatesProcess::
deterministicJump (const deterministicJump_type& x)
{
  this->deterministicJump_.set (x);
}

inline
void XsdBatesProcess::
deterministicJump (const deterministicJump_optional& x)
{
  this->deterministicJump_ = x;
}

inline
void XsdBatesProcess::
deterministicJump (::std::auto_ptr< deterministicJump_type > x)
{
  this->deterministicJump_.set (x);
}

inline
const XsdBatesProcess::doubleExponential_optional& XsdBatesProcess::
doubleExponential () const
{
  return this->doubleExponential_;
}

inline
XsdBatesProcess::doubleExponential_optional& XsdBatesProcess::
doubleExponential ()
{
  return this->doubleExponential_;
}

inline
void XsdBatesProcess::
doubleExponential (const doubleExponential_type& x)
{
  this->doubleExponential_.set (x);
}

inline
void XsdBatesProcess::
doubleExponential (const doubleExponential_optional& x)
{
  this->doubleExponential_ = x;
}

inline
void XsdBatesProcess::
doubleExponential (::std::auto_ptr< doubleExponential_type > x)
{
  this->doubleExponential_.set (x);
}


// XsdBlackScholesProcess
// 

inline
const XsdBlackScholesProcess::volatilityKey_type& XsdBlackScholesProcess::
volatilityKey () const
{
  return this->volatilityKey_.get ();
}

inline
XsdBlackScholesProcess::volatilityKey_type& XsdBlackScholesProcess::
volatilityKey ()
{
  return this->volatilityKey_.get ();
}

inline
void XsdBlackScholesProcess::
volatilityKey (const volatilityKey_type& x)
{
  this->volatilityKey_.set (x);
}

inline
void XsdBlackScholesProcess::
volatilityKey (::std::auto_ptr< volatilityKey_type > x)
{
  this->volatilityKey_.set (x);
}


// XsdBlackProcess
// 


// XsdGarchProcess
// 

inline
const XsdGarchProcess::volatility_type& XsdGarchProcess::
volatility () const
{
  return this->volatility_.get ();
}

inline
XsdGarchProcess::volatility_type& XsdGarchProcess::
volatility ()
{
  return this->volatility_.get ();
}

inline
void XsdGarchProcess::
volatility (const volatility_type& x)
{
  this->volatility_.set (x);
}

inline
void XsdGarchProcess::
volatility (::std::auto_ptr< volatility_type > x)
{
  this->volatility_.set (x);
}

inline
const XsdGarchProcess::omega_type& XsdGarchProcess::
omega () const
{
  return this->omega_.get ();
}

inline
XsdGarchProcess::omega_type& XsdGarchProcess::
omega ()
{
  return this->omega_.get ();
}

inline
void XsdGarchProcess::
omega (const omega_type& x)
{
  this->omega_.set (x);
}

inline
void XsdGarchProcess::
omega (::std::auto_ptr< omega_type > x)
{
  this->omega_.set (x);
}

inline
const XsdGarchProcess::alpha_type& XsdGarchProcess::
alpha () const
{
  return this->alpha_.get ();
}

inline
XsdGarchProcess::alpha_type& XsdGarchProcess::
alpha ()
{
  return this->alpha_.get ();
}

inline
void XsdGarchProcess::
alpha (const alpha_type& x)
{
  this->alpha_.set (x);
}

inline
void XsdGarchProcess::
alpha (::std::auto_ptr< alpha_type > x)
{
  this->alpha_.set (x);
}

inline
const XsdGarchProcess::beta_type& XsdGarchProcess::
beta () const
{
  return this->beta_.get ();
}

inline
XsdGarchProcess::beta_type& XsdGarchProcess::
beta ()
{
  return this->beta_.get ();
}

inline
void XsdGarchProcess::
beta (const beta_type& x)
{
  this->beta_.set (x);
}

inline
void XsdGarchProcess::
beta (::std::auto_ptr< beta_type > x)
{
  this->beta_.set (x);
}

inline
const XsdGarchProcess::gamma_type& XsdGarchProcess::
gamma () const
{
  return this->gamma_.get ();
}

inline
XsdGarchProcess::gamma_type& XsdGarchProcess::
gamma ()
{
  return this->gamma_.get ();
}

inline
void XsdGarchProcess::
gamma (const gamma_type& x)
{
  this->gamma_.set (x);
}

inline
void XsdGarchProcess::
gamma (::std::auto_ptr< gamma_type > x)
{
  this->gamma_.set (x);
}

inline
const XsdGarchProcess::lambda_type& XsdGarchProcess::
lambda () const
{
  return this->lambda_.get ();
}

inline
XsdGarchProcess::lambda_type& XsdGarchProcess::
lambda ()
{
  return this->lambda_.get ();
}

inline
void XsdGarchProcess::
lambda (const lambda_type& x)
{
  this->lambda_.set (x);
}

inline
void XsdGarchProcess::
lambda (::std::auto_ptr< lambda_type > x)
{
  this->lambda_.set (x);
}

inline
const XsdGarchProcess::daysPerYear_optional& XsdGarchProcess::
daysPerYear () const
{
  return this->daysPerYear_;
}

inline
XsdGarchProcess::daysPerYear_optional& XsdGarchProcess::
daysPerYear ()
{
  return this->daysPerYear_;
}

inline
void XsdGarchProcess::
daysPerYear (const daysPerYear_type& x)
{
  this->daysPerYear_.set (x);
}

inline
void XsdGarchProcess::
daysPerYear (const daysPerYear_optional& x)
{
  this->daysPerYear_ = x;
}

inline
XsdGarchProcess::daysPerYear_type XsdGarchProcess::
daysPerYear_default_value ()
{
  return daysPerYear_type (252);
}

inline
const XsdGarchProcess::boundary_optional& XsdGarchProcess::
boundary () const
{
  return this->boundary_;
}

inline
XsdGarchProcess::boundary_optional& XsdGarchProcess::
boundary ()
{
  return this->boundary_;
}

inline
void XsdGarchProcess::
boundary (const boundary_type& x)
{
  this->boundary_.set (x);
}

inline
void XsdGarchProcess::
boundary (const boundary_optional& x)
{
  this->boundary_ = x;
}

inline
void XsdGarchProcess::
boundary (::std::auto_ptr< boundary_type > x)
{
  this->boundary_.set (x);
}

inline
const XsdGarchProcess::boundary_type& XsdGarchProcess::
boundary_default_value ()
{
  return boundary_default_value_;
}


// XsdHullWhiteProcess1D
// 

inline
const XsdHullWhiteProcess1D::kappa_optional& XsdHullWhiteProcess1D::
kappa () const
{
  return this->kappa_;
}

inline
XsdHullWhiteProcess1D::kappa_optional& XsdHullWhiteProcess1D::
kappa ()
{
  return this->kappa_;
}

inline
void XsdHullWhiteProcess1D::
kappa (const kappa_type& x)
{
  this->kappa_.set (x);
}

inline
void XsdHullWhiteProcess1D::
kappa (const kappa_optional& x)
{
  this->kappa_ = x;
}

inline
void XsdHullWhiteProcess1D::
kappa (::std::auto_ptr< kappa_type > x)
{
  this->kappa_.set (x);
}

inline
const XsdHullWhiteProcess1D::sigma_optional& XsdHullWhiteProcess1D::
sigma () const
{
  return this->sigma_;
}

inline
XsdHullWhiteProcess1D::sigma_optional& XsdHullWhiteProcess1D::
sigma ()
{
  return this->sigma_;
}

inline
void XsdHullWhiteProcess1D::
sigma (const sigma_type& x)
{
  this->sigma_.set (x);
}

inline
void XsdHullWhiteProcess1D::
sigma (const sigma_optional& x)
{
  this->sigma_ = x;
}

inline
void XsdHullWhiteProcess1D::
sigma (::std::auto_ptr< sigma_type > x)
{
  this->sigma_.set (x);
}


// XsdVasicekProcess1D
// 

inline
const XsdVasicekProcess1D::theta_optional& XsdVasicekProcess1D::
theta () const
{
  return this->theta_;
}

inline
XsdVasicekProcess1D::theta_optional& XsdVasicekProcess1D::
theta ()
{
  return this->theta_;
}

inline
void XsdVasicekProcess1D::
theta (const theta_type& x)
{
  this->theta_.set (x);
}

inline
void XsdVasicekProcess1D::
theta (const theta_optional& x)
{
  this->theta_ = x;
}

inline
void XsdVasicekProcess1D::
theta (::std::auto_ptr< theta_type > x)
{
  this->theta_.set (x);
}

inline
const XsdVasicekProcess1D::lambda_optional& XsdVasicekProcess1D::
lambda () const
{
  return this->lambda_;
}

inline
XsdVasicekProcess1D::lambda_optional& XsdVasicekProcess1D::
lambda ()
{
  return this->lambda_;
}

inline
void XsdVasicekProcess1D::
lambda (const lambda_type& x)
{
  this->lambda_.set (x);
}

inline
void XsdVasicekProcess1D::
lambda (const lambda_optional& x)
{
  this->lambda_ = x;
}

inline
void XsdVasicekProcess1D::
lambda (::std::auto_ptr< lambda_type > x)
{
  this->lambda_.set (x);
}


// XsdBlackKarasinskiProcess1D
// 

inline
const XsdBlackKarasinskiProcess1D::kappa_optional& XsdBlackKarasinskiProcess1D::
kappa () const
{
  return this->kappa_;
}

inline
XsdBlackKarasinskiProcess1D::kappa_optional& XsdBlackKarasinskiProcess1D::
kappa ()
{
  return this->kappa_;
}

inline
void XsdBlackKarasinskiProcess1D::
kappa (const kappa_type& x)
{
  this->kappa_.set (x);
}

inline
void XsdBlackKarasinskiProcess1D::
kappa (const kappa_optional& x)
{
  this->kappa_ = x;
}

inline
void XsdBlackKarasinskiProcess1D::
kappa (::std::auto_ptr< kappa_type > x)
{
  this->kappa_.set (x);
}

inline
const XsdBlackKarasinskiProcess1D::sigma_optional& XsdBlackKarasinskiProcess1D::
sigma () const
{
  return this->sigma_;
}

inline
XsdBlackKarasinskiProcess1D::sigma_optional& XsdBlackKarasinskiProcess1D::
sigma ()
{
  return this->sigma_;
}

inline
void XsdBlackKarasinskiProcess1D::
sigma (const sigma_type& x)
{
  this->sigma_.set (x);
}

inline
void XsdBlackKarasinskiProcess1D::
sigma (const sigma_optional& x)
{
  this->sigma_ = x;
}

inline
void XsdBlackKarasinskiProcess1D::
sigma (::std::auto_ptr< sigma_type > x)
{
  this->sigma_.set (x);
}


// XsdCoxIngersollRossProcess1D
// 

inline
const XsdCoxIngersollRossProcess1D::kappa_optional& XsdCoxIngersollRossProcess1D::
kappa () const
{
  return this->kappa_;
}

inline
XsdCoxIngersollRossProcess1D::kappa_optional& XsdCoxIngersollRossProcess1D::
kappa ()
{
  return this->kappa_;
}

inline
void XsdCoxIngersollRossProcess1D::
kappa (const kappa_type& x)
{
  this->kappa_.set (x);
}

inline
void XsdCoxIngersollRossProcess1D::
kappa (const kappa_optional& x)
{
  this->kappa_ = x;
}

inline
void XsdCoxIngersollRossProcess1D::
kappa (::std::auto_ptr< kappa_type > x)
{
  this->kappa_.set (x);
}

inline
const XsdCoxIngersollRossProcess1D::sigma_optional& XsdCoxIngersollRossProcess1D::
sigma () const
{
  return this->sigma_;
}

inline
XsdCoxIngersollRossProcess1D::sigma_optional& XsdCoxIngersollRossProcess1D::
sigma ()
{
  return this->sigma_;
}

inline
void XsdCoxIngersollRossProcess1D::
sigma (const sigma_type& x)
{
  this->sigma_.set (x);
}

inline
void XsdCoxIngersollRossProcess1D::
sigma (const sigma_optional& x)
{
  this->sigma_ = x;
}

inline
void XsdCoxIngersollRossProcess1D::
sigma (::std::auto_ptr< sigma_type > x)
{
  this->sigma_.set (x);
}

inline
const XsdCoxIngersollRossProcess1D::theta_optional& XsdCoxIngersollRossProcess1D::
theta () const
{
  return this->theta_;
}

inline
XsdCoxIngersollRossProcess1D::theta_optional& XsdCoxIngersollRossProcess1D::
theta ()
{
  return this->theta_;
}

inline
void XsdCoxIngersollRossProcess1D::
theta (const theta_type& x)
{
  this->theta_.set (x);
}

inline
void XsdCoxIngersollRossProcess1D::
theta (const theta_optional& x)
{
  this->theta_ = x;
}

inline
void XsdCoxIngersollRossProcess1D::
theta (::std::auto_ptr< theta_type > x)
{
  this->theta_.set (x);
}

inline
const XsdCoxIngersollRossProcess1D::extended_optional& XsdCoxIngersollRossProcess1D::
extended () const
{
  return this->extended_;
}

inline
XsdCoxIngersollRossProcess1D::extended_optional& XsdCoxIngersollRossProcess1D::
extended ()
{
  return this->extended_;
}

inline
void XsdCoxIngersollRossProcess1D::
extended (const extended_type& x)
{
  this->extended_.set (x);
}

inline
void XsdCoxIngersollRossProcess1D::
extended (const extended_optional& x)
{
  this->extended_ = x;
}

inline
XsdCoxIngersollRossProcess1D::extended_type XsdCoxIngersollRossProcess1D::
extended_default_value ()
{
  return extended_type (true);
}

inline
const XsdCoxIngersollRossProcess1D::transformed_optional& XsdCoxIngersollRossProcess1D::
transformed () const
{
  return this->transformed_;
}

inline
XsdCoxIngersollRossProcess1D::transformed_optional& XsdCoxIngersollRossProcess1D::
transformed ()
{
  return this->transformed_;
}

inline
void XsdCoxIngersollRossProcess1D::
transformed (const transformed_type& x)
{
  this->transformed_.set (x);
}

inline
void XsdCoxIngersollRossProcess1D::
transformed (const transformed_optional& x)
{
  this->transformed_ = x;
}

inline
XsdCoxIngersollRossProcess1D::transformed_type XsdCoxIngersollRossProcess1D::
transformed_default_value ()
{
  return transformed_type (true);
}


// XsdGaussianRateProcess2D
// 

inline
const XsdGaussianRateProcess2D::kappa1_optional& XsdGaussianRateProcess2D::
kappa1 () const
{
  return this->kappa1_;
}

inline
XsdGaussianRateProcess2D::kappa1_optional& XsdGaussianRateProcess2D::
kappa1 ()
{
  return this->kappa1_;
}

inline
void XsdGaussianRateProcess2D::
kappa1 (const kappa1_type& x)
{
  this->kappa1_.set (x);
}

inline
void XsdGaussianRateProcess2D::
kappa1 (const kappa1_optional& x)
{
  this->kappa1_ = x;
}

inline
void XsdGaussianRateProcess2D::
kappa1 (::std::auto_ptr< kappa1_type > x)
{
  this->kappa1_.set (x);
}

inline
const XsdGaussianRateProcess2D::kappa2_optional& XsdGaussianRateProcess2D::
kappa2 () const
{
  return this->kappa2_;
}

inline
XsdGaussianRateProcess2D::kappa2_optional& XsdGaussianRateProcess2D::
kappa2 ()
{
  return this->kappa2_;
}

inline
void XsdGaussianRateProcess2D::
kappa2 (const kappa2_type& x)
{
  this->kappa2_.set (x);
}

inline
void XsdGaussianRateProcess2D::
kappa2 (const kappa2_optional& x)
{
  this->kappa2_ = x;
}

inline
void XsdGaussianRateProcess2D::
kappa2 (::std::auto_ptr< kappa2_type > x)
{
  this->kappa2_.set (x);
}

inline
const XsdGaussianRateProcess2D::sigma1_optional& XsdGaussianRateProcess2D::
sigma1 () const
{
  return this->sigma1_;
}

inline
XsdGaussianRateProcess2D::sigma1_optional& XsdGaussianRateProcess2D::
sigma1 ()
{
  return this->sigma1_;
}

inline
void XsdGaussianRateProcess2D::
sigma1 (const sigma1_type& x)
{
  this->sigma1_.set (x);
}

inline
void XsdGaussianRateProcess2D::
sigma1 (const sigma1_optional& x)
{
  this->sigma1_ = x;
}

inline
void XsdGaussianRateProcess2D::
sigma1 (::std::auto_ptr< sigma1_type > x)
{
  this->sigma1_.set (x);
}

inline
const XsdGaussianRateProcess2D::sigma2_optional& XsdGaussianRateProcess2D::
sigma2 () const
{
  return this->sigma2_;
}

inline
XsdGaussianRateProcess2D::sigma2_optional& XsdGaussianRateProcess2D::
sigma2 ()
{
  return this->sigma2_;
}

inline
void XsdGaussianRateProcess2D::
sigma2 (const sigma2_type& x)
{
  this->sigma2_.set (x);
}

inline
void XsdGaussianRateProcess2D::
sigma2 (const sigma2_optional& x)
{
  this->sigma2_ = x;
}

inline
void XsdGaussianRateProcess2D::
sigma2 (::std::auto_ptr< sigma2_type > x)
{
  this->sigma2_.set (x);
}

inline
const XsdGaussianRateProcess2D::rho_optional& XsdGaussianRateProcess2D::
rho () const
{
  return this->rho_;
}

inline
XsdGaussianRateProcess2D::rho_optional& XsdGaussianRateProcess2D::
rho ()
{
  return this->rho_;
}

inline
void XsdGaussianRateProcess2D::
rho (const rho_type& x)
{
  this->rho_.set (x);
}

inline
void XsdGaussianRateProcess2D::
rho (const rho_optional& x)
{
  this->rho_ = x;
}

inline
void XsdGaussianRateProcess2D::
rho (::std::auto_ptr< rho_type > x)
{
  this->rho_.set (x);
}


// XsdLiborRateProcess
// 


// XsdWithdrawalProcess
// 

inline
const XsdWithdrawalProcess::level_optional& XsdWithdrawalProcess::
level () const
{
  return this->level_;
}

inline
XsdWithdrawalProcess::level_optional& XsdWithdrawalProcess::
level ()
{
  return this->level_;
}

inline
void XsdWithdrawalProcess::
level (const level_type& x)
{
  this->level_.set (x);
}

inline
void XsdWithdrawalProcess::
level (const level_optional& x)
{
  this->level_ = x;
}

inline
void XsdWithdrawalProcess::
level (::std::auto_ptr< level_type > x)
{
  this->level_.set (x);
}

inline
const XsdWithdrawalProcess::scale_optional& XsdWithdrawalProcess::
scale () const
{
  return this->scale_;
}

inline
XsdWithdrawalProcess::scale_optional& XsdWithdrawalProcess::
scale ()
{
  return this->scale_;
}

inline
void XsdWithdrawalProcess::
scale (const scale_type& x)
{
  this->scale_.set (x);
}

inline
void XsdWithdrawalProcess::
scale (const scale_optional& x)
{
  this->scale_ = x;
}

inline
void XsdWithdrawalProcess::
scale (::std::auto_ptr< scale_type > x)
{
  this->scale_.set (x);
}

inline
const XsdWithdrawalProcess::degree_optional& XsdWithdrawalProcess::
degree () const
{
  return this->degree_;
}

inline
XsdWithdrawalProcess::degree_optional& XsdWithdrawalProcess::
degree ()
{
  return this->degree_;
}

inline
void XsdWithdrawalProcess::
degree (const degree_type& x)
{
  this->degree_.set (x);
}

inline
void XsdWithdrawalProcess::
degree (const degree_optional& x)
{
  this->degree_ = x;
}

inline
void XsdWithdrawalProcess::
degree (::std::auto_ptr< degree_type > x)
{
  this->degree_.set (x);
}

inline
const XsdWithdrawalProcess::rho_optional& XsdWithdrawalProcess::
rho () const
{
  return this->rho_;
}

inline
XsdWithdrawalProcess::rho_optional& XsdWithdrawalProcess::
rho ()
{
  return this->rho_;
}

inline
void XsdWithdrawalProcess::
rho (const rho_type& x)
{
  this->rho_.set (x);
}

inline
void XsdWithdrawalProcess::
rho (const rho_optional& x)
{
  this->rho_ = x;
}

inline
void XsdWithdrawalProcess::
rho (::std::auto_ptr< rho_type > x)
{
  this->rho_.set (x);
}

inline
const XsdWithdrawalProcess::bounds_optional& XsdWithdrawalProcess::
bounds () const
{
  return this->bounds_;
}

inline
XsdWithdrawalProcess::bounds_optional& XsdWithdrawalProcess::
bounds ()
{
  return this->bounds_;
}

inline
void XsdWithdrawalProcess::
bounds (const bounds_type& x)
{
  this->bounds_.set (x);
}

inline
void XsdWithdrawalProcess::
bounds (const bounds_optional& x)
{
  this->bounds_ = x;
}

inline
void XsdWithdrawalProcess::
bounds (::std::auto_ptr< bounds_type > x)
{
  this->bounds_.set (x);
}

inline
const XsdWithdrawalProcess::normalize_optional& XsdWithdrawalProcess::
normalize () const
{
  return this->normalize_;
}

inline
XsdWithdrawalProcess::normalize_optional& XsdWithdrawalProcess::
normalize ()
{
  return this->normalize_;
}

inline
void XsdWithdrawalProcess::
normalize (const normalize_type& x)
{
  this->normalize_.set (x);
}

inline
void XsdWithdrawalProcess::
normalize (const normalize_optional& x)
{
  this->normalize_ = x;
}

inline
XsdWithdrawalProcess::normalize_type XsdWithdrawalProcess::
normalize_default_value ()
{
  return normalize_type (false);
}


// XsdHybridProcess
// 

inline
const XsdHybridProcess::marginal_type& XsdHybridProcess::
marginal () const
{
  return this->marginal_.get ();
}

inline
XsdHybridProcess::marginal_type& XsdHybridProcess::
marginal ()
{
  return this->marginal_.get ();
}

inline
void XsdHybridProcess::
marginal (const marginal_type& x)
{
  this->marginal_.set (x);
}

inline
void XsdHybridProcess::
marginal (::std::auto_ptr< marginal_type > x)
{
  this->marginal_.set (x);
}

inline
const XsdHybridProcess::copula_type& XsdHybridProcess::
copula () const
{
  return this->copula_.get ();
}

inline
XsdHybridProcess::copula_type& XsdHybridProcess::
copula ()
{
  return this->copula_.get ();
}

inline
void XsdHybridProcess::
copula (const copula_type& x)
{
  this->copula_.set (x);
}

inline
void XsdHybridProcess::
copula (::std::auto_ptr< copula_type > x)
{
  this->copula_.set (x);
}


// XsdCalibratedProcess
// 

inline
const XsdCalibratedProcess::process_type& XsdCalibratedProcess::
process () const
{
  return this->process_.get ();
}

inline
XsdCalibratedProcess::process_type& XsdCalibratedProcess::
process ()
{
  return this->process_.get ();
}

inline
void XsdCalibratedProcess::
process (const process_type& x)
{
  this->process_.set (x);
}

inline
void XsdCalibratedProcess::
process (::std::auto_ptr< process_type > x)
{
  this->process_.set (x);
}

inline
const XsdCalibratedProcess::benchmarks_sequence& XsdCalibratedProcess::
benchmarks () const
{
  return this->benchmarks_;
}

inline
XsdCalibratedProcess::benchmarks_sequence& XsdCalibratedProcess::
benchmarks ()
{
  return this->benchmarks_;
}

inline
void XsdCalibratedProcess::
benchmarks (const benchmarks_sequence& s)
{
  this->benchmarks_ = s;
}

inline
const XsdCalibratedProcess::constraints_optional& XsdCalibratedProcess::
constraints () const
{
  return this->constraints_;
}

inline
XsdCalibratedProcess::constraints_optional& XsdCalibratedProcess::
constraints ()
{
  return this->constraints_;
}

inline
void XsdCalibratedProcess::
constraints (const constraints_type& x)
{
  this->constraints_.set (x);
}

inline
void XsdCalibratedProcess::
constraints (const constraints_optional& x)
{
  this->constraints_ = x;
}

inline
void XsdCalibratedProcess::
constraints (::std::auto_ptr< constraints_type > x)
{
  this->constraints_.set (x);
}

inline
const XsdCalibratedProcess::errorType_optional& XsdCalibratedProcess::
errorType () const
{
  return this->errorType_;
}

inline
XsdCalibratedProcess::errorType_optional& XsdCalibratedProcess::
errorType ()
{
  return this->errorType_;
}

inline
void XsdCalibratedProcess::
errorType (const errorType_type& x)
{
  this->errorType_.set (x);
}

inline
void XsdCalibratedProcess::
errorType (const errorType_optional& x)
{
  this->errorType_ = x;
}

inline
void XsdCalibratedProcess::
errorType (::std::auto_ptr< errorType_type > x)
{
  this->errorType_.set (x);
}

inline
const XsdCalibratedProcess::errorType_type& XsdCalibratedProcess::
errorType_default_value ()
{
  return errorType_default_value_;
}

inline
const XsdCalibratedProcess::lazy_optional& XsdCalibratedProcess::
lazy () const
{
  return this->lazy_;
}

inline
XsdCalibratedProcess::lazy_optional& XsdCalibratedProcess::
lazy ()
{
  return this->lazy_;
}

inline
void XsdCalibratedProcess::
lazy (const lazy_type& x)
{
  this->lazy_.set (x);
}

inline
void XsdCalibratedProcess::
lazy (const lazy_optional& x)
{
  this->lazy_ = x;
}

inline
XsdCalibratedProcess::lazy_type XsdCalibratedProcess::
lazy_default_value ()
{
  return lazy_type (true);
}


// XsdDiscountProcess
// 

inline
const XsdDiscountProcess::scalar_optional& XsdDiscountProcess::
scalar () const
{
  return this->scalar_;
}

inline
XsdDiscountProcess::scalar_optional& XsdDiscountProcess::
scalar ()
{
  return this->scalar_;
}

inline
void XsdDiscountProcess::
scalar (const scalar_type& x)
{
  this->scalar_.set (x);
}

inline
void XsdDiscountProcess::
scalar (const scalar_optional& x)
{
  this->scalar_ = x;
}

inline
const XsdDiscountProcess::curve_optional& XsdDiscountProcess::
curve () const
{
  return this->curve_;
}

inline
XsdDiscountProcess::curve_optional& XsdDiscountProcess::
curve ()
{
  return this->curve_;
}

inline
void XsdDiscountProcess::
curve (const curve_type& x)
{
  this->curve_.set (x);
}

inline
void XsdDiscountProcess::
curve (const curve_optional& x)
{
  this->curve_ = x;
}

inline
void XsdDiscountProcess::
curve (::std::auto_ptr< curve_type > x)
{
  this->curve_.set (x);
}

inline
const XsdDiscountProcess::process_optional& XsdDiscountProcess::
process () const
{
  return this->process_;
}

inline
XsdDiscountProcess::process_optional& XsdDiscountProcess::
process ()
{
  return this->process_;
}

inline
void XsdDiscountProcess::
process (const process_type& x)
{
  this->process_.set (x);
}

inline
void XsdDiscountProcess::
process (const process_optional& x)
{
  this->process_ = x;
}

inline
void XsdDiscountProcess::
process (::std::auto_ptr< process_type > x)
{
  this->process_.set (x);
}


// XsdDiscountPair
// 

inline
const XsdDiscountPair::domestic_optional& XsdDiscountPair::
domestic () const
{
  return this->domestic_;
}

inline
XsdDiscountPair::domestic_optional& XsdDiscountPair::
domestic ()
{
  return this->domestic_;
}

inline
void XsdDiscountPair::
domestic (const domestic_type& x)
{
  this->domestic_.set (x);
}

inline
void XsdDiscountPair::
domestic (const domestic_optional& x)
{
  this->domestic_ = x;
}

inline
void XsdDiscountPair::
domestic (::std::auto_ptr< domestic_type > x)
{
  this->domestic_.set (x);
}

inline
const XsdDiscountPair::foreign_optional& XsdDiscountPair::
foreign () const
{
  return this->foreign_;
}

inline
XsdDiscountPair::foreign_optional& XsdDiscountPair::
foreign ()
{
  return this->foreign_;
}

inline
void XsdDiscountPair::
foreign (const foreign_type& x)
{
  this->foreign_.set (x);
}

inline
void XsdDiscountPair::
foreign (const foreign_optional& x)
{
  this->foreign_ = x;
}

inline
void XsdDiscountPair::
foreign (::std::auto_ptr< foreign_type > x)
{
  this->foreign_.set (x);
}


// XsdBatesDetJump
// 

inline
const XsdBatesDetJump::kappaLambda_optional& XsdBatesDetJump::
kappaLambda () const
{
  return this->kappaLambda_;
}

inline
XsdBatesDetJump::kappaLambda_optional& XsdBatesDetJump::
kappaLambda ()
{
  return this->kappaLambda_;
}

inline
void XsdBatesDetJump::
kappaLambda (const kappaLambda_type& x)
{
  this->kappaLambda_.set (x);
}

inline
void XsdBatesDetJump::
kappaLambda (const kappaLambda_optional& x)
{
  this->kappaLambda_ = x;
}

inline
XsdBatesDetJump::kappaLambda_type XsdBatesDetJump::
kappaLambda_default_value ()
{
  return kappaLambda_type (1.0);
}

inline
const XsdBatesDetJump::thetaLambda_optional& XsdBatesDetJump::
thetaLambda () const
{
  return this->thetaLambda_;
}

inline
XsdBatesDetJump::thetaLambda_optional& XsdBatesDetJump::
thetaLambda ()
{
  return this->thetaLambda_;
}

inline
void XsdBatesDetJump::
thetaLambda (const thetaLambda_type& x)
{
  this->thetaLambda_.set (x);
}

inline
void XsdBatesDetJump::
thetaLambda (const thetaLambda_optional& x)
{
  this->thetaLambda_ = x;
}

inline
XsdBatesDetJump::thetaLambda_type XsdBatesDetJump::
thetaLambda_default_value ()
{
  return thetaLambda_type (.1);
}


// XsdBatesDoubleExp
// 

inline
const XsdBatesDoubleExp::nuUp_optional& XsdBatesDoubleExp::
nuUp () const
{
  return this->nuUp_;
}

inline
XsdBatesDoubleExp::nuUp_optional& XsdBatesDoubleExp::
nuUp ()
{
  return this->nuUp_;
}

inline
void XsdBatesDoubleExp::
nuUp (const nuUp_type& x)
{
  this->nuUp_.set (x);
}

inline
void XsdBatesDoubleExp::
nuUp (const nuUp_optional& x)
{
  this->nuUp_ = x;
}

inline
XsdBatesDoubleExp::nuUp_type XsdBatesDoubleExp::
nuUp_default_value ()
{
  return nuUp_type (.1);
}

inline
const XsdBatesDoubleExp::nuDown_optional& XsdBatesDoubleExp::
nuDown () const
{
  return this->nuDown_;
}

inline
XsdBatesDoubleExp::nuDown_optional& XsdBatesDoubleExp::
nuDown ()
{
  return this->nuDown_;
}

inline
void XsdBatesDoubleExp::
nuDown (const nuDown_type& x)
{
  this->nuDown_.set (x);
}

inline
void XsdBatesDoubleExp::
nuDown (const nuDown_optional& x)
{
  this->nuDown_ = x;
}

inline
XsdBatesDoubleExp::nuDown_type XsdBatesDoubleExp::
nuDown_default_value ()
{
  return nuDown_type (.1);
}

inline
const XsdBatesDoubleExp::probability_optional& XsdBatesDoubleExp::
probability () const
{
  return this->probability_;
}

inline
XsdBatesDoubleExp::probability_optional& XsdBatesDoubleExp::
probability ()
{
  return this->probability_;
}

inline
void XsdBatesDoubleExp::
probability (const probability_type& x)
{
  this->probability_.set (x);
}

inline
void XsdBatesDoubleExp::
probability (const probability_optional& x)
{
  this->probability_ = x;
}

inline
void XsdBatesDoubleExp::
probability (::std::auto_ptr< probability_type > x)
{
  this->probability_.set (x);
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_MODEL_PROCESS_IXX
