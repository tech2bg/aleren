// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_MODEL_SWAP_CALC_IXX
#define CXX___SCHEMA_XSD_MODEL_SWAP_CALC_IXX

// Begin prologue.
//
//
// End prologue.

#include "market.ixx"

// XsdSwapLegResult
// 

inline
const XsdSwapLegResult::spread_optional& XsdSwapLegResult::
spread () const
{
  return this->spread_;
}

inline
XsdSwapLegResult::spread_optional& XsdSwapLegResult::
spread ()
{
  return this->spread_;
}

inline
void XsdSwapLegResult::
spread (const spread_type& x)
{
  this->spread_.set (x);
}

inline
void XsdSwapLegResult::
spread (const spread_optional& x)
{
  this->spread_ = x;
}

inline
void XsdSwapLegResult::
spread (::std::auto_ptr< spread_type > x)
{
  this->spread_.set (x);
}

inline
const XsdSwapLegResult::yield_optional& XsdSwapLegResult::
yield () const
{
  return this->yield_;
}

inline
XsdSwapLegResult::yield_optional& XsdSwapLegResult::
yield ()
{
  return this->yield_;
}

inline
void XsdSwapLegResult::
yield (const yield_type& x)
{
  this->yield_.set (x);
}

inline
void XsdSwapLegResult::
yield (const yield_optional& x)
{
  this->yield_ = x;
}

inline
void XsdSwapLegResult::
yield (::std::auto_ptr< yield_type > x)
{
  this->yield_.set (x);
}

inline
const XsdSwapLegResult::value_optional& XsdSwapLegResult::
value () const
{
  return this->value_;
}

inline
XsdSwapLegResult::value_optional& XsdSwapLegResult::
value ()
{
  return this->value_;
}

inline
void XsdSwapLegResult::
value (const value_type& x)
{
  this->value_.set (x);
}

inline
void XsdSwapLegResult::
value (const value_optional& x)
{
  this->value_ = x;
}

inline
void XsdSwapLegResult::
value (::std::auto_ptr< value_type > x)
{
  this->value_.set (x);
}


// XsdSwapResult
// 

inline
const XsdSwapResult::payLeg_sequence& XsdSwapResult::
payLeg () const
{
  return this->payLeg_;
}

inline
XsdSwapResult::payLeg_sequence& XsdSwapResult::
payLeg ()
{
  return this->payLeg_;
}

inline
void XsdSwapResult::
payLeg (const payLeg_sequence& s)
{
  this->payLeg_ = s;
}

inline
const XsdSwapResult::receiveLeg_sequence& XsdSwapResult::
receiveLeg () const
{
  return this->receiveLeg_;
}

inline
XsdSwapResult::receiveLeg_sequence& XsdSwapResult::
receiveLeg ()
{
  return this->receiveLeg_;
}

inline
void XsdSwapResult::
receiveLeg (const receiveLeg_sequence& s)
{
  this->receiveLeg_ = s;
}


// XsdSwapCalculator
// 

inline
const XsdSwapCalculator::result_optional& XsdSwapCalculator::
result () const
{
  return this->result_;
}

inline
XsdSwapCalculator::result_optional& XsdSwapCalculator::
result ()
{
  return this->result_;
}

inline
void XsdSwapCalculator::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
void XsdSwapCalculator::
result (const result_optional& x)
{
  this->result_ = x;
}

inline
void XsdSwapCalculator::
result (::std::auto_ptr< result_type > x)
{
  this->result_.set (x);
}

inline
const XsdSwapCalculator::swap_type& XsdSwapCalculator::
swap () const
{
  return this->swap_.get ();
}

inline
XsdSwapCalculator::swap_type& XsdSwapCalculator::
swap ()
{
  return this->swap_.get ();
}

inline
void XsdSwapCalculator::
swap (const swap_type& x)
{
  this->swap_.set (x);
}

inline
void XsdSwapCalculator::
swap (::std::auto_ptr< swap_type > x)
{
  this->swap_.set (x);
}

inline
const XsdSwapCalculator::input_type& XsdSwapCalculator::
input () const
{
  return this->input_.get ();
}

inline
XsdSwapCalculator::input_type& XsdSwapCalculator::
input ()
{
  return this->input_.get ();
}

inline
void XsdSwapCalculator::
input (const input_type& x)
{
  this->input_.set (x);
}

inline
void XsdSwapCalculator::
input (::std::auto_ptr< input_type > x)
{
  this->input_.set (x);
}

inline
const XsdSwapCalculator::discount_type& XsdSwapCalculator::
discount () const
{
  return this->discount_.get ();
}

inline
XsdSwapCalculator::discount_type& XsdSwapCalculator::
discount ()
{
  return this->discount_.get ();
}

inline
void XsdSwapCalculator::
discount (const discount_type& x)
{
  this->discount_.set (x);
}

inline
void XsdSwapCalculator::
discount (::std::auto_ptr< discount_type > x)
{
  this->discount_.set (x);
}

inline
const XsdSwapCalculator::market_type& XsdSwapCalculator::
market () const
{
  return this->market_.get ();
}

inline
XsdSwapCalculator::market_type& XsdSwapCalculator::
market ()
{
  return this->market_.get ();
}

inline
void XsdSwapCalculator::
market (const market_type& x)
{
  this->market_.set (x);
}

inline
void XsdSwapCalculator::
market (::std::auto_ptr< market_type > x)
{
  this->market_.set (x);
}

inline
const XsdSwapCalculator::params_optional& XsdSwapCalculator::
params () const
{
  return this->params_;
}

inline
XsdSwapCalculator::params_optional& XsdSwapCalculator::
params ()
{
  return this->params_;
}

inline
void XsdSwapCalculator::
params (const params_type& x)
{
  this->params_.set (x);
}

inline
void XsdSwapCalculator::
params (const params_optional& x)
{
  this->params_ = x;
}

inline
void XsdSwapCalculator::
params (::std::auto_ptr< params_type > x)
{
  this->params_.set (x);
}


// XsdSwapDiscount
// 

inline
const XsdSwapDiscount::pay_type& XsdSwapDiscount::
pay () const
{
  return this->pay_.get ();
}

inline
XsdSwapDiscount::pay_type& XsdSwapDiscount::
pay ()
{
  return this->pay_.get ();
}

inline
void XsdSwapDiscount::
pay (const pay_type& x)
{
  this->pay_.set (x);
}

inline
void XsdSwapDiscount::
pay (::std::auto_ptr< pay_type > x)
{
  this->pay_.set (x);
}

inline
const XsdSwapDiscount::receive_type& XsdSwapDiscount::
receive () const
{
  return this->receive_.get ();
}

inline
XsdSwapDiscount::receive_type& XsdSwapDiscount::
receive ()
{
  return this->receive_.get ();
}

inline
void XsdSwapDiscount::
receive (const receive_type& x)
{
  this->receive_.set (x);
}

inline
void XsdSwapDiscount::
receive (::std::auto_ptr< receive_type > x)
{
  this->receive_.set (x);
}


// XsdSwapInput
// 

inline
const XsdSwapInput::spread_optional& XsdSwapInput::
spread () const
{
  return this->spread_;
}

inline
XsdSwapInput::spread_optional& XsdSwapInput::
spread ()
{
  return this->spread_;
}

inline
void XsdSwapInput::
spread (const spread_type& x)
{
  this->spread_.set (x);
}

inline
void XsdSwapInput::
spread (const spread_optional& x)
{
  this->spread_ = x;
}

inline
void XsdSwapInput::
spread (::std::auto_ptr< spread_type > x)
{
  this->spread_.set (x);
}

inline
const XsdSwapInput::yield_optional& XsdSwapInput::
yield () const
{
  return this->yield_;
}

inline
XsdSwapInput::yield_optional& XsdSwapInput::
yield ()
{
  return this->yield_;
}

inline
void XsdSwapInput::
yield (const yield_type& x)
{
  this->yield_.set (x);
}

inline
void XsdSwapInput::
yield (const yield_optional& x)
{
  this->yield_ = x;
}

inline
void XsdSwapInput::
yield (::std::auto_ptr< yield_type > x)
{
  this->yield_.set (x);
}

inline
const XsdSwapInput::value_optional& XsdSwapInput::
value () const
{
  return this->value_;
}

inline
XsdSwapInput::value_optional& XsdSwapInput::
value ()
{
  return this->value_;
}

inline
void XsdSwapInput::
value (const value_type& x)
{
  this->value_.set (x);
}

inline
void XsdSwapInput::
value (const value_optional& x)
{
  this->value_ = x;
}

inline
void XsdSwapInput::
value (::std::auto_ptr< value_type > x)
{
  this->value_.set (x);
}

inline
const XsdSwapInput::legs_type& XsdSwapInput::
legs () const
{
  return this->legs_.get ();
}

inline
XsdSwapInput::legs_type& XsdSwapInput::
legs ()
{
  return this->legs_.get ();
}

inline
void XsdSwapInput::
legs (const legs_type& x)
{
  this->legs_.set (x);
}

inline
XsdSwapInput::legs_type XsdSwapInput::
legs_default_value ()
{
  return legs_type (false);
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_MODEL_SWAP_CALC_IXX
