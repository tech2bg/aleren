// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_MODEL_INFLATION_IXX
#define CXX___SCHEMA_XSD_MODEL_INFLATION_IXX

// Begin prologue.
//
//
// End prologue.

#include "discount.ixx"

// XsdInflationKey
// 

inline
const XsdInflationKey::currency_type& XsdInflationKey::
currency () const
{
  return this->currency_.get ();
}

inline
XsdInflationKey::currency_type& XsdInflationKey::
currency ()
{
  return this->currency_.get ();
}

inline
void XsdInflationKey::
currency (const currency_type& x)
{
  this->currency_.set (x);
}

inline
void XsdInflationKey::
currency (::std::auto_ptr< currency_type > x)
{
  this->currency_.set (x);
}

inline
const XsdInflationKey::currency_type& XsdInflationKey::
currency_default_value ()
{
  return currency_default_value_;
}


// XsdInflationCurve
// 

inline
const XsdInflationCurve::nominalDiscount_optional& XsdInflationCurve::
nominalDiscount () const
{
  return this->nominalDiscount_;
}

inline
XsdInflationCurve::nominalDiscount_optional& XsdInflationCurve::
nominalDiscount ()
{
  return this->nominalDiscount_;
}

inline
void XsdInflationCurve::
nominalDiscount (const nominalDiscount_type& x)
{
  this->nominalDiscount_.set (x);
}

inline
void XsdInflationCurve::
nominalDiscount (const nominalDiscount_optional& x)
{
  this->nominalDiscount_ = x;
}

inline
void XsdInflationCurve::
nominalDiscount (::std::auto_ptr< nominalDiscount_type > x)
{
  this->nominalDiscount_.set (x);
}

inline
const XsdInflationCurve::observationLag_optional& XsdInflationCurve::
observationLag () const
{
  return this->observationLag_;
}

inline
XsdInflationCurve::observationLag_optional& XsdInflationCurve::
observationLag ()
{
  return this->observationLag_;
}

inline
void XsdInflationCurve::
observationLag (const observationLag_type& x)
{
  this->observationLag_.set (x);
}

inline
void XsdInflationCurve::
observationLag (const observationLag_optional& x)
{
  this->observationLag_ = x;
}

inline
void XsdInflationCurve::
observationLag (::std::auto_ptr< observationLag_type > x)
{
  this->observationLag_.set (x);
}

inline
const XsdInflationCurve::observationLag_type& XsdInflationCurve::
observationLag_default_value ()
{
  return observationLag_default_value_;
}

inline
const XsdInflationCurve::inflationType_optional& XsdInflationCurve::
inflationType () const
{
  return this->inflationType_;
}

inline
XsdInflationCurve::inflationType_optional& XsdInflationCurve::
inflationType ()
{
  return this->inflationType_;
}

inline
void XsdInflationCurve::
inflationType (const inflationType_type& x)
{
  this->inflationType_.set (x);
}

inline
void XsdInflationCurve::
inflationType (const inflationType_optional& x)
{
  this->inflationType_ = x;
}

inline
void XsdInflationCurve::
inflationType (::std::auto_ptr< inflationType_type > x)
{
  this->inflationType_.set (x);
}

inline
const XsdInflationCurve::inflationType_type& XsdInflationCurve::
inflationType_default_value ()
{
  return inflationType_default_value_;
}

inline
const XsdInflationCurve::interpolatedIndex_optional& XsdInflationCurve::
interpolatedIndex () const
{
  return this->interpolatedIndex_;
}

inline
XsdInflationCurve::interpolatedIndex_optional& XsdInflationCurve::
interpolatedIndex ()
{
  return this->interpolatedIndex_;
}

inline
void XsdInflationCurve::
interpolatedIndex (const interpolatedIndex_type& x)
{
  this->interpolatedIndex_.set (x);
}

inline
void XsdInflationCurve::
interpolatedIndex (const interpolatedIndex_optional& x)
{
  this->interpolatedIndex_ = x;
}

inline
XsdInflationCurve::interpolatedIndex_type XsdInflationCurve::
interpolatedIndex_default_value ()
{
  return interpolatedIndex_type (false);
}

inline
const XsdInflationCurve::seasonality_optional& XsdInflationCurve::
seasonality () const
{
  return this->seasonality_;
}

inline
XsdInflationCurve::seasonality_optional& XsdInflationCurve::
seasonality ()
{
  return this->seasonality_;
}

inline
void XsdInflationCurve::
seasonality (const seasonality_type& x)
{
  this->seasonality_.set (x);
}

inline
void XsdInflationCurve::
seasonality (const seasonality_optional& x)
{
  this->seasonality_ = x;
}

inline
void XsdInflationCurve::
seasonality (::std::auto_ptr< seasonality_type > x)
{
  this->seasonality_.set (x);
}

inline
const XsdInflationCurve::schemaType_type& XsdInflationCurve::
schemaType () const
{
  return this->schemaType_.get ();
}

inline
const XsdInflationCurve::schemaType_type& XsdInflationCurve::
schemaType_default_value ()
{
  return schemaType_default_value_;
}


// XsdFlatInflationCurve
// 

inline
const XsdFlatInflationCurve::inflationRate_optional& XsdFlatInflationCurve::
inflationRate () const
{
  return this->inflationRate_;
}

inline
XsdFlatInflationCurve::inflationRate_optional& XsdFlatInflationCurve::
inflationRate ()
{
  return this->inflationRate_;
}

inline
void XsdFlatInflationCurve::
inflationRate (const inflationRate_type& x)
{
  this->inflationRate_.set (x);
}

inline
void XsdFlatInflationCurve::
inflationRate (const inflationRate_optional& x)
{
  this->inflationRate_ = x;
}

inline
XsdFlatInflationCurve::inflationRate_type XsdFlatInflationCurve::
inflationRate_default_value ()
{
  return inflationRate_type (.0);
}


// XsdSimpleInflationCurve
// 

inline
const XsdSimpleInflationCurve::curve_type& XsdSimpleInflationCurve::
curve () const
{
  return this->curve_.get ();
}

inline
XsdSimpleInflationCurve::curve_type& XsdSimpleInflationCurve::
curve ()
{
  return this->curve_.get ();
}

inline
void XsdSimpleInflationCurve::
curve (const curve_type& x)
{
  this->curve_.set (x);
}

inline
void XsdSimpleInflationCurve::
curve (::std::auto_ptr< curve_type > x)
{
  this->curve_.set (x);
}


// XsdInterpolatedInflationCurve
// 

inline
const XsdInterpolatedInflationCurve::rates_type& XsdInterpolatedInflationCurve::
rates () const
{
  return this->rates_.get ();
}

inline
XsdInterpolatedInflationCurve::rates_type& XsdInterpolatedInflationCurve::
rates ()
{
  return this->rates_.get ();
}

inline
void XsdInterpolatedInflationCurve::
rates (const rates_type& x)
{
  this->rates_.set (x);
}

inline
void XsdInterpolatedInflationCurve::
rates (::std::auto_ptr< rates_type > x)
{
  this->rates_.set (x);
}

inline
const XsdInterpolatedInflationCurve::interpolate_optional& XsdInterpolatedInflationCurve::
interpolate () const
{
  return this->interpolate_;
}

inline
XsdInterpolatedInflationCurve::interpolate_optional& XsdInterpolatedInflationCurve::
interpolate ()
{
  return this->interpolate_;
}

inline
void XsdInterpolatedInflationCurve::
interpolate (const interpolate_type& x)
{
  this->interpolate_.set (x);
}

inline
void XsdInterpolatedInflationCurve::
interpolate (const interpolate_optional& x)
{
  this->interpolate_ = x;
}

inline
void XsdInterpolatedInflationCurve::
interpolate (::std::auto_ptr< interpolate_type > x)
{
  this->interpolate_.set (x);
}

inline
const XsdInterpolatedInflationCurve::extrapolate_optional& XsdInterpolatedInflationCurve::
extrapolate () const
{
  return this->extrapolate_;
}

inline
XsdInterpolatedInflationCurve::extrapolate_optional& XsdInterpolatedInflationCurve::
extrapolate ()
{
  return this->extrapolate_;
}

inline
void XsdInterpolatedInflationCurve::
extrapolate (const extrapolate_type& x)
{
  this->extrapolate_.set (x);
}

inline
void XsdInterpolatedInflationCurve::
extrapolate (const extrapolate_optional& x)
{
  this->extrapolate_ = x;
}

inline
XsdInterpolatedInflationCurve::extrapolate_type XsdInterpolatedInflationCurve::
extrapolate_default_value ()
{
  return extrapolate_type (false);
}


// XsdCompositeInflationCurve
// 

inline
const XsdCompositeInflationCurve::negate_optional& XsdCompositeInflationCurve::
negate () const
{
  return this->negate_;
}

inline
XsdCompositeInflationCurve::negate_optional& XsdCompositeInflationCurve::
negate ()
{
  return this->negate_;
}

inline
void XsdCompositeInflationCurve::
negate (const negate_type& x)
{
  this->negate_.set (x);
}

inline
void XsdCompositeInflationCurve::
negate (const negate_optional& x)
{
  this->negate_ = x;
}

inline
void XsdCompositeInflationCurve::
negate (::std::auto_ptr< negate_type > x)
{
  this->negate_.set (x);
}

inline
const XsdCompositeInflationCurve::add_optional& XsdCompositeInflationCurve::
add () const
{
  return this->add_;
}

inline
XsdCompositeInflationCurve::add_optional& XsdCompositeInflationCurve::
add ()
{
  return this->add_;
}

inline
void XsdCompositeInflationCurve::
add (const add_type& x)
{
  this->add_.set (x);
}

inline
void XsdCompositeInflationCurve::
add (const add_optional& x)
{
  this->add_ = x;
}

inline
void XsdCompositeInflationCurve::
add (::std::auto_ptr< add_type > x)
{
  this->add_.set (x);
}

inline
const XsdCompositeInflationCurve::subtract_optional& XsdCompositeInflationCurve::
subtract () const
{
  return this->subtract_;
}

inline
XsdCompositeInflationCurve::subtract_optional& XsdCompositeInflationCurve::
subtract ()
{
  return this->subtract_;
}

inline
void XsdCompositeInflationCurve::
subtract (const subtract_type& x)
{
  this->subtract_.set (x);
}

inline
void XsdCompositeInflationCurve::
subtract (const subtract_optional& x)
{
  this->subtract_ = x;
}

inline
void XsdCompositeInflationCurve::
subtract (::std::auto_ptr< subtract_type > x)
{
  this->subtract_.set (x);
}

inline
const XsdCompositeInflationCurve::multiply_optional& XsdCompositeInflationCurve::
multiply () const
{
  return this->multiply_;
}

inline
XsdCompositeInflationCurve::multiply_optional& XsdCompositeInflationCurve::
multiply ()
{
  return this->multiply_;
}

inline
void XsdCompositeInflationCurve::
multiply (const multiply_type& x)
{
  this->multiply_.set (x);
}

inline
void XsdCompositeInflationCurve::
multiply (const multiply_optional& x)
{
  this->multiply_ = x;
}

inline
void XsdCompositeInflationCurve::
multiply (::std::auto_ptr< multiply_type > x)
{
  this->multiply_.set (x);
}

inline
const XsdCompositeInflationCurve::divide_optional& XsdCompositeInflationCurve::
divide () const
{
  return this->divide_;
}

inline
XsdCompositeInflationCurve::divide_optional& XsdCompositeInflationCurve::
divide ()
{
  return this->divide_;
}

inline
void XsdCompositeInflationCurve::
divide (const divide_type& x)
{
  this->divide_.set (x);
}

inline
void XsdCompositeInflationCurve::
divide (const divide_optional& x)
{
  this->divide_ = x;
}

inline
void XsdCompositeInflationCurve::
divide (::std::auto_ptr< divide_type > x)
{
  this->divide_.set (x);
}

inline
const XsdCompositeInflationCurve::min_optional& XsdCompositeInflationCurve::
min () const
{
  return this->min_;
}

inline
XsdCompositeInflationCurve::min_optional& XsdCompositeInflationCurve::
min ()
{
  return this->min_;
}

inline
void XsdCompositeInflationCurve::
min (const min_type& x)
{
  this->min_.set (x);
}

inline
void XsdCompositeInflationCurve::
min (const min_optional& x)
{
  this->min_ = x;
}

inline
void XsdCompositeInflationCurve::
min (::std::auto_ptr< min_type > x)
{
  this->min_.set (x);
}

inline
const XsdCompositeInflationCurve::max_optional& XsdCompositeInflationCurve::
max () const
{
  return this->max_;
}

inline
XsdCompositeInflationCurve::max_optional& XsdCompositeInflationCurve::
max ()
{
  return this->max_;
}

inline
void XsdCompositeInflationCurve::
max (const max_type& x)
{
  this->max_.set (x);
}

inline
void XsdCompositeInflationCurve::
max (const max_optional& x)
{
  this->max_ = x;
}

inline
void XsdCompositeInflationCurve::
max (::std::auto_ptr< max_type > x)
{
  this->max_.set (x);
}


// XsdImpliedInflationCurve
// 

inline
const XsdImpliedInflationCurve::realDiscount_type& XsdImpliedInflationCurve::
realDiscount () const
{
  return this->realDiscount_.get ();
}

inline
XsdImpliedInflationCurve::realDiscount_type& XsdImpliedInflationCurve::
realDiscount ()
{
  return this->realDiscount_.get ();
}

inline
void XsdImpliedInflationCurve::
realDiscount (const realDiscount_type& x)
{
  this->realDiscount_.set (x);
}

inline
void XsdImpliedInflationCurve::
realDiscount (::std::auto_ptr< realDiscount_type > x)
{
  this->realDiscount_.set (x);
}


// XsdInflationEvaluate
// 

inline
const XsdInflationEvaluate::result_optional& XsdInflationEvaluate::
result () const
{
  return this->result_;
}

inline
XsdInflationEvaluate::result_optional& XsdInflationEvaluate::
result ()
{
  return this->result_;
}

inline
void XsdInflationEvaluate::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
void XsdInflationEvaluate::
result (const result_optional& x)
{
  this->result_ = x;
}

inline
void XsdInflationEvaluate::
result (::std::auto_ptr< result_type > x)
{
  this->result_.set (x);
}

inline
const XsdInflationEvaluate::inflationType_optional& XsdInflationEvaluate::
inflationType () const
{
  return this->inflationType_;
}

inline
XsdInflationEvaluate::inflationType_optional& XsdInflationEvaluate::
inflationType ()
{
  return this->inflationType_;
}

inline
void XsdInflationEvaluate::
inflationType (const inflationType_type& x)
{
  this->inflationType_.set (x);
}

inline
void XsdInflationEvaluate::
inflationType (const inflationType_optional& x)
{
  this->inflationType_ = x;
}

inline
void XsdInflationEvaluate::
inflationType (::std::auto_ptr< inflationType_type > x)
{
  this->inflationType_.set (x);
}

inline
const XsdInflationEvaluate::inflationType_type& XsdInflationEvaluate::
inflationType_default_value ()
{
  return inflationType_default_value_;
}

inline
const XsdInflationEvaluate::dates_optional& XsdInflationEvaluate::
dates () const
{
  return this->dates_;
}

inline
XsdInflationEvaluate::dates_optional& XsdInflationEvaluate::
dates ()
{
  return this->dates_;
}

inline
void XsdInflationEvaluate::
dates (const dates_type& x)
{
  this->dates_.set (x);
}

inline
void XsdInflationEvaluate::
dates (const dates_optional& x)
{
  this->dates_ = x;
}

inline
void XsdInflationEvaluate::
dates (::std::auto_ptr< dates_type > x)
{
  this->dates_.set (x);
}

inline
const XsdInflationEvaluate::tenors_optional& XsdInflationEvaluate::
tenors () const
{
  return this->tenors_;
}

inline
XsdInflationEvaluate::tenors_optional& XsdInflationEvaluate::
tenors ()
{
  return this->tenors_;
}

inline
void XsdInflationEvaluate::
tenors (const tenors_type& x)
{
  this->tenors_.set (x);
}

inline
void XsdInflationEvaluate::
tenors (const tenors_optional& x)
{
  this->tenors_ = x;
}

inline
void XsdInflationEvaluate::
tenors (::std::auto_ptr< tenors_type > x)
{
  this->tenors_.set (x);
}

inline
const XsdInflationEvaluate::inflation_type& XsdInflationEvaluate::
inflation () const
{
  return this->inflation_.get ();
}

inline
XsdInflationEvaluate::inflation_type& XsdInflationEvaluate::
inflation ()
{
  return this->inflation_.get ();
}

inline
void XsdInflationEvaluate::
inflation (const inflation_type& x)
{
  this->inflation_.set (x);
}

inline
void XsdInflationEvaluate::
inflation (::std::auto_ptr< inflation_type > x)
{
  this->inflation_.set (x);
}


// XsdInflationArgs
// 

inline
const XsdInflationArgs::scalar_optional& XsdInflationArgs::
scalar () const
{
  return this->scalar_;
}

inline
XsdInflationArgs::scalar_optional& XsdInflationArgs::
scalar ()
{
  return this->scalar_;
}

inline
void XsdInflationArgs::
scalar (const scalar_type& x)
{
  this->scalar_.set (x);
}

inline
void XsdInflationArgs::
scalar (const scalar_optional& x)
{
  this->scalar_ = x;
}

inline
const XsdInflationArgs::curve_optional& XsdInflationArgs::
curve () const
{
  return this->curve_;
}

inline
XsdInflationArgs::curve_optional& XsdInflationArgs::
curve ()
{
  return this->curve_;
}

inline
void XsdInflationArgs::
curve (const curve_type& x)
{
  this->curve_.set (x);
}

inline
void XsdInflationArgs::
curve (const curve_optional& x)
{
  this->curve_ = x;
}

inline
void XsdInflationArgs::
curve (::std::auto_ptr< curve_type > x)
{
  this->curve_.set (x);
}

inline
const XsdInflationArgs::inflation_optional& XsdInflationArgs::
inflation () const
{
  return this->inflation_;
}

inline
XsdInflationArgs::inflation_optional& XsdInflationArgs::
inflation ()
{
  return this->inflation_;
}

inline
void XsdInflationArgs::
inflation (const inflation_type& x)
{
  this->inflation_.set (x);
}

inline
void XsdInflationArgs::
inflation (const inflation_optional& x)
{
  this->inflation_ = x;
}

inline
void XsdInflationArgs::
inflation (::std::auto_ptr< inflation_type > x)
{
  this->inflation_.set (x);
}


// XsdInflationBinary
// 

inline
const XsdInflationBinary::first_type& XsdInflationBinary::
first () const
{
  return this->first_.get ();
}

inline
XsdInflationBinary::first_type& XsdInflationBinary::
first ()
{
  return this->first_.get ();
}

inline
void XsdInflationBinary::
first (const first_type& x)
{
  this->first_.set (x);
}

inline
void XsdInflationBinary::
first (::std::auto_ptr< first_type > x)
{
  this->first_.set (x);
}

inline
const XsdInflationBinary::second_type& XsdInflationBinary::
second () const
{
  return this->second_.get ();
}

inline
XsdInflationBinary::second_type& XsdInflationBinary::
second ()
{
  return this->second_.get ();
}

inline
void XsdInflationBinary::
second (const second_type& x)
{
  this->second_.set (x);
}

inline
void XsdInflationBinary::
second (::std::auto_ptr< second_type > x)
{
  this->second_.set (x);
}


// XsdInflationSeasonality
// 

inline
const XsdInflationSeasonality::factors_type& XsdInflationSeasonality::
factors () const
{
  return this->factors_.get ();
}

inline
XsdInflationSeasonality::factors_type& XsdInflationSeasonality::
factors ()
{
  return this->factors_.get ();
}

inline
void XsdInflationSeasonality::
factors (const factors_type& x)
{
  this->factors_.set (x);
}

inline
void XsdInflationSeasonality::
factors (::std::auto_ptr< factors_type > x)
{
  this->factors_.set (x);
}

inline
const XsdInflationSeasonality::frequency_optional& XsdInflationSeasonality::
frequency () const
{
  return this->frequency_;
}

inline
XsdInflationSeasonality::frequency_optional& XsdInflationSeasonality::
frequency ()
{
  return this->frequency_;
}

inline
void XsdInflationSeasonality::
frequency (const frequency_type& x)
{
  this->frequency_.set (x);
}

inline
void XsdInflationSeasonality::
frequency (const frequency_optional& x)
{
  this->frequency_ = x;
}

inline
void XsdInflationSeasonality::
frequency (::std::auto_ptr< frequency_type > x)
{
  this->frequency_.set (x);
}

inline
const XsdInflationSeasonality::frequency_type& XsdInflationSeasonality::
frequency_default_value ()
{
  return frequency_default_value_;
}

inline
const XsdInflationSeasonality::baseDate_optional& XsdInflationSeasonality::
baseDate () const
{
  return this->baseDate_;
}

inline
XsdInflationSeasonality::baseDate_optional& XsdInflationSeasonality::
baseDate ()
{
  return this->baseDate_;
}

inline
void XsdInflationSeasonality::
baseDate (const baseDate_type& x)
{
  this->baseDate_.set (x);
}

inline
void XsdInflationSeasonality::
baseDate (const baseDate_optional& x)
{
  this->baseDate_ = x;
}

inline
void XsdInflationSeasonality::
baseDate (::std::auto_ptr< baseDate_type > x)
{
  this->baseDate_.set (x);
}


// XsdCalibratedInflationCurve
// 

inline
const XsdCalibratedInflationCurve::result_optional& XsdCalibratedInflationCurve::
result () const
{
  return this->result_;
}

inline
XsdCalibratedInflationCurve::result_optional& XsdCalibratedInflationCurve::
result ()
{
  return this->result_;
}

inline
void XsdCalibratedInflationCurve::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
void XsdCalibratedInflationCurve::
result (const result_optional& x)
{
  this->result_ = x;
}

inline
void XsdCalibratedInflationCurve::
result (::std::auto_ptr< result_type > x)
{
  this->result_.set (x);
}

inline
const XsdCalibratedInflationCurve::options_optional& XsdCalibratedInflationCurve::
options () const
{
  return this->options_;
}

inline
XsdCalibratedInflationCurve::options_optional& XsdCalibratedInflationCurve::
options ()
{
  return this->options_;
}

inline
void XsdCalibratedInflationCurve::
options (const options_type& x)
{
  this->options_.set (x);
}

inline
void XsdCalibratedInflationCurve::
options (const options_optional& x)
{
  this->options_ = x;
}

inline
void XsdCalibratedInflationCurve::
options (::std::auto_ptr< options_type > x)
{
  this->options_.set (x);
}

inline
const XsdCalibratedInflationCurve::market_optional& XsdCalibratedInflationCurve::
market () const
{
  return this->market_;
}

inline
XsdCalibratedInflationCurve::market_optional& XsdCalibratedInflationCurve::
market ()
{
  return this->market_;
}

inline
void XsdCalibratedInflationCurve::
market (const market_type& x)
{
  this->market_.set (x);
}

inline
void XsdCalibratedInflationCurve::
market (const market_optional& x)
{
  this->market_ = x;
}

inline
void XsdCalibratedInflationCurve::
market (::std::auto_ptr< market_type > x)
{
  this->market_.set (x);
}

inline
const XsdCalibratedInflationCurve::assumptions_optional& XsdCalibratedInflationCurve::
assumptions () const
{
  return this->assumptions_;
}

inline
XsdCalibratedInflationCurve::assumptions_optional& XsdCalibratedInflationCurve::
assumptions ()
{
  return this->assumptions_;
}

inline
void XsdCalibratedInflationCurve::
assumptions (const assumptions_type& x)
{
  this->assumptions_.set (x);
}

inline
void XsdCalibratedInflationCurve::
assumptions (const assumptions_optional& x)
{
  this->assumptions_ = x;
}

inline
void XsdCalibratedInflationCurve::
assumptions (::std::auto_ptr< assumptions_type > x)
{
  this->assumptions_.set (x);
}

inline
const XsdCalibratedInflationCurve::benchmark_sequence& XsdCalibratedInflationCurve::
benchmark () const
{
  return this->benchmark_;
}

inline
XsdCalibratedInflationCurve::benchmark_sequence& XsdCalibratedInflationCurve::
benchmark ()
{
  return this->benchmark_;
}

inline
void XsdCalibratedInflationCurve::
benchmark (const benchmark_sequence& s)
{
  this->benchmark_ = s;
}


// XsdBootstrapInflationCurve
// 

inline
const XsdBootstrapInflationCurve::interpolate_optional& XsdBootstrapInflationCurve::
interpolate () const
{
  return this->interpolate_;
}

inline
XsdBootstrapInflationCurve::interpolate_optional& XsdBootstrapInflationCurve::
interpolate ()
{
  return this->interpolate_;
}

inline
void XsdBootstrapInflationCurve::
interpolate (const interpolate_type& x)
{
  this->interpolate_.set (x);
}

inline
void XsdBootstrapInflationCurve::
interpolate (const interpolate_optional& x)
{
  this->interpolate_ = x;
}

inline
void XsdBootstrapInflationCurve::
interpolate (::std::auto_ptr< interpolate_type > x)
{
  this->interpolate_.set (x);
}

inline
const XsdBootstrapInflationCurve::extrapolate_optional& XsdBootstrapInflationCurve::
extrapolate () const
{
  return this->extrapolate_;
}

inline
XsdBootstrapInflationCurve::extrapolate_optional& XsdBootstrapInflationCurve::
extrapolate ()
{
  return this->extrapolate_;
}

inline
void XsdBootstrapInflationCurve::
extrapolate (const extrapolate_type& x)
{
  this->extrapolate_.set (x);
}

inline
void XsdBootstrapInflationCurve::
extrapolate (const extrapolate_optional& x)
{
  this->extrapolate_ = x;
}

inline
void XsdBootstrapInflationCurve::
extrapolate (::std::auto_ptr< extrapolate_type > x)
{
  this->extrapolate_.set (x);
}

inline
const XsdBootstrapInflationCurve::extrapolate_type& XsdBootstrapInflationCurve::
extrapolate_default_value ()
{
  return extrapolate_default_value_;
}

inline
const XsdBootstrapInflationCurve::baseRate_optional& XsdBootstrapInflationCurve::
baseRate () const
{
  return this->baseRate_;
}

inline
XsdBootstrapInflationCurve::baseRate_optional& XsdBootstrapInflationCurve::
baseRate ()
{
  return this->baseRate_;
}

inline
void XsdBootstrapInflationCurve::
baseRate (const baseRate_type& x)
{
  this->baseRate_.set (x);
}

inline
void XsdBootstrapInflationCurve::
baseRate (const baseRate_optional& x)
{
  this->baseRate_ = x;
}

inline
XsdBootstrapInflationCurve::baseRate_type XsdBootstrapInflationCurve::
baseRate_default_value ()
{
  return baseRate_type (.0);
}

inline
const XsdBootstrapInflationCurve::accuracy_optional& XsdBootstrapInflationCurve::
accuracy () const
{
  return this->accuracy_;
}

inline
XsdBootstrapInflationCurve::accuracy_optional& XsdBootstrapInflationCurve::
accuracy ()
{
  return this->accuracy_;
}

inline
void XsdBootstrapInflationCurve::
accuracy (const accuracy_type& x)
{
  this->accuracy_.set (x);
}

inline
void XsdBootstrapInflationCurve::
accuracy (const accuracy_optional& x)
{
  this->accuracy_ = x;
}

inline
void XsdBootstrapInflationCurve::
accuracy (::std::auto_ptr< accuracy_type > x)
{
  this->accuracy_.set (x);
}

inline
XsdBootstrapInflationCurve::accuracy_type XsdBootstrapInflationCurve::
accuracy_default_value ()
{
  return accuracy_type (1.0e-4);
}


// XsdLeastSquaresInflationCurve
// 

inline
const XsdLeastSquaresInflationCurve::spline_type& XsdLeastSquaresInflationCurve::
spline () const
{
  return this->spline_.get ();
}

inline
XsdLeastSquaresInflationCurve::spline_type& XsdLeastSquaresInflationCurve::
spline ()
{
  return this->spline_.get ();
}

inline
void XsdLeastSquaresInflationCurve::
spline (const spline_type& x)
{
  this->spline_.set (x);
}

inline
void XsdLeastSquaresInflationCurve::
spline (::std::auto_ptr< spline_type > x)
{
  this->spline_.set (x);
}

inline
const XsdLeastSquaresInflationCurve::solver_optional& XsdLeastSquaresInflationCurve::
solver () const
{
  return this->solver_;
}

inline
XsdLeastSquaresInflationCurve::solver_optional& XsdLeastSquaresInflationCurve::
solver ()
{
  return this->solver_;
}

inline
void XsdLeastSquaresInflationCurve::
solver (const solver_type& x)
{
  this->solver_.set (x);
}

inline
void XsdLeastSquaresInflationCurve::
solver (const solver_optional& x)
{
  this->solver_ = x;
}

inline
void XsdLeastSquaresInflationCurve::
solver (::std::auto_ptr< solver_type > x)
{
  this->solver_.set (x);
}

inline
const XsdLeastSquaresInflationCurve::penalty_optional& XsdLeastSquaresInflationCurve::
penalty () const
{
  return this->penalty_;
}

inline
XsdLeastSquaresInflationCurve::penalty_optional& XsdLeastSquaresInflationCurve::
penalty ()
{
  return this->penalty_;
}

inline
void XsdLeastSquaresInflationCurve::
penalty (const penalty_type& x)
{
  this->penalty_.set (x);
}

inline
void XsdLeastSquaresInflationCurve::
penalty (const penalty_optional& x)
{
  this->penalty_ = x;
}

inline
void XsdLeastSquaresInflationCurve::
penalty (::std::auto_ptr< penalty_type > x)
{
  this->penalty_.set (x);
}


// XsdInflationResult
// 

inline
const XsdInflationResult::curve_type& XsdInflationResult::
curve () const
{
  return this->curve_.get ();
}

inline
XsdInflationResult::curve_type& XsdInflationResult::
curve ()
{
  return this->curve_.get ();
}

inline
void XsdInflationResult::
curve (const curve_type& x)
{
  this->curve_.set (x);
}

inline
void XsdInflationResult::
curve (::std::auto_ptr< curve_type > x)
{
  this->curve_.set (x);
}


// accuracy
// 


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_MODEL_INFLATION_IXX
