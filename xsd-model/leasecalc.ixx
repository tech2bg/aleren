// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_MODEL_LEASECALC_IXX
#define CXX___SCHEMA_XSD_MODEL_LEASECALC_IXX

// Begin prologue.
//
//
// End prologue.

#include "leasemodel.ixx"

// XsdLeaseCalc
// 

inline
const XsdLeaseCalc::model_type& XsdLeaseCalc::
model () const
{
  return this->model_.get ();
}

inline
XsdLeaseCalc::model_type& XsdLeaseCalc::
model ()
{
  return this->model_.get ();
}

inline
void XsdLeaseCalc::
model (const model_type& x)
{
  this->model_.set (x);
}

inline
void XsdLeaseCalc::
model (::std::auto_ptr< model_type > x)
{
  this->model_.set (x);
}

inline
const XsdLeaseCalc::numPaths_optional& XsdLeaseCalc::
numPaths () const
{
  return this->numPaths_;
}

inline
XsdLeaseCalc::numPaths_optional& XsdLeaseCalc::
numPaths ()
{
  return this->numPaths_;
}

inline
void XsdLeaseCalc::
numPaths (const numPaths_type& x)
{
  this->numPaths_.set (x);
}

inline
void XsdLeaseCalc::
numPaths (const numPaths_optional& x)
{
  this->numPaths_ = x;
}

inline
XsdLeaseCalc::numPaths_type XsdLeaseCalc::
numPaths_default_value ()
{
  return numPaths_type (1000ULL);
}

inline
const XsdLeaseCalc::rngSeed_optional& XsdLeaseCalc::
rngSeed () const
{
  return this->rngSeed_;
}

inline
XsdLeaseCalc::rngSeed_optional& XsdLeaseCalc::
rngSeed ()
{
  return this->rngSeed_;
}

inline
void XsdLeaseCalc::
rngSeed (const rngSeed_type& x)
{
  this->rngSeed_.set (x);
}

inline
void XsdLeaseCalc::
rngSeed (const rngSeed_optional& x)
{
  this->rngSeed_ = x;
}

inline
XsdLeaseCalc::rngSeed_type XsdLeaseCalc::
rngSeed_default_value ()
{
  return rngSeed_type (0LL);
}

inline
const XsdLeaseCalc::horizon_optional& XsdLeaseCalc::
horizon () const
{
  return this->horizon_;
}

inline
XsdLeaseCalc::horizon_optional& XsdLeaseCalc::
horizon ()
{
  return this->horizon_;
}

inline
void XsdLeaseCalc::
horizon (const horizon_type& x)
{
  this->horizon_.set (x);
}

inline
void XsdLeaseCalc::
horizon (const horizon_optional& x)
{
  this->horizon_ = x;
}

inline
void XsdLeaseCalc::
horizon (::std::auto_ptr< horizon_type > x)
{
  this->horizon_.set (x);
}

inline
const XsdLeaseCalc::horizon_type& XsdLeaseCalc::
horizon_default_value ()
{
  return horizon_default_value_;
}

inline
const XsdLeaseCalc::npv_type& XsdLeaseCalc::
npv () const
{
  return this->npv_.get ();
}

inline
XsdLeaseCalc::npv_type& XsdLeaseCalc::
npv ()
{
  return this->npv_.get ();
}

inline
void XsdLeaseCalc::
npv (const npv_type& x)
{
  this->npv_.set (x);
}

inline
void XsdLeaseCalc::
npv (::std::auto_ptr< npv_type > x)
{
  this->npv_.set (x);
}

inline
const XsdLeaseCalc::flows_type& XsdLeaseCalc::
flows () const
{
  return this->flows_.get ();
}

inline
XsdLeaseCalc::flows_type& XsdLeaseCalc::
flows ()
{
  return this->flows_.get ();
}

inline
void XsdLeaseCalc::
flows (const flows_type& x)
{
  this->flows_.set (x);
}

inline
void XsdLeaseCalc::
flows (::std::auto_ptr< flows_type > x)
{
  this->flows_.set (x);
}

inline
const XsdLeaseCalc::frequency_optional& XsdLeaseCalc::
frequency () const
{
  return this->frequency_;
}

inline
XsdLeaseCalc::frequency_optional& XsdLeaseCalc::
frequency ()
{
  return this->frequency_;
}

inline
void XsdLeaseCalc::
frequency (const frequency_type& x)
{
  this->frequency_.set (x);
}

inline
void XsdLeaseCalc::
frequency (const frequency_optional& x)
{
  this->frequency_ = x;
}

inline
void XsdLeaseCalc::
frequency (::std::auto_ptr< frequency_type > x)
{
  this->frequency_.set (x);
}

inline
const XsdLeaseCalc::frequency_type& XsdLeaseCalc::
frequency_default_value ()
{
  return frequency_default_value_;
}

inline
const XsdLeaseCalc::discount_optional& XsdLeaseCalc::
discount () const
{
  return this->discount_;
}

inline
XsdLeaseCalc::discount_optional& XsdLeaseCalc::
discount ()
{
  return this->discount_;
}

inline
void XsdLeaseCalc::
discount (const discount_type& x)
{
  this->discount_.set (x);
}

inline
void XsdLeaseCalc::
discount (const discount_optional& x)
{
  this->discount_ = x;
}

inline
void XsdLeaseCalc::
discount (::std::auto_ptr< discount_type > x)
{
  this->discount_.set (x);
}

inline
const XsdLeaseCalc::defaults_optional& XsdLeaseCalc::
defaults () const
{
  return this->defaults_;
}

inline
XsdLeaseCalc::defaults_optional& XsdLeaseCalc::
defaults ()
{
  return this->defaults_;
}

inline
void XsdLeaseCalc::
defaults (const defaults_type& x)
{
  this->defaults_.set (x);
}

inline
void XsdLeaseCalc::
defaults (const defaults_optional& x)
{
  this->defaults_ = x;
}

inline
void XsdLeaseCalc::
defaults (::std::auto_ptr< defaults_type > x)
{
  this->defaults_.set (x);
}

inline
const XsdLeaseCalc::depreciation_optional& XsdLeaseCalc::
depreciation () const
{
  return this->depreciation_;
}

inline
XsdLeaseCalc::depreciation_optional& XsdLeaseCalc::
depreciation ()
{
  return this->depreciation_;
}

inline
void XsdLeaseCalc::
depreciation (const depreciation_type& x)
{
  this->depreciation_.set (x);
}

inline
void XsdLeaseCalc::
depreciation (const depreciation_optional& x)
{
  this->depreciation_ = x;
}

inline
void XsdLeaseCalc::
depreciation (::std::auto_ptr< depreciation_type > x)
{
  this->depreciation_.set (x);
}

inline
const XsdLeaseCalc::params_optional& XsdLeaseCalc::
params () const
{
  return this->params_;
}

inline
XsdLeaseCalc::params_optional& XsdLeaseCalc::
params ()
{
  return this->params_;
}

inline
void XsdLeaseCalc::
params (const params_type& x)
{
  this->params_.set (x);
}

inline
void XsdLeaseCalc::
params (const params_optional& x)
{
  this->params_ = x;
}

inline
void XsdLeaseCalc::
params (::std::auto_ptr< params_type > x)
{
  this->params_.set (x);
}


// XsdLeaseOutput
// 

inline
const XsdLeaseOutput::lease_optional& XsdLeaseOutput::
lease () const
{
  return this->lease_;
}

inline
XsdLeaseOutput::lease_optional& XsdLeaseOutput::
lease ()
{
  return this->lease_;
}

inline
void XsdLeaseOutput::
lease (const lease_type& x)
{
  this->lease_.set (x);
}

inline
void XsdLeaseOutput::
lease (const lease_optional& x)
{
  this->lease_ = x;
}

inline
void XsdLeaseOutput::
lease (::std::auto_ptr< lease_type > x)
{
  this->lease_.set (x);
}

inline
const XsdLeaseOutput::lease_type& XsdLeaseOutput::
lease_default_value ()
{
  return lease_default_value_;
}

inline
const XsdLeaseOutput::pool_optional& XsdLeaseOutput::
pool () const
{
  return this->pool_;
}

inline
XsdLeaseOutput::pool_optional& XsdLeaseOutput::
pool ()
{
  return this->pool_;
}

inline
void XsdLeaseOutput::
pool (const pool_type& x)
{
  this->pool_.set (x);
}

inline
void XsdLeaseOutput::
pool (const pool_optional& x)
{
  this->pool_ = x;
}

inline
void XsdLeaseOutput::
pool (::std::auto_ptr< pool_type > x)
{
  this->pool_.set (x);
}

inline
const XsdLeaseOutput::pool_type& XsdLeaseOutput::
pool_default_value ()
{
  return pool_default_value_;
}


// XsdLeaseNpv
// 

inline
const XsdLeaseNpv::percentiles_optional& XsdLeaseNpv::
percentiles () const
{
  return this->percentiles_;
}

inline
XsdLeaseNpv::percentiles_optional& XsdLeaseNpv::
percentiles ()
{
  return this->percentiles_;
}

inline
void XsdLeaseNpv::
percentiles (const percentiles_type& x)
{
  this->percentiles_.set (x);
}

inline
void XsdLeaseNpv::
percentiles (const percentiles_optional& x)
{
  this->percentiles_ = x;
}

inline
void XsdLeaseNpv::
percentiles (::std::auto_ptr< percentiles_type > x)
{
  this->percentiles_.set (x);
}

inline
const XsdLeaseNpv::percentiles_type& XsdLeaseNpv::
percentiles_default_value ()
{
  return percentiles_default_value_;
}

inline
const XsdLeaseNpv::detailed_type& XsdLeaseNpv::
detailed () const
{
  return this->detailed_.get ();
}

inline
XsdLeaseNpv::detailed_type& XsdLeaseNpv::
detailed ()
{
  return this->detailed_.get ();
}

inline
void XsdLeaseNpv::
detailed (const detailed_type& x)
{
  this->detailed_.set (x);
}

inline
XsdLeaseNpv::detailed_type XsdLeaseNpv::
detailed_default_value ()
{
  return detailed_type (false);
}


// XsdLeaseExtra
// 

inline
const XsdLeaseExtra::percentiles_optional& XsdLeaseExtra::
percentiles () const
{
  return this->percentiles_;
}

inline
XsdLeaseExtra::percentiles_optional& XsdLeaseExtra::
percentiles ()
{
  return this->percentiles_;
}

inline
void XsdLeaseExtra::
percentiles (const percentiles_type& x)
{
  this->percentiles_.set (x);
}

inline
void XsdLeaseExtra::
percentiles (const percentiles_optional& x)
{
  this->percentiles_ = x;
}

inline
void XsdLeaseExtra::
percentiles (::std::auto_ptr< percentiles_type > x)
{
  this->percentiles_.set (x);
}

inline
const XsdLeaseExtra::percentiles_type& XsdLeaseExtra::
percentiles_default_value ()
{
  return percentiles_default_value_;
}

inline
const XsdLeaseExtra::type_type& XsdLeaseExtra::
type () const
{
  return this->type_.get ();
}

inline
XsdLeaseExtra::type_type& XsdLeaseExtra::
type ()
{
  return this->type_.get ();
}

inline
void XsdLeaseExtra::
type (const type_type& x)
{
  this->type_.set (x);
}

inline
void XsdLeaseExtra::
type (::std::auto_ptr< type_type > x)
{
  this->type_.set (x);
}

inline
const XsdLeaseExtra::type_type& XsdLeaseExtra::
type_default_value ()
{
  return type_default_value_;
}


// XsdResultFactor
// 

inline
const XsdResultFactor::summary_optional& XsdResultFactor::
summary () const
{
  return this->summary_;
}

inline
XsdResultFactor::summary_optional& XsdResultFactor::
summary ()
{
  return this->summary_;
}

inline
void XsdResultFactor::
summary (const summary_type& x)
{
  this->summary_.set (x);
}

inline
void XsdResultFactor::
summary (const summary_optional& x)
{
  this->summary_ = x;
}

inline
void XsdResultFactor::
summary (::std::auto_ptr< summary_type > x)
{
  this->summary_.set (x);
}

inline
const XsdResultFactor::expected_optional& XsdResultFactor::
expected () const
{
  return this->expected_;
}

inline
XsdResultFactor::expected_optional& XsdResultFactor::
expected ()
{
  return this->expected_;
}

inline
void XsdResultFactor::
expected (const expected_type& x)
{
  this->expected_.set (x);
}

inline
void XsdResultFactor::
expected (const expected_optional& x)
{
  this->expected_ = x;
}

inline
void XsdResultFactor::
expected (::std::auto_ptr< expected_type > x)
{
  this->expected_.set (x);
}

inline
const XsdResultFactor::path_sequence& XsdResultFactor::
path () const
{
  return this->path_;
}

inline
XsdResultFactor::path_sequence& XsdResultFactor::
path ()
{
  return this->path_;
}

inline
void XsdResultFactor::
path (const path_sequence& s)
{
  this->path_ = s;
}


// XsdResultStateFrequency
// 

inline
const XsdResultStateFrequency::expected_type& XsdResultStateFrequency::
expected () const
{
  return this->expected_.get ();
}

inline
XsdResultStateFrequency::expected_type& XsdResultStateFrequency::
expected ()
{
  return this->expected_.get ();
}

inline
void XsdResultStateFrequency::
expected (const expected_type& x)
{
  this->expected_.set (x);
}

inline
void XsdResultStateFrequency::
expected (::std::auto_ptr< expected_type > x)
{
  this->expected_.set (x);
}

inline
const XsdResultStateFrequency::path_sequence& XsdResultStateFrequency::
path () const
{
  return this->path_;
}

inline
XsdResultStateFrequency::path_sequence& XsdResultStateFrequency::
path ()
{
  return this->path_;
}

inline
void XsdResultStateFrequency::
path (const path_sequence& s)
{
  this->path_ = s;
}

inline
const XsdResultStateFrequency::region_type& XsdResultStateFrequency::
region () const
{
  return this->region_.get ();
}

inline
XsdResultStateFrequency::region_type& XsdResultStateFrequency::
region ()
{
  return this->region_.get ();
}

inline
void XsdResultStateFrequency::
region (const region_type& x)
{
  this->region_.set (x);
}

inline
void XsdResultStateFrequency::
region (::std::auto_ptr< region_type > x)
{
  this->region_.set (x);
}


// XsdResultLease
// 

inline
const XsdResultLease::npv_optional& XsdResultLease::
npv () const
{
  return this->npv_;
}

inline
XsdResultLease::npv_optional& XsdResultLease::
npv ()
{
  return this->npv_;
}

inline
void XsdResultLease::
npv (const npv_type& x)
{
  this->npv_.set (x);
}

inline
void XsdResultLease::
npv (const npv_optional& x)
{
  this->npv_ = x;
}

inline
void XsdResultLease::
npv (::std::auto_ptr< npv_type > x)
{
  this->npv_.set (x);
}

inline
const XsdResultLease::flows_optional& XsdResultLease::
flows () const
{
  return this->flows_;
}

inline
XsdResultLease::flows_optional& XsdResultLease::
flows ()
{
  return this->flows_;
}

inline
void XsdResultLease::
flows (const flows_type& x)
{
  this->flows_.set (x);
}

inline
void XsdResultLease::
flows (const flows_optional& x)
{
  this->flows_ = x;
}

inline
void XsdResultLease::
flows (::std::auto_ptr< flows_type > x)
{
  this->flows_.set (x);
}

inline
const XsdResultLease::name_type& XsdResultLease::
name () const
{
  return this->name_.get ();
}

inline
XsdResultLease::name_type& XsdResultLease::
name ()
{
  return this->name_.get ();
}

inline
void XsdResultLease::
name (const name_type& x)
{
  this->name_.set (x);
}

inline
void XsdResultLease::
name (::std::auto_ptr< name_type > x)
{
  this->name_.set (x);
}


// XsdResultLeaseFlows
// 

inline
const XsdResultLeaseFlows::expected_optional& XsdResultLeaseFlows::
expected () const
{
  return this->expected_;
}

inline
XsdResultLeaseFlows::expected_optional& XsdResultLeaseFlows::
expected ()
{
  return this->expected_;
}

inline
void XsdResultLeaseFlows::
expected (const expected_type& x)
{
  this->expected_.set (x);
}

inline
void XsdResultLeaseFlows::
expected (const expected_optional& x)
{
  this->expected_ = x;
}

inline
void XsdResultLeaseFlows::
expected (::std::auto_ptr< expected_type > x)
{
  this->expected_.set (x);
}

inline
const XsdResultLeaseFlows::path_sequence& XsdResultLeaseFlows::
path () const
{
  return this->path_;
}

inline
XsdResultLeaseFlows::path_sequence& XsdResultLeaseFlows::
path ()
{
  return this->path_;
}

inline
void XsdResultLeaseFlows::
path (const path_sequence& s)
{
  this->path_ = s;
}


// XsdResultLeaseNpv
// 

inline
const XsdResultLeaseNpv::summary_optional& XsdResultLeaseNpv::
summary () const
{
  return this->summary_;
}

inline
XsdResultLeaseNpv::summary_optional& XsdResultLeaseNpv::
summary ()
{
  return this->summary_;
}

inline
void XsdResultLeaseNpv::
summary (const summary_type& x)
{
  this->summary_.set (x);
}

inline
void XsdResultLeaseNpv::
summary (const summary_optional& x)
{
  this->summary_ = x;
}

inline
void XsdResultLeaseNpv::
summary (::std::auto_ptr< summary_type > x)
{
  this->summary_.set (x);
}

inline
const XsdResultLeaseNpv::expected_optional& XsdResultLeaseNpv::
expected () const
{
  return this->expected_;
}

inline
XsdResultLeaseNpv::expected_optional& XsdResultLeaseNpv::
expected ()
{
  return this->expected_;
}

inline
void XsdResultLeaseNpv::
expected (const expected_type& x)
{
  this->expected_.set (x);
}

inline
void XsdResultLeaseNpv::
expected (const expected_optional& x)
{
  this->expected_ = x;
}

inline
const XsdResultLeaseNpv::path_optional& XsdResultLeaseNpv::
path () const
{
  return this->path_;
}

inline
XsdResultLeaseNpv::path_optional& XsdResultLeaseNpv::
path ()
{
  return this->path_;
}

inline
void XsdResultLeaseNpv::
path (const path_type& x)
{
  this->path_.set (x);
}

inline
void XsdResultLeaseNpv::
path (const path_optional& x)
{
  this->path_ = x;
}

inline
void XsdResultLeaseNpv::
path (::std::auto_ptr< path_type > x)
{
  this->path_.set (x);
}

inline
const XsdResultLeaseNpv::details_sequence& XsdResultLeaseNpv::
details () const
{
  return this->details_;
}

inline
XsdResultLeaseNpv::details_sequence& XsdResultLeaseNpv::
details ()
{
  return this->details_;
}

inline
void XsdResultLeaseNpv::
details (const details_sequence& s)
{
  this->details_ = s;
}

inline
const XsdResultLeaseNpv::type_optional& XsdResultLeaseNpv::
type () const
{
  return this->type_;
}

inline
XsdResultLeaseNpv::type_optional& XsdResultLeaseNpv::
type ()
{
  return this->type_;
}

inline
void XsdResultLeaseNpv::
type (const type_type& x)
{
  this->type_.set (x);
}

inline
void XsdResultLeaseNpv::
type (const type_optional& x)
{
  this->type_ = x;
}

inline
void XsdResultLeaseNpv::
type (::std::auto_ptr< type_type > x)
{
  this->type_.set (x);
}

inline
const XsdResultLeaseNpv::currency_type& XsdResultLeaseNpv::
currency () const
{
  return this->currency_.get ();
}

inline
XsdResultLeaseNpv::currency_type& XsdResultLeaseNpv::
currency ()
{
  return this->currency_.get ();
}

inline
void XsdResultLeaseNpv::
currency (const currency_type& x)
{
  this->currency_.set (x);
}

inline
void XsdResultLeaseNpv::
currency (::std::auto_ptr< currency_type > x)
{
  this->currency_.set (x);
}

inline
const XsdResultLeaseNpv::currency_type& XsdResultLeaseNpv::
currency_default_value ()
{
  return currency_default_value_;
}


// XsdResultLeasePool
// 

inline
const XsdResultLeasePool::lease_sequence& XsdResultLeasePool::
lease () const
{
  return this->lease_;
}

inline
XsdResultLeasePool::lease_sequence& XsdResultLeasePool::
lease ()
{
  return this->lease_;
}

inline
void XsdResultLeasePool::
lease (const lease_sequence& s)
{
  this->lease_ = s;
}

inline
const XsdResultLeasePool::frequency_sequence& XsdResultLeasePool::
frequency () const
{
  return this->frequency_;
}

inline
XsdResultLeasePool::frequency_sequence& XsdResultLeasePool::
frequency ()
{
  return this->frequency_;
}

inline
void XsdResultLeasePool::
frequency (const frequency_sequence& s)
{
  this->frequency_ = s;
}

inline
const XsdResultLeasePool::discount_optional& XsdResultLeasePool::
discount () const
{
  return this->discount_;
}

inline
XsdResultLeasePool::discount_optional& XsdResultLeasePool::
discount ()
{
  return this->discount_;
}

inline
void XsdResultLeasePool::
discount (const discount_type& x)
{
  this->discount_.set (x);
}

inline
void XsdResultLeasePool::
discount (const discount_optional& x)
{
  this->discount_ = x;
}

inline
void XsdResultLeasePool::
discount (::std::auto_ptr< discount_type > x)
{
  this->discount_.set (x);
}

inline
const XsdResultLeasePool::depreciation_sequence& XsdResultLeasePool::
depreciation () const
{
  return this->depreciation_;
}

inline
XsdResultLeasePool::depreciation_sequence& XsdResultLeasePool::
depreciation ()
{
  return this->depreciation_;
}

inline
void XsdResultLeasePool::
depreciation (const depreciation_sequence& s)
{
  this->depreciation_ = s;
}

inline
const XsdResultLeasePool::paths_type& XsdResultLeasePool::
paths () const
{
  return this->paths_.get ();
}

inline
XsdResultLeasePool::paths_type& XsdResultLeasePool::
paths ()
{
  return this->paths_.get ();
}

inline
void XsdResultLeasePool::
paths (const paths_type& x)
{
  this->paths_.set (x);
}

inline
XsdResultLeasePool::paths_type XsdResultLeasePool::
paths_default_value ()
{
  return paths_type (0ULL);
}

inline
const XsdResultLeasePool::leases_optional& XsdResultLeasePool::
leases () const
{
  return this->leases_;
}

inline
XsdResultLeasePool::leases_optional& XsdResultLeasePool::
leases ()
{
  return this->leases_;
}

inline
void XsdResultLeasePool::
leases (const leases_type& x)
{
  this->leases_.set (x);
}

inline
void XsdResultLeasePool::
leases (const leases_optional& x)
{
  this->leases_ = x;
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_MODEL_LEASECALC_IXX
