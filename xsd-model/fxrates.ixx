// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_MODEL_FXRATES_IXX
#define CXX___SCHEMA_XSD_MODEL_FXRATES_IXX

// Begin prologue.
//
//
// End prologue.

#include "term-structure.ixx"

// XsdFXRateCurve
// 

inline
const XsdFXRateCurve::domestic_type& XsdFXRateCurve::
domestic () const
{
  return this->domestic_.get ();
}

inline
XsdFXRateCurve::domestic_type& XsdFXRateCurve::
domestic ()
{
  return this->domestic_.get ();
}

inline
void XsdFXRateCurve::
domestic (const domestic_type& x)
{
  this->domestic_.set (x);
}

inline
void XsdFXRateCurve::
domestic (::std::auto_ptr< domestic_type > x)
{
  this->domestic_.set (x);
}

inline
const XsdFXRateCurve::foreign_type& XsdFXRateCurve::
foreign () const
{
  return this->foreign_.get ();
}

inline
XsdFXRateCurve::foreign_type& XsdFXRateCurve::
foreign ()
{
  return this->foreign_.get ();
}

inline
void XsdFXRateCurve::
foreign (const foreign_type& x)
{
  this->foreign_.set (x);
}

inline
void XsdFXRateCurve::
foreign (::std::auto_ptr< foreign_type > x)
{
  this->foreign_.set (x);
}

inline
const XsdFXRateCurve::schemaType_type& XsdFXRateCurve::
schemaType () const
{
  return this->schemaType_.get ();
}

inline
const XsdFXRateCurve::schemaType_type& XsdFXRateCurve::
schemaType_default_value ()
{
  return schemaType_default_value_;
}


// XsdFlatFXCurve
// 

inline
const XsdFlatFXCurve::fxRate_type& XsdFlatFXCurve::
fxRate () const
{
  return this->fxRate_.get ();
}

inline
XsdFlatFXCurve::fxRate_type& XsdFlatFXCurve::
fxRate ()
{
  return this->fxRate_.get ();
}

inline
void XsdFlatFXCurve::
fxRate (const fxRate_type& x)
{
  this->fxRate_.set (x);
}


// XsdSimpleFXCurve
// 

inline
const XsdSimpleFXCurve::fxRate_type& XsdSimpleFXCurve::
fxRate () const
{
  return this->fxRate_.get ();
}

inline
XsdSimpleFXCurve::fxRate_type& XsdSimpleFXCurve::
fxRate ()
{
  return this->fxRate_.get ();
}

inline
void XsdSimpleFXCurve::
fxRate (const fxRate_type& x)
{
  this->fxRate_.set (x);
}

inline
void XsdSimpleFXCurve::
fxRate (::std::auto_ptr< fxRate_type > x)
{
  this->fxRate_.set (x);
}


// XsdFXRateCalculator
// 

inline
const XsdFXRateCalculator::result_optional& XsdFXRateCalculator::
result () const
{
  return this->result_;
}

inline
XsdFXRateCalculator::result_optional& XsdFXRateCalculator::
result ()
{
  return this->result_;
}

inline
void XsdFXRateCalculator::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
void XsdFXRateCalculator::
result (const result_optional& x)
{
  this->result_ = x;
}

inline
void XsdFXRateCalculator::
result (::std::auto_ptr< result_type > x)
{
  this->result_.set (x);
}

inline
const XsdFXRateCalculator::fxrates_sequence& XsdFXRateCalculator::
fxrates () const
{
  return this->fxrates_;
}

inline
XsdFXRateCalculator::fxrates_sequence& XsdFXRateCalculator::
fxrates ()
{
  return this->fxrates_;
}

inline
void XsdFXRateCalculator::
fxrates (const fxrates_sequence& s)
{
  this->fxrates_ = s;
}

inline
const XsdFXRateCalculator::domestic_type& XsdFXRateCalculator::
domestic () const
{
  return this->domestic_.get ();
}

inline
XsdFXRateCalculator::domestic_type& XsdFXRateCalculator::
domestic ()
{
  return this->domestic_.get ();
}

inline
void XsdFXRateCalculator::
domestic (const domestic_type& x)
{
  this->domestic_.set (x);
}

inline
void XsdFXRateCalculator::
domestic (::std::auto_ptr< domestic_type > x)
{
  this->domestic_.set (x);
}

inline
const XsdFXRateCalculator::foreign_type& XsdFXRateCalculator::
foreign () const
{
  return this->foreign_.get ();
}

inline
XsdFXRateCalculator::foreign_type& XsdFXRateCalculator::
foreign ()
{
  return this->foreign_.get ();
}

inline
void XsdFXRateCalculator::
foreign (const foreign_type& x)
{
  this->foreign_.set (x);
}

inline
void XsdFXRateCalculator::
foreign (::std::auto_ptr< foreign_type > x)
{
  this->foreign_.set (x);
}

inline
const XsdFXRateCalculator::date_type& XsdFXRateCalculator::
date () const
{
  return this->date_.get ();
}

inline
XsdFXRateCalculator::date_type& XsdFXRateCalculator::
date ()
{
  return this->date_.get ();
}

inline
void XsdFXRateCalculator::
date (const date_type& x)
{
  this->date_.set (x);
}

inline
void XsdFXRateCalculator::
date (::std::auto_ptr< date_type > x)
{
  this->date_.set (x);
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_MODEL_FXRATES_IXX
