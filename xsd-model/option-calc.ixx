// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_MODEL_OPTION_CALC_IXX
#define CXX___SCHEMA_XSD_MODEL_OPTION_CALC_IXX

// Begin prologue.
//
//
// End prologue.

#include "market.ixx"

// XsdOptionResult
// 

inline
const XsdOptionResult::premium_optional& XsdOptionResult::
premium () const
{
  return this->premium_;
}

inline
XsdOptionResult::premium_optional& XsdOptionResult::
premium ()
{
  return this->premium_;
}

inline
void XsdOptionResult::
premium (const premium_type& x)
{
  this->premium_.set (x);
}

inline
void XsdOptionResult::
premium (const premium_optional& x)
{
  this->premium_ = x;
}

inline
const XsdOptionResult::volatility_optional& XsdOptionResult::
volatility () const
{
  return this->volatility_;
}

inline
XsdOptionResult::volatility_optional& XsdOptionResult::
volatility ()
{
  return this->volatility_;
}

inline
void XsdOptionResult::
volatility (const volatility_type& x)
{
  this->volatility_.set (x);
}

inline
void XsdOptionResult::
volatility (const volatility_optional& x)
{
  this->volatility_ = x;
}

inline
const XsdOptionResult::delta_optional& XsdOptionResult::
delta () const
{
  return this->delta_;
}

inline
XsdOptionResult::delta_optional& XsdOptionResult::
delta ()
{
  return this->delta_;
}

inline
void XsdOptionResult::
delta (const delta_type& x)
{
  this->delta_.set (x);
}

inline
void XsdOptionResult::
delta (const delta_optional& x)
{
  this->delta_ = x;
}

inline
const XsdOptionResult::gamma_optional& XsdOptionResult::
gamma () const
{
  return this->gamma_;
}

inline
XsdOptionResult::gamma_optional& XsdOptionResult::
gamma ()
{
  return this->gamma_;
}

inline
void XsdOptionResult::
gamma (const gamma_type& x)
{
  this->gamma_.set (x);
}

inline
void XsdOptionResult::
gamma (const gamma_optional& x)
{
  this->gamma_ = x;
}

inline
const XsdOptionResult::vega_optional& XsdOptionResult::
vega () const
{
  return this->vega_;
}

inline
XsdOptionResult::vega_optional& XsdOptionResult::
vega ()
{
  return this->vega_;
}

inline
void XsdOptionResult::
vega (const vega_type& x)
{
  this->vega_.set (x);
}

inline
void XsdOptionResult::
vega (const vega_optional& x)
{
  this->vega_ = x;
}

inline
const XsdOptionResult::theta_optional& XsdOptionResult::
theta () const
{
  return this->theta_;
}

inline
XsdOptionResult::theta_optional& XsdOptionResult::
theta ()
{
  return this->theta_;
}

inline
void XsdOptionResult::
theta (const theta_type& x)
{
  this->theta_.set (x);
}

inline
void XsdOptionResult::
theta (const theta_optional& x)
{
  this->theta_ = x;
}

inline
const XsdOptionResult::rho_optional& XsdOptionResult::
rho () const
{
  return this->rho_;
}

inline
XsdOptionResult::rho_optional& XsdOptionResult::
rho ()
{
  return this->rho_;
}

inline
void XsdOptionResult::
rho (const rho_type& x)
{
  this->rho_.set (x);
}

inline
void XsdOptionResult::
rho (const rho_optional& x)
{
  this->rho_ = x;
}

inline
const XsdOptionResult::dyield_optional& XsdOptionResult::
dyield () const
{
  return this->dyield_;
}

inline
XsdOptionResult::dyield_optional& XsdOptionResult::
dyield ()
{
  return this->dyield_;
}

inline
void XsdOptionResult::
dyield (const dyield_type& x)
{
  this->dyield_.set (x);
}

inline
void XsdOptionResult::
dyield (const dyield_optional& x)
{
  this->dyield_ = x;
}

inline
const XsdOptionResult::dstrike_optional& XsdOptionResult::
dstrike () const
{
  return this->dstrike_;
}

inline
XsdOptionResult::dstrike_optional& XsdOptionResult::
dstrike ()
{
  return this->dstrike_;
}

inline
void XsdOptionResult::
dstrike (const dstrike_type& x)
{
  this->dstrike_.set (x);
}

inline
void XsdOptionResult::
dstrike (const dstrike_optional& x)
{
  this->dstrike_ = x;
}

inline
const XsdOptionResult::itmProb_optional& XsdOptionResult::
itmProb () const
{
  return this->itmProb_;
}

inline
XsdOptionResult::itmProb_optional& XsdOptionResult::
itmProb ()
{
  return this->itmProb_;
}

inline
void XsdOptionResult::
itmProb (const itmProb_type& x)
{
  this->itmProb_.set (x);
}

inline
void XsdOptionResult::
itmProb (const itmProb_optional& x)
{
  this->itmProb_ = x;
}


// XsdOptionCalculator
// 

inline
const XsdOptionCalculator::option_type& XsdOptionCalculator::
option () const
{
  return this->option_.get ();
}

inline
XsdOptionCalculator::option_type& XsdOptionCalculator::
option ()
{
  return this->option_.get ();
}

inline
void XsdOptionCalculator::
option (const option_type& x)
{
  this->option_.set (x);
}

inline
void XsdOptionCalculator::
option (::std::auto_ptr< option_type > x)
{
  this->option_.set (x);
}

inline
const XsdOptionCalculator::solver_type& XsdOptionCalculator::
solver () const
{
  return this->solver_.get ();
}

inline
XsdOptionCalculator::solver_type& XsdOptionCalculator::
solver ()
{
  return this->solver_.get ();
}

inline
void XsdOptionCalculator::
solver (const solver_type& x)
{
  this->solver_.set (x);
}

inline
void XsdOptionCalculator::
solver (::std::auto_ptr< solver_type > x)
{
  this->solver_.set (x);
}

inline
const XsdOptionCalculator::input_optional& XsdOptionCalculator::
input () const
{
  return this->input_;
}

inline
XsdOptionCalculator::input_optional& XsdOptionCalculator::
input ()
{
  return this->input_;
}

inline
void XsdOptionCalculator::
input (const input_type& x)
{
  this->input_.set (x);
}

inline
void XsdOptionCalculator::
input (const input_optional& x)
{
  this->input_ = x;
}

inline
void XsdOptionCalculator::
input (::std::auto_ptr< input_type > x)
{
  this->input_.set (x);
}

inline
const XsdOptionCalculator::volatility_optional& XsdOptionCalculator::
volatility () const
{
  return this->volatility_;
}

inline
XsdOptionCalculator::volatility_optional& XsdOptionCalculator::
volatility ()
{
  return this->volatility_;
}

inline
void XsdOptionCalculator::
volatility (const volatility_type& x)
{
  this->volatility_.set (x);
}

inline
void XsdOptionCalculator::
volatility (const volatility_optional& x)
{
  this->volatility_ = x;
}

inline
XsdOptionCalculator::volatility_type XsdOptionCalculator::
volatility_default_value ()
{
  return volatility_type (false);
}

inline
const XsdOptionCalculator::greeks_optional& XsdOptionCalculator::
greeks () const
{
  return this->greeks_;
}

inline
XsdOptionCalculator::greeks_optional& XsdOptionCalculator::
greeks ()
{
  return this->greeks_;
}

inline
void XsdOptionCalculator::
greeks (const greeks_type& x)
{
  this->greeks_.set (x);
}

inline
void XsdOptionCalculator::
greeks (const greeks_optional& x)
{
  this->greeks_ = x;
}

inline
XsdOptionCalculator::greeks_type XsdOptionCalculator::
greeks_default_value ()
{
  return greeks_type (false);
}

inline
const XsdOptionCalculator::market_optional& XsdOptionCalculator::
market () const
{
  return this->market_;
}

inline
XsdOptionCalculator::market_optional& XsdOptionCalculator::
market ()
{
  return this->market_;
}

inline
void XsdOptionCalculator::
market (const market_type& x)
{
  this->market_.set (x);
}

inline
void XsdOptionCalculator::
market (const market_optional& x)
{
  this->market_ = x;
}

inline
void XsdOptionCalculator::
market (::std::auto_ptr< market_type > x)
{
  this->market_.set (x);
}

inline
const XsdOptionCalculator::params_optional& XsdOptionCalculator::
params () const
{
  return this->params_;
}

inline
XsdOptionCalculator::params_optional& XsdOptionCalculator::
params ()
{
  return this->params_;
}

inline
void XsdOptionCalculator::
params (const params_type& x)
{
  this->params_.set (x);
}

inline
void XsdOptionCalculator::
params (const params_optional& x)
{
  this->params_ = x;
}

inline
void XsdOptionCalculator::
params (::std::auto_ptr< params_type > x)
{
  this->params_.set (x);
}

inline
const XsdOptionCalculator::bounds_optional& XsdOptionCalculator::
bounds () const
{
  return this->bounds_;
}

inline
XsdOptionCalculator::bounds_optional& XsdOptionCalculator::
bounds ()
{
  return this->bounds_;
}

inline
void XsdOptionCalculator::
bounds (const bounds_type& x)
{
  this->bounds_.set (x);
}

inline
void XsdOptionCalculator::
bounds (const bounds_optional& x)
{
  this->bounds_ = x;
}

inline
void XsdOptionCalculator::
bounds (::std::auto_ptr< bounds_type > x)
{
  this->bounds_.set (x);
}


// XsdOptionInput
// 

inline
const XsdOptionInput::shift_optional& XsdOptionInput::
shift () const
{
  return this->shift_;
}

inline
XsdOptionInput::shift_optional& XsdOptionInput::
shift ()
{
  return this->shift_;
}

inline
void XsdOptionInput::
shift (const shift_type& x)
{
  this->shift_.set (x);
}

inline
void XsdOptionInput::
shift (const shift_optional& x)
{
  this->shift_ = x;
}

inline
XsdOptionInput::shift_type XsdOptionInput::
shift_default_value ()
{
  return shift_type (false);
}

inline
const XsdOptionInput::premium_optional& XsdOptionInput::
premium () const
{
  return this->premium_;
}

inline
XsdOptionInput::premium_optional& XsdOptionInput::
premium ()
{
  return this->premium_;
}

inline
void XsdOptionInput::
premium (const premium_type& x)
{
  this->premium_.set (x);
}

inline
void XsdOptionInput::
premium (const premium_optional& x)
{
  this->premium_ = x;
}

inline
const XsdOptionInput::volatility_optional& XsdOptionInput::
volatility () const
{
  return this->volatility_;
}

inline
XsdOptionInput::volatility_optional& XsdOptionInput::
volatility ()
{
  return this->volatility_;
}

inline
void XsdOptionInput::
volatility (const volatility_type& x)
{
  this->volatility_.set (x);
}

inline
void XsdOptionInput::
volatility (const volatility_optional& x)
{
  this->volatility_ = x;
}


// XsdOptionSetType
// 

inline
XsdOptionSetType::
XsdOptionSetType ()
: ::xml_schema::string ()
{
}

inline
XsdOptionSetType::
XsdOptionSetType (value v)
: ::xml_schema::string (_xsd_XsdOptionSetType_literals_[v])
{
}

inline
XsdOptionSetType::
XsdOptionSetType (const char* v)
: ::xml_schema::string (v)
{
}

inline
XsdOptionSetType::
XsdOptionSetType (const ::std::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdOptionSetType::
XsdOptionSetType (const ::xml_schema::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdOptionSetType::
XsdOptionSetType (const XsdOptionSetType& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
: ::xml_schema::string (v, f, c)
{
}

inline
XsdOptionSetType& XsdOptionSetType::
operator= (value v)
{
  static_cast< ::xml_schema::string& > (*this) = 
  ::xml_schema::string (_xsd_XsdOptionSetType_literals_[v]);

  return *this;
}


// XsdOptionGetType
// 

inline
XsdOptionGetType::
XsdOptionGetType ()
: ::xml_schema::string ()
{
}

inline
XsdOptionGetType::
XsdOptionGetType (value v)
: ::xml_schema::string (_xsd_XsdOptionGetType_literals_[v])
{
}

inline
XsdOptionGetType::
XsdOptionGetType (const char* v)
: ::xml_schema::string (v)
{
}

inline
XsdOptionGetType::
XsdOptionGetType (const ::std::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdOptionGetType::
XsdOptionGetType (const ::xml_schema::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdOptionGetType::
XsdOptionGetType (const XsdOptionGetType& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
: ::xml_schema::string (v, f, c)
{
}

inline
XsdOptionGetType& XsdOptionGetType::
operator= (value v)
{
  static_cast< ::xml_schema::string& > (*this) = 
  ::xml_schema::string (_xsd_XsdOptionGetType_literals_[v]);

  return *this;
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_MODEL_OPTION_CALC_IXX
