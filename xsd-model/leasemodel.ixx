// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_MODEL_LEASEMODEL_IXX
#define CXX___SCHEMA_XSD_MODEL_LEASEMODEL_IXX

// Begin prologue.
//
//
// End prologue.

#include "hazard.ixx"

#include "process.ixx"

// XsdLeaseCycle
// 

inline
const XsdLeaseCycle::frequency_optional& XsdLeaseCycle::
frequency () const
{
  return this->frequency_;
}

inline
XsdLeaseCycle::frequency_optional& XsdLeaseCycle::
frequency ()
{
  return this->frequency_;
}

inline
void XsdLeaseCycle::
frequency (const frequency_type& x)
{
  this->frequency_.set (x);
}

inline
void XsdLeaseCycle::
frequency (const frequency_optional& x)
{
  this->frequency_ = x;
}

inline
void XsdLeaseCycle::
frequency (::std::auto_ptr< frequency_type > x)
{
  this->frequency_.set (x);
}

inline
const XsdLeaseCycle::frequency_type& XsdLeaseCycle::
frequency_default_value ()
{
  return frequency_default_value_;
}

inline
const XsdLeaseCycle::region_sequence& XsdLeaseCycle::
region () const
{
  return this->region_;
}

inline
XsdLeaseCycle::region_sequence& XsdLeaseCycle::
region ()
{
  return this->region_;
}

inline
void XsdLeaseCycle::
region (const region_sequence& s)
{
  this->region_ = s;
}

inline
const XsdLeaseCycle::states_type& XsdLeaseCycle::
states () const
{
  return this->states_.get ();
}

inline
XsdLeaseCycle::states_type& XsdLeaseCycle::
states ()
{
  return this->states_.get ();
}

inline
void XsdLeaseCycle::
states (const states_type& x)
{
  this->states_.set (x);
}

inline
void XsdLeaseCycle::
states (::std::auto_ptr< states_type > x)
{
  this->states_.set (x);
}

inline
const XsdLeaseCycle::correlation_optional& XsdLeaseCycle::
correlation () const
{
  return this->correlation_;
}

inline
XsdLeaseCycle::correlation_optional& XsdLeaseCycle::
correlation ()
{
  return this->correlation_;
}

inline
void XsdLeaseCycle::
correlation (const correlation_type& x)
{
  this->correlation_.set (x);
}

inline
void XsdLeaseCycle::
correlation (const correlation_optional& x)
{
  this->correlation_ = x;
}

inline
void XsdLeaseCycle::
correlation (::std::auto_ptr< correlation_type > x)
{
  this->correlation_.set (x);
}

inline
const XsdLeaseCycle::random_type& XsdLeaseCycle::
random () const
{
  return this->random_.get ();
}

inline
XsdLeaseCycle::random_type& XsdLeaseCycle::
random ()
{
  return this->random_.get ();
}

inline
void XsdLeaseCycle::
random (const random_type& x)
{
  this->random_.set (x);
}

inline
XsdLeaseCycle::random_type XsdLeaseCycle::
random_default_value ()
{
  return random_type (true);
}


// XsdLeaseData
// 

inline
const XsdLeaseData::loading_optional& XsdLeaseData::
loading () const
{
  return this->loading_;
}

inline
XsdLeaseData::loading_optional& XsdLeaseData::
loading ()
{
  return this->loading_;
}

inline
void XsdLeaseData::
loading (const loading_type& x)
{
  this->loading_.set (x);
}

inline
void XsdLeaseData::
loading (const loading_optional& x)
{
  this->loading_ = x;
}

inline
void XsdLeaseData::
loading (::std::auto_ptr< loading_type > x)
{
  this->loading_.set (x);
}

inline
const XsdLeaseData::random_type& XsdLeaseData::
random () const
{
  return this->random_.get ();
}

inline
XsdLeaseData::random_type& XsdLeaseData::
random ()
{
  return this->random_.get ();
}

inline
void XsdLeaseData::
random (const random_type& x)
{
  this->random_.set (x);
}

inline
XsdLeaseData::random_type XsdLeaseData::
random_default_value ()
{
  return random_type (false);
}

inline
const XsdLeaseData::correlated_type& XsdLeaseData::
correlated () const
{
  return this->correlated_.get ();
}

inline
XsdLeaseData::correlated_type& XsdLeaseData::
correlated ()
{
  return this->correlated_.get ();
}

inline
void XsdLeaseData::
correlated (const correlated_type& x)
{
  this->correlated_.set (x);
}

inline
XsdLeaseData::correlated_type XsdLeaseData::
correlated_default_value ()
{
  return correlated_type (false);
}

inline
const XsdLeaseData::lowerScale_type& XsdLeaseData::
lowerScale () const
{
  return this->lowerScale_.get ();
}

inline
XsdLeaseData::lowerScale_type& XsdLeaseData::
lowerScale ()
{
  return this->lowerScale_.get ();
}

inline
void XsdLeaseData::
lowerScale (const lowerScale_type& x)
{
  this->lowerScale_.set (x);
}

inline
void XsdLeaseData::
lowerScale (::std::auto_ptr< lowerScale_type > x)
{
  this->lowerScale_.set (x);
}

inline
XsdLeaseData::lowerScale_type XsdLeaseData::
lowerScale_default_value ()
{
  return lowerScale_type (.5);
}

inline
const XsdLeaseData::upperScale_type& XsdLeaseData::
upperScale () const
{
  return this->upperScale_.get ();
}

inline
XsdLeaseData::upperScale_type& XsdLeaseData::
upperScale ()
{
  return this->upperScale_.get ();
}

inline
void XsdLeaseData::
upperScale (const upperScale_type& x)
{
  this->upperScale_.set (x);
}

inline
void XsdLeaseData::
upperScale (::std::auto_ptr< upperScale_type > x)
{
  this->upperScale_.set (x);
}

inline
XsdLeaseData::upperScale_type XsdLeaseData::
upperScale_default_value ()
{
  return upperScale_type (.5);
}


// XsdLeaseDetail
// 

inline
const XsdLeaseDetail::life_optional& XsdLeaseDetail::
life () const
{
  return this->life_;
}

inline
XsdLeaseDetail::life_optional& XsdLeaseDetail::
life ()
{
  return this->life_;
}

inline
void XsdLeaseDetail::
life (const life_type& x)
{
  this->life_.set (x);
}

inline
void XsdLeaseDetail::
life (const life_optional& x)
{
  this->life_ = x;
}

inline
void XsdLeaseDetail::
life (::std::auto_ptr< life_type > x)
{
  this->life_.set (x);
}

inline
const XsdLeaseDetail::rate_optional& XsdLeaseDetail::
rate () const
{
  return this->rate_;
}

inline
XsdLeaseDetail::rate_optional& XsdLeaseDetail::
rate ()
{
  return this->rate_;
}

inline
void XsdLeaseDetail::
rate (const rate_type& x)
{
  this->rate_.set (x);
}

inline
void XsdLeaseDetail::
rate (const rate_optional& x)
{
  this->rate_ = x;
}

inline
void XsdLeaseDetail::
rate (::std::auto_ptr< rate_type > x)
{
  this->rate_.set (x);
}

inline
const XsdLeaseDetail::replace_optional& XsdLeaseDetail::
replace () const
{
  return this->replace_;
}

inline
XsdLeaseDetail::replace_optional& XsdLeaseDetail::
replace ()
{
  return this->replace_;
}

inline
void XsdLeaseDetail::
replace (const replace_type& x)
{
  this->replace_.set (x);
}

inline
void XsdLeaseDetail::
replace (const replace_optional& x)
{
  this->replace_ = x;
}

inline
void XsdLeaseDetail::
replace (::std::auto_ptr< replace_type > x)
{
  this->replace_.set (x);
}

inline
const XsdLeaseDetail::repo_optional& XsdLeaseDetail::
repo () const
{
  return this->repo_;
}

inline
XsdLeaseDetail::repo_optional& XsdLeaseDetail::
repo ()
{
  return this->repo_;
}

inline
void XsdLeaseDetail::
repo (const repo_type& x)
{
  this->repo_.set (x);
}

inline
void XsdLeaseDetail::
repo (const repo_optional& x)
{
  this->repo_ = x;
}

inline
void XsdLeaseDetail::
repo (::std::auto_ptr< repo_type > x)
{
  this->repo_.set (x);
}

inline
const XsdLeaseDetail::name_type& XsdLeaseDetail::
name () const
{
  return this->name_.get ();
}

inline
XsdLeaseDetail::name_type& XsdLeaseDetail::
name ()
{
  return this->name_.get ();
}

inline
void XsdLeaseDetail::
name (const name_type& x)
{
  this->name_.set (x);
}

inline
void XsdLeaseDetail::
name (::std::auto_ptr< name_type > x)
{
  this->name_.set (x);
}


// XsdLeaseDefault
// 

inline
const XsdLeaseDefault::ratings_type& XsdLeaseDefault::
ratings () const
{
  return this->ratings_.get ();
}

inline
XsdLeaseDefault::ratings_type& XsdLeaseDefault::
ratings ()
{
  return this->ratings_.get ();
}

inline
void XsdLeaseDefault::
ratings (const ratings_type& x)
{
  this->ratings_.set (x);
}

inline
void XsdLeaseDefault::
ratings (::std::auto_ptr< ratings_type > x)
{
  this->ratings_.set (x);
}

inline
const XsdLeaseDefault::obligor_sequence& XsdLeaseDefault::
obligor () const
{
  return this->obligor_;
}

inline
XsdLeaseDefault::obligor_sequence& XsdLeaseDefault::
obligor ()
{
  return this->obligor_;
}

inline
void XsdLeaseDefault::
obligor (const obligor_sequence& s)
{
  this->obligor_ = s;
}

inline
const XsdLeaseDefault::transition_sequence& XsdLeaseDefault::
transition () const
{
  return this->transition_;
}

inline
XsdLeaseDefault::transition_sequence& XsdLeaseDefault::
transition ()
{
  return this->transition_;
}

inline
void XsdLeaseDefault::
transition (const transition_sequence& s)
{
  this->transition_ = s;
}

inline
const XsdLeaseDefault::correlation_optional& XsdLeaseDefault::
correlation () const
{
  return this->correlation_;
}

inline
XsdLeaseDefault::correlation_optional& XsdLeaseDefault::
correlation ()
{
  return this->correlation_;
}

inline
void XsdLeaseDefault::
correlation (const correlation_type& x)
{
  this->correlation_.set (x);
}

inline
void XsdLeaseDefault::
correlation (const correlation_optional& x)
{
  this->correlation_ = x;
}

inline
void XsdLeaseDefault::
correlation (::std::auto_ptr< correlation_type > x)
{
  this->correlation_.set (x);
}

inline
const XsdLeaseDefault::numRanks_type& XsdLeaseDefault::
numRanks () const
{
  return this->numRanks_.get ();
}

inline
XsdLeaseDefault::numRanks_type& XsdLeaseDefault::
numRanks ()
{
  return this->numRanks_.get ();
}

inline
void XsdLeaseDefault::
numRanks (const numRanks_type& x)
{
  this->numRanks_.set (x);
}

inline
const XsdLeaseDefault::defaultRank_type& XsdLeaseDefault::
defaultRank () const
{
  return this->defaultRank_.get ();
}

inline
XsdLeaseDefault::defaultRank_type& XsdLeaseDefault::
defaultRank ()
{
  return this->defaultRank_.get ();
}

inline
void XsdLeaseDefault::
defaultRank (const defaultRank_type& x)
{
  this->defaultRank_.set (x);
}

inline
XsdLeaseDefault::defaultRank_type XsdLeaseDefault::
defaultRank_default_value ()
{
  return defaultRank_type (0);
}

inline
const XsdLeaseDefault::transitionPeriod_type& XsdLeaseDefault::
transitionPeriod () const
{
  return this->transitionPeriod_.get ();
}

inline
XsdLeaseDefault::transitionPeriod_type& XsdLeaseDefault::
transitionPeriod ()
{
  return this->transitionPeriod_.get ();
}

inline
void XsdLeaseDefault::
transitionPeriod (const transitionPeriod_type& x)
{
  this->transitionPeriod_.set (x);
}

inline
void XsdLeaseDefault::
transitionPeriod (::std::auto_ptr< transitionPeriod_type > x)
{
  this->transitionPeriod_.set (x);
}

inline
const XsdLeaseDefault::transitionPeriod_type& XsdLeaseDefault::
transitionPeriod_default_value ()
{
  return transitionPeriod_default_value_;
}


// XsdLeaseDiscount
// 

inline
const XsdLeaseDiscount::known_optional& XsdLeaseDiscount::
known () const
{
  return this->known_;
}

inline
XsdLeaseDiscount::known_optional& XsdLeaseDiscount::
known ()
{
  return this->known_;
}

inline
void XsdLeaseDiscount::
known (const known_type& x)
{
  this->known_.set (x);
}

inline
void XsdLeaseDiscount::
known (const known_optional& x)
{
  this->known_ = x;
}

inline
void XsdLeaseDiscount::
known (::std::auto_ptr< known_type > x)
{
  this->known_.set (x);
}

inline
const XsdLeaseDiscount::random_optional& XsdLeaseDiscount::
random () const
{
  return this->random_;
}

inline
XsdLeaseDiscount::random_optional& XsdLeaseDiscount::
random ()
{
  return this->random_;
}

inline
void XsdLeaseDiscount::
random (const random_type& x)
{
  this->random_.set (x);
}

inline
void XsdLeaseDiscount::
random (const random_optional& x)
{
  this->random_ = x;
}

inline
void XsdLeaseDiscount::
random (::std::auto_ptr< random_type > x)
{
  this->random_.set (x);
}


// XsdLeaseObligor
// 

inline
const XsdLeaseObligor::obligor_type& XsdLeaseObligor::
obligor () const
{
  return this->obligor_.get ();
}

inline
XsdLeaseObligor::obligor_type& XsdLeaseObligor::
obligor ()
{
  return this->obligor_.get ();
}

inline
void XsdLeaseObligor::
obligor (const obligor_type& x)
{
  this->obligor_.set (x);
}

inline
void XsdLeaseObligor::
obligor (::std::auto_ptr< obligor_type > x)
{
  this->obligor_.set (x);
}

inline
const XsdLeaseObligor::initial_type& XsdLeaseObligor::
initial () const
{
  return this->initial_.get ();
}

inline
XsdLeaseObligor::initial_type& XsdLeaseObligor::
initial ()
{
  return this->initial_.get ();
}

inline
void XsdLeaseObligor::
initial (const initial_type& x)
{
  this->initial_.set (x);
}

inline
const XsdLeaseObligor::region_type& XsdLeaseObligor::
region () const
{
  return this->region_.get ();
}

inline
XsdLeaseObligor::region_type& XsdLeaseObligor::
region ()
{
  return this->region_.get ();
}

inline
void XsdLeaseObligor::
region (const region_type& x)
{
  this->region_.set (x);
}

inline
void XsdLeaseObligor::
region (::std::auto_ptr< region_type > x)
{
  this->region_.set (x);
}

inline
const XsdLeaseObligor::replace_optional& XsdLeaseObligor::
replace () const
{
  return this->replace_;
}

inline
XsdLeaseObligor::replace_optional& XsdLeaseObligor::
replace ()
{
  return this->replace_;
}

inline
void XsdLeaseObligor::
replace (const replace_type& x)
{
  this->replace_.set (x);
}

inline
void XsdLeaseObligor::
replace (const replace_optional& x)
{
  this->replace_ = x;
}


// XsdLeaseDepreciation
// 

inline
const XsdLeaseDepreciation::baseCurve_type& XsdLeaseDepreciation::
baseCurve () const
{
  return this->baseCurve_.get ();
}

inline
XsdLeaseDepreciation::baseCurve_type& XsdLeaseDepreciation::
baseCurve ()
{
  return this->baseCurve_.get ();
}

inline
void XsdLeaseDepreciation::
baseCurve (const baseCurve_type& x)
{
  this->baseCurve_.set (x);
}

inline
void XsdLeaseDepreciation::
baseCurve (::std::auto_ptr< baseCurve_type > x)
{
  this->baseCurve_.set (x);
}

inline
const XsdLeaseDepreciation::volatility_optional& XsdLeaseDepreciation::
volatility () const
{
  return this->volatility_;
}

inline
XsdLeaseDepreciation::volatility_optional& XsdLeaseDepreciation::
volatility ()
{
  return this->volatility_;
}

inline
void XsdLeaseDepreciation::
volatility (const volatility_type& x)
{
  this->volatility_.set (x);
}

inline
void XsdLeaseDepreciation::
volatility (const volatility_optional& x)
{
  this->volatility_ = x;
}

inline
void XsdLeaseDepreciation::
volatility (::std::auto_ptr< volatility_type > x)
{
  this->volatility_.set (x);
}

inline
const XsdLeaseDepreciation::mrSpeed_optional& XsdLeaseDepreciation::
mrSpeed () const
{
  return this->mrSpeed_;
}

inline
XsdLeaseDepreciation::mrSpeed_optional& XsdLeaseDepreciation::
mrSpeed ()
{
  return this->mrSpeed_;
}

inline
void XsdLeaseDepreciation::
mrSpeed (const mrSpeed_type& x)
{
  this->mrSpeed_.set (x);
}

inline
void XsdLeaseDepreciation::
mrSpeed (const mrSpeed_optional& x)
{
  this->mrSpeed_ = x;
}

inline
void XsdLeaseDepreciation::
mrSpeed (::std::auto_ptr< mrSpeed_type > x)
{
  this->mrSpeed_.set (x);
}

inline
const XsdLeaseDepreciation::maxLife_optional& XsdLeaseDepreciation::
maxLife () const
{
  return this->maxLife_;
}

inline
XsdLeaseDepreciation::maxLife_optional& XsdLeaseDepreciation::
maxLife ()
{
  return this->maxLife_;
}

inline
void XsdLeaseDepreciation::
maxLife (const maxLife_type& x)
{
  this->maxLife_.set (x);
}

inline
void XsdLeaseDepreciation::
maxLife (const maxLife_optional& x)
{
  this->maxLife_ = x;
}

inline
void XsdLeaseDepreciation::
maxLife (::std::auto_ptr< maxLife_type > x)
{
  this->maxLife_.set (x);
}

inline
const XsdLeaseDepreciation::maxLife_type& XsdLeaseDepreciation::
maxLife_default_value ()
{
  return maxLife_default_value_;
}

inline
const XsdLeaseDepreciation::model_type& XsdLeaseDepreciation::
model () const
{
  return this->model_.get ();
}

inline
XsdLeaseDepreciation::model_type& XsdLeaseDepreciation::
model ()
{
  return this->model_.get ();
}

inline
void XsdLeaseDepreciation::
model (const model_type& x)
{
  this->model_.set (x);
}

inline
void XsdLeaseDepreciation::
model (::std::auto_ptr< model_type > x)
{
  this->model_.set (x);
}


// XsdLeaseInnovate
// 

inline
const XsdLeaseInnovate::intensity_optional& XsdLeaseInnovate::
intensity () const
{
  return this->intensity_;
}

inline
XsdLeaseInnovate::intensity_optional& XsdLeaseInnovate::
intensity ()
{
  return this->intensity_;
}

inline
void XsdLeaseInnovate::
intensity (const intensity_type& x)
{
  this->intensity_.set (x);
}

inline
void XsdLeaseInnovate::
intensity (const intensity_optional& x)
{
  this->intensity_ = x;
}

inline
void XsdLeaseInnovate::
intensity (::std::auto_ptr< intensity_type > x)
{
  this->intensity_.set (x);
}

inline
const XsdLeaseInnovate::time_optional& XsdLeaseInnovate::
time () const
{
  return this->time_;
}

inline
XsdLeaseInnovate::time_optional& XsdLeaseInnovate::
time ()
{
  return this->time_;
}

inline
void XsdLeaseInnovate::
time (const time_type& x)
{
  this->time_.set (x);
}

inline
void XsdLeaseInnovate::
time (const time_optional& x)
{
  this->time_ = x;
}

inline
void XsdLeaseInnovate::
time (::std::auto_ptr< time_type > x)
{
  this->time_.set (x);
}

inline
const XsdLeaseInnovate::factor_sequence& XsdLeaseInnovate::
factor () const
{
  return this->factor_;
}

inline
XsdLeaseInnovate::factor_sequence& XsdLeaseInnovate::
factor ()
{
  return this->factor_;
}

inline
void XsdLeaseInnovate::
factor (const factor_sequence& s)
{
  this->factor_ = s;
}

inline
const XsdLeaseInnovate::name_type& XsdLeaseInnovate::
name () const
{
  return this->name_.get ();
}

inline
XsdLeaseInnovate::name_type& XsdLeaseInnovate::
name ()
{
  return this->name_.get ();
}

inline
void XsdLeaseInnovate::
name (const name_type& x)
{
  this->name_.set (x);
}

inline
void XsdLeaseInnovate::
name (::std::auto_ptr< name_type > x)
{
  this->name_.set (x);
}

inline
const XsdLeaseInnovate::random_type& XsdLeaseInnovate::
random () const
{
  return this->random_.get ();
}

inline
XsdLeaseInnovate::random_type& XsdLeaseInnovate::
random ()
{
  return this->random_.get ();
}

inline
void XsdLeaseInnovate::
random (const random_type& x)
{
  this->random_.set (x);
}

inline
XsdLeaseInnovate::random_type XsdLeaseInnovate::
random_default_value ()
{
  return random_type (true);
}


// XsdLeaseModel
// 

inline
const XsdLeaseModel::cycle_optional& XsdLeaseModel::
cycle () const
{
  return this->cycle_;
}

inline
XsdLeaseModel::cycle_optional& XsdLeaseModel::
cycle ()
{
  return this->cycle_;
}

inline
void XsdLeaseModel::
cycle (const cycle_type& x)
{
  this->cycle_.set (x);
}

inline
void XsdLeaseModel::
cycle (const cycle_optional& x)
{
  this->cycle_ = x;
}

inline
void XsdLeaseModel::
cycle (::std::auto_ptr< cycle_type > x)
{
  this->cycle_.set (x);
}

inline
const XsdLeaseModel::depreciation_sequence& XsdLeaseModel::
depreciation () const
{
  return this->depreciation_;
}

inline
XsdLeaseModel::depreciation_sequence& XsdLeaseModel::
depreciation ()
{
  return this->depreciation_;
}

inline
void XsdLeaseModel::
depreciation (const depreciation_sequence& s)
{
  this->depreciation_ = s;
}

inline
const XsdLeaseModel::defaults_optional& XsdLeaseModel::
defaults () const
{
  return this->defaults_;
}

inline
XsdLeaseModel::defaults_optional& XsdLeaseModel::
defaults ()
{
  return this->defaults_;
}

inline
void XsdLeaseModel::
defaults (const defaults_type& x)
{
  this->defaults_.set (x);
}

inline
void XsdLeaseModel::
defaults (const defaults_optional& x)
{
  this->defaults_ = x;
}

inline
void XsdLeaseModel::
defaults (::std::auto_ptr< defaults_type > x)
{
  this->defaults_.set (x);
}

inline
const XsdLeaseModel::discount_optional& XsdLeaseModel::
discount () const
{
  return this->discount_;
}

inline
XsdLeaseModel::discount_optional& XsdLeaseModel::
discount ()
{
  return this->discount_;
}

inline
void XsdLeaseModel::
discount (const discount_type& x)
{
  this->discount_.set (x);
}

inline
void XsdLeaseModel::
discount (const discount_optional& x)
{
  this->discount_ = x;
}

inline
void XsdLeaseModel::
discount (::std::auto_ptr< discount_type > x)
{
  this->discount_.set (x);
}

inline
const XsdLeaseModel::innovate_sequence& XsdLeaseModel::
innovate () const
{
  return this->innovate_;
}

inline
XsdLeaseModel::innovate_sequence& XsdLeaseModel::
innovate ()
{
  return this->innovate_;
}

inline
void XsdLeaseModel::
innovate (const innovate_sequence& s)
{
  this->innovate_ = s;
}

inline
const XsdLeaseModel::lease_sequence& XsdLeaseModel::
lease () const
{
  return this->lease_;
}

inline
XsdLeaseModel::lease_sequence& XsdLeaseModel::
lease ()
{
  return this->lease_;
}

inline
void XsdLeaseModel::
lease (const lease_sequence& s)
{
  this->lease_ = s;
}

inline
const XsdLeaseModel::pool_optional& XsdLeaseModel::
pool () const
{
  return this->pool_;
}

inline
XsdLeaseModel::pool_optional& XsdLeaseModel::
pool ()
{
  return this->pool_;
}

inline
void XsdLeaseModel::
pool (const pool_type& x)
{
  this->pool_.set (x);
}

inline
void XsdLeaseModel::
pool (const pool_optional& x)
{
  this->pool_ = x;
}

inline
void XsdLeaseModel::
pool (::std::auto_ptr< pool_type > x)
{
  this->pool_.set (x);
}

inline
const XsdLeaseModel::market_optional& XsdLeaseModel::
market () const
{
  return this->market_;
}

inline
XsdLeaseModel::market_optional& XsdLeaseModel::
market ()
{
  return this->market_;
}

inline
void XsdLeaseModel::
market (const market_type& x)
{
  this->market_.set (x);
}

inline
void XsdLeaseModel::
market (const market_optional& x)
{
  this->market_ = x;
}

inline
void XsdLeaseModel::
market (::std::auto_ptr< market_type > x)
{
  this->market_.set (x);
}

inline
const XsdLeaseModel::params_optional& XsdLeaseModel::
params () const
{
  return this->params_;
}

inline
XsdLeaseModel::params_optional& XsdLeaseModel::
params ()
{
  return this->params_;
}

inline
void XsdLeaseModel::
params (const params_type& x)
{
  this->params_.set (x);
}

inline
void XsdLeaseModel::
params (const params_optional& x)
{
  this->params_ = x;
}

inline
void XsdLeaseModel::
params (::std::auto_ptr< params_type > x)
{
  this->params_.set (x);
}


// XsdLeaseRegion
// 

inline
const XsdLeaseRegion::transition_optional& XsdLeaseRegion::
transition () const
{
  return this->transition_;
}

inline
XsdLeaseRegion::transition_optional& XsdLeaseRegion::
transition ()
{
  return this->transition_;
}

inline
void XsdLeaseRegion::
transition (const transition_type& x)
{
  this->transition_.set (x);
}

inline
void XsdLeaseRegion::
transition (const transition_optional& x)
{
  this->transition_ = x;
}

inline
void XsdLeaseRegion::
transition (::std::auto_ptr< transition_type > x)
{
  this->transition_.set (x);
}

inline
const XsdLeaseRegion::scenario_optional& XsdLeaseRegion::
scenario () const
{
  return this->scenario_;
}

inline
XsdLeaseRegion::scenario_optional& XsdLeaseRegion::
scenario ()
{
  return this->scenario_;
}

inline
void XsdLeaseRegion::
scenario (const scenario_type& x)
{
  this->scenario_.set (x);
}

inline
void XsdLeaseRegion::
scenario (const scenario_optional& x)
{
  this->scenario_ = x;
}

inline
void XsdLeaseRegion::
scenario (::std::auto_ptr< scenario_type > x)
{
  this->scenario_.set (x);
}

inline
const XsdLeaseRegion::region_type& XsdLeaseRegion::
region () const
{
  return this->region_.get ();
}

inline
XsdLeaseRegion::region_type& XsdLeaseRegion::
region ()
{
  return this->region_.get ();
}

inline
void XsdLeaseRegion::
region (const region_type& x)
{
  this->region_.set (x);
}

inline
void XsdLeaseRegion::
region (::std::auto_ptr< region_type > x)
{
  this->region_.set (x);
}

inline
const XsdLeaseRegion::initial_type& XsdLeaseRegion::
initial () const
{
  return this->initial_.get ();
}

inline
XsdLeaseRegion::initial_type& XsdLeaseRegion::
initial ()
{
  return this->initial_.get ();
}

inline
void XsdLeaseRegion::
initial (const initial_type& x)
{
  this->initial_.set (x);
}

inline
XsdLeaseRegion::initial_type XsdLeaseRegion::
initial_default_value ()
{
  return initial_type (0ULL);
}


// XsdLeaseReplace
// 

inline
const XsdLeaseReplace::time_optional& XsdLeaseReplace::
time () const
{
  return this->time_;
}

inline
XsdLeaseReplace::time_optional& XsdLeaseReplace::
time ()
{
  return this->time_;
}

inline
void XsdLeaseReplace::
time (const time_type& x)
{
  this->time_.set (x);
}

inline
void XsdLeaseReplace::
time (const time_optional& x)
{
  this->time_ = x;
}

inline
void XsdLeaseReplace::
time (::std::auto_ptr< time_type > x)
{
  this->time_.set (x);
}

inline
const XsdLeaseReplace::cost_optional& XsdLeaseReplace::
cost () const
{
  return this->cost_;
}

inline
XsdLeaseReplace::cost_optional& XsdLeaseReplace::
cost ()
{
  return this->cost_;
}

inline
void XsdLeaseReplace::
cost (const cost_type& x)
{
  this->cost_.set (x);
}

inline
void XsdLeaseReplace::
cost (const cost_optional& x)
{
  this->cost_ = x;
}

inline
void XsdLeaseReplace::
cost (::std::auto_ptr< cost_type > x)
{
  this->cost_.set (x);
}


// XsdLeaseValue
// 

inline
const XsdLeaseValue::series_sequence& XsdLeaseValue::
series () const
{
  return this->series_;
}

inline
XsdLeaseValue::series_sequence& XsdLeaseValue::
series ()
{
  return this->series_;
}

inline
void XsdLeaseValue::
series (const series_sequence& s)
{
  this->series_ = s;
}


// XsdLeaseRate
// 

inline
const XsdLeaseRate::spread_type& XsdLeaseRate::
spread () const
{
  return this->spread_.get ();
}

inline
XsdLeaseRate::spread_type& XsdLeaseRate::
spread ()
{
  return this->spread_.get ();
}

inline
void XsdLeaseRate::
spread (const spread_type& x)
{
  this->spread_.set (x);
}

inline
XsdLeaseRate::spread_type XsdLeaseRate::
spread_default_value ()
{
  return spread_type (false);
}

inline
const XsdLeaseRate::renewBelow_type& XsdLeaseRate::
renewBelow () const
{
  return this->renewBelow_.get ();
}

inline
XsdLeaseRate::renewBelow_type& XsdLeaseRate::
renewBelow ()
{
  return this->renewBelow_.get ();
}

inline
void XsdLeaseRate::
renewBelow (const renewBelow_type& x)
{
  this->renewBelow_.set (x);
}

inline
XsdLeaseRate::renewBelow_type XsdLeaseRate::
renewBelow_default_value ()
{
  return renewBelow_type (1.15);
}

inline
const XsdLeaseRate::renewAbove_type& XsdLeaseRate::
renewAbove () const
{
  return this->renewAbove_.get ();
}

inline
XsdLeaseRate::renewAbove_type& XsdLeaseRate::
renewAbove ()
{
  return this->renewAbove_.get ();
}

inline
void XsdLeaseRate::
renewAbove (const renewAbove_type& x)
{
  this->renewAbove_.set (x);
}

inline
XsdLeaseRate::renewAbove_type XsdLeaseRate::
renewAbove_default_value ()
{
  return renewAbove_type (.85);
}


// XsdLeaseTransition
// 

inline
const XsdLeaseTransition::state_type& XsdLeaseTransition::
state () const
{
  return this->state_.get ();
}

inline
XsdLeaseTransition::state_type& XsdLeaseTransition::
state ()
{
  return this->state_.get ();
}

inline
void XsdLeaseTransition::
state (const state_type& x)
{
  this->state_.set (x);
}

inline
const XsdLeaseTransition::period_type& XsdLeaseTransition::
period () const
{
  return this->period_.get ();
}

inline
XsdLeaseTransition::period_type& XsdLeaseTransition::
period ()
{
  return this->period_.get ();
}

inline
void XsdLeaseTransition::
period (const period_type& x)
{
  this->period_.set (x);
}

inline
void XsdLeaseTransition::
period (::std::auto_ptr< period_type > x)
{
  this->period_.set (x);
}

inline
const XsdLeaseTransition::period_type& XsdLeaseTransition::
period_default_value ()
{
  return period_default_value_;
}


// defaults
// 


// series
// 

inline
const series::time_optional& series::
time () const
{
  return this->time_;
}

inline
series::time_optional& series::
time ()
{
  return this->time_;
}

inline
void series::
time (const time_type& x)
{
  this->time_.set (x);
}

inline
void series::
time (const time_optional& x)
{
  this->time_ = x;
}

inline
const series::zero_type& series::
zero () const
{
  return this->zero_.get ();
}

inline
series::zero_type& series::
zero ()
{
  return this->zero_.get ();
}

inline
void series::
zero (const zero_type& x)
{
  this->zero_.set (x);
}

inline
series::zero_type series::
zero_default_value ()
{
  return zero_type (.0);
}


// lowerScale
// 


// upperScale
// 


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_MODEL_LEASEMODEL_IXX
