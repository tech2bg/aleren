// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_ASSET_BOND_IXX
#define CXX___SCHEMA_XSD_ASSET_BOND_IXX

// Begin prologue.
//
//
// End prologue.

#include "asset.ixx"

#include "index.ixx"

#include "schedule.ixx"

// XsdBond
// 

inline
const XsdBond::datedDate_optional& XsdBond::
datedDate () const
{
  return this->datedDate_;
}

inline
XsdBond::datedDate_optional& XsdBond::
datedDate ()
{
  return this->datedDate_;
}

inline
void XsdBond::
datedDate (const datedDate_type& x)
{
  this->datedDate_.set (x);
}

inline
void XsdBond::
datedDate (const datedDate_optional& x)
{
  this->datedDate_ = x;
}

inline
void XsdBond::
datedDate (::std::auto_ptr< datedDate_type > x)
{
  this->datedDate_.set (x);
}

inline
const XsdBond::oddCoupon_optional& XsdBond::
oddCoupon () const
{
  return this->oddCoupon_;
}

inline
XsdBond::oddCoupon_optional& XsdBond::
oddCoupon ()
{
  return this->oddCoupon_;
}

inline
void XsdBond::
oddCoupon (const oddCoupon_type& x)
{
  this->oddCoupon_.set (x);
}

inline
void XsdBond::
oddCoupon (const oddCoupon_optional& x)
{
  this->oddCoupon_ = x;
}

inline
void XsdBond::
oddCoupon (::std::auto_ptr< oddCoupon_type > x)
{
  this->oddCoupon_.set (x);
}

inline
const XsdBond::schedule_optional& XsdBond::
schedule () const
{
  return this->schedule_;
}

inline
XsdBond::schedule_optional& XsdBond::
schedule ()
{
  return this->schedule_;
}

inline
void XsdBond::
schedule (const schedule_type& x)
{
  this->schedule_.set (x);
}

inline
void XsdBond::
schedule (const schedule_optional& x)
{
  this->schedule_ = x;
}

inline
void XsdBond::
schedule (::std::auto_ptr< schedule_type > x)
{
  this->schedule_.set (x);
}


// XsdCashDeposit
// 

inline
const XsdCashDeposit::coupon_optional& XsdCashDeposit::
coupon () const
{
  return this->coupon_;
}

inline
XsdCashDeposit::coupon_optional& XsdCashDeposit::
coupon ()
{
  return this->coupon_;
}

inline
void XsdCashDeposit::
coupon (const coupon_type& x)
{
  this->coupon_.set (x);
}

inline
void XsdCashDeposit::
coupon (const coupon_optional& x)
{
  this->coupon_ = x;
}

inline
void XsdCashDeposit::
coupon (::std::auto_ptr< coupon_type > x)
{
  this->coupon_.set (x);
}


// XsdFixedRateBond
// 

inline
const XsdFixedRateBond::coupon_type& XsdFixedRateBond::
coupon () const
{
  return this->coupon_.get ();
}

inline
XsdFixedRateBond::coupon_type& XsdFixedRateBond::
coupon ()
{
  return this->coupon_.get ();
}

inline
void XsdFixedRateBond::
coupon (const coupon_type& x)
{
  this->coupon_.set (x);
}

inline
void XsdFixedRateBond::
coupon (::std::auto_ptr< coupon_type > x)
{
  this->coupon_.set (x);
}


// XsdFloatingRateBond
// 

inline
const XsdFloatingRateBond::coupon_optional& XsdFloatingRateBond::
coupon () const
{
  return this->coupon_;
}

inline
XsdFloatingRateBond::coupon_optional& XsdFloatingRateBond::
coupon ()
{
  return this->coupon_;
}

inline
void XsdFloatingRateBond::
coupon (const coupon_type& x)
{
  this->coupon_.set (x);
}

inline
void XsdFloatingRateBond::
coupon (const coupon_optional& x)
{
  this->coupon_ = x;
}

inline
void XsdFloatingRateBond::
coupon (::std::auto_ptr< coupon_type > x)
{
  this->coupon_.set (x);
}


// XsdZeroCouponBond
// 


// XsdBespokeBond
// 

inline
const XsdBespokeBond::coupon_type& XsdBespokeBond::
coupon () const
{
  return this->coupon_.get ();
}

inline
XsdBespokeBond::coupon_type& XsdBespokeBond::
coupon ()
{
  return this->coupon_.get ();
}

inline
void XsdBespokeBond::
coupon (const coupon_type& x)
{
  this->coupon_.set (x);
}

inline
void XsdBespokeBond::
coupon (::std::auto_ptr< coupon_type > x)
{
  this->coupon_.set (x);
}


// XsdOddCoupon
// 

inline
const XsdOddCoupon::type_optional& XsdOddCoupon::
type () const
{
  return this->type_;
}

inline
XsdOddCoupon::type_optional& XsdOddCoupon::
type ()
{
  return this->type_;
}

inline
void XsdOddCoupon::
type (const type_type& x)
{
  this->type_.set (x);
}

inline
void XsdOddCoupon::
type (const type_optional& x)
{
  this->type_ = x;
}

inline
void XsdOddCoupon::
type (::std::auto_ptr< type_type > x)
{
  this->type_.set (x);
}

inline
const XsdOddCoupon::type_type& XsdOddCoupon::
type_default_value ()
{
  return type_default_value_;
}

inline
const XsdOddCoupon::date_optional& XsdOddCoupon::
date () const
{
  return this->date_;
}

inline
XsdOddCoupon::date_optional& XsdOddCoupon::
date ()
{
  return this->date_;
}

inline
void XsdOddCoupon::
date (const date_type& x)
{
  this->date_.set (x);
}

inline
void XsdOddCoupon::
date (const date_optional& x)
{
  this->date_ = x;
}

inline
void XsdOddCoupon::
date (::std::auto_ptr< date_type > x)
{
  this->date_.set (x);
}


// XsdOddCouponPair
// 

inline
const XsdOddCouponPair::first_optional& XsdOddCouponPair::
first () const
{
  return this->first_;
}

inline
XsdOddCouponPair::first_optional& XsdOddCouponPair::
first ()
{
  return this->first_;
}

inline
void XsdOddCouponPair::
first (const first_type& x)
{
  this->first_.set (x);
}

inline
void XsdOddCouponPair::
first (const first_optional& x)
{
  this->first_ = x;
}

inline
void XsdOddCouponPair::
first (::std::auto_ptr< first_type > x)
{
  this->first_.set (x);
}

inline
const XsdOddCouponPair::last_optional& XsdOddCouponPair::
last () const
{
  return this->last_;
}

inline
XsdOddCouponPair::last_optional& XsdOddCouponPair::
last ()
{
  return this->last_;
}

inline
void XsdOddCouponPair::
last (const last_type& x)
{
  this->last_.set (x);
}

inline
void XsdOddCouponPair::
last (const last_optional& x)
{
  this->last_ = x;
}

inline
void XsdOddCouponPair::
last (::std::auto_ptr< last_type > x)
{
  this->last_.set (x);
}


// XsdBondSchedule
// 

inline
const XsdBondSchedule::amortize_sequence& XsdBondSchedule::
amortize () const
{
  return this->amortize_;
}

inline
XsdBondSchedule::amortize_sequence& XsdBondSchedule::
amortize ()
{
  return this->amortize_;
}

inline
void XsdBondSchedule::
amortize (const amortize_sequence& s)
{
  this->amortize_ = s;
}

inline
const XsdBondSchedule::call_sequence& XsdBondSchedule::
call () const
{
  return this->call_;
}

inline
XsdBondSchedule::call_sequence& XsdBondSchedule::
call ()
{
  return this->call_;
}

inline
void XsdBondSchedule::
call (const call_sequence& s)
{
  this->call_ = s;
}

inline
const XsdBondSchedule::put_sequence& XsdBondSchedule::
put () const
{
  return this->put_;
}

inline
XsdBondSchedule::put_sequence& XsdBondSchedule::
put ()
{
  return this->put_;
}

inline
void XsdBondSchedule::
put (const put_sequence& s)
{
  this->put_ = s;
}

inline
const XsdBondSchedule::convert_sequence& XsdBondSchedule::
convert () const
{
  return this->convert_;
}

inline
XsdBondSchedule::convert_sequence& XsdBondSchedule::
convert ()
{
  return this->convert_;
}

inline
void XsdBondSchedule::
convert (const convert_sequence& s)
{
  this->convert_ = s;
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_ASSET_BOND_IXX
