// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_ASSET_CASHFLOW_IXX
#define CXX___SCHEMA_XSD_ASSET_CASHFLOW_IXX

// Begin prologue.
//
//
// End prologue.

#include "types.ixx"

// XsdAccount
// 

inline
const XsdAccount::payment_sequence& XsdAccount::
payment () const
{
  return this->payment_;
}

inline
XsdAccount::payment_sequence& XsdAccount::
payment ()
{
  return this->payment_;
}

inline
void XsdAccount::
payment (const payment_sequence& s)
{
  this->payment_ = s;
}


// XsdCashflowRow
// 

inline
const XsdCashflowRow::date_type& XsdCashflowRow::
date () const
{
  return this->date_.get ();
}

inline
XsdCashflowRow::date_type& XsdCashflowRow::
date ()
{
  return this->date_.get ();
}

inline
void XsdCashflowRow::
date (const date_type& x)
{
  this->date_.set (x);
}

inline
void XsdCashflowRow::
date (::std::auto_ptr< date_type > x)
{
  this->date_.set (x);
}


// XsdCashflow
// 

inline
const XsdCashflow::row_sequence& XsdCashflow::
row () const
{
  return this->row_;
}

inline
XsdCashflow::row_sequence& XsdCashflow::
row ()
{
  return this->row_;
}

inline
void XsdCashflow::
row (const row_sequence& s)
{
  this->row_ = s;
}


// XsdPayment
// 

inline
const XsdPayment::type_type& XsdPayment::
type () const
{
  return this->type_.get ();
}

inline
XsdPayment::type_type& XsdPayment::
type ()
{
  return this->type_.get ();
}

inline
void XsdPayment::
type (const type_type& x)
{
  this->type_.set (x);
}

inline
void XsdPayment::
type (::std::auto_ptr< type_type > x)
{
  this->type_.set (x);
}

inline
const XsdPayment::currency_type& XsdPayment::
currency () const
{
  return this->currency_.get ();
}

inline
XsdPayment::currency_type& XsdPayment::
currency ()
{
  return this->currency_.get ();
}

inline
void XsdPayment::
currency (const currency_type& x)
{
  this->currency_.set (x);
}

inline
void XsdPayment::
currency (::std::auto_ptr< currency_type > x)
{
  this->currency_.set (x);
}

inline
const XsdPayment::currency_type& XsdPayment::
currency_default_value ()
{
  return currency_default_value_;
}

inline
const XsdPayment::flag_type& XsdPayment::
flag () const
{
  return this->flag_.get ();
}

inline
XsdPayment::flag_type& XsdPayment::
flag ()
{
  return this->flag_.get ();
}

inline
void XsdPayment::
flag (const flag_type& x)
{
  this->flag_.set (x);
}

inline
XsdPayment::flag_type XsdPayment::
flag_default_value ()
{
  return flag_type (0LL);
}


// XsdCashflowResult
// 

inline
const XsdCashflowResult::cashflow_type& XsdCashflowResult::
cashflow () const
{
  return this->cashflow_.get ();
}

inline
XsdCashflowResult::cashflow_type& XsdCashflowResult::
cashflow ()
{
  return this->cashflow_.get ();
}

inline
void XsdCashflowResult::
cashflow (const cashflow_type& x)
{
  this->cashflow_.set (x);
}

inline
void XsdCashflowResult::
cashflow (::std::auto_ptr< cashflow_type > x)
{
  this->cashflow_.set (x);
}


// XsdPaymentType
// 

inline
XsdPaymentType::
XsdPaymentType ()
: ::xml_schema::string ()
{
}

inline
XsdPaymentType::
XsdPaymentType (value v)
: ::xml_schema::string (_xsd_XsdPaymentType_literals_[v])
{
}

inline
XsdPaymentType::
XsdPaymentType (const char* v)
: ::xml_schema::string (v)
{
}

inline
XsdPaymentType::
XsdPaymentType (const ::std::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdPaymentType::
XsdPaymentType (const ::xml_schema::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdPaymentType::
XsdPaymentType (const XsdPaymentType& v,
                ::xml_schema::flags f,
                ::xml_schema::container* c)
: ::xml_schema::string (v, f, c)
{
}

inline
XsdPaymentType& XsdPaymentType::
operator= (value v)
{
  static_cast< ::xml_schema::string& > (*this) = 
  ::xml_schema::string (_xsd_XsdPaymentType_literals_[v]);

  return *this;
}


// XsdPaymentFlag
// 

inline
XsdPaymentFlag::
XsdPaymentFlag ()
: ::xml_schema::string ()
{
}

inline
XsdPaymentFlag::
XsdPaymentFlag (value v)
: ::xml_schema::string (_xsd_XsdPaymentFlag_literals_[v])
{
}

inline
XsdPaymentFlag::
XsdPaymentFlag (const char* v)
: ::xml_schema::string (v)
{
}

inline
XsdPaymentFlag::
XsdPaymentFlag (const ::std::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdPaymentFlag::
XsdPaymentFlag (const ::xml_schema::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdPaymentFlag::
XsdPaymentFlag (const XsdPaymentFlag& v,
                ::xml_schema::flags f,
                ::xml_schema::container* c)
: ::xml_schema::string (v, f, c)
{
}

inline
XsdPaymentFlag& XsdPaymentFlag::
operator= (value v)
{
  static_cast< ::xml_schema::string& > (*this) = 
  ::xml_schema::string (_xsd_XsdPaymentFlag_literals_[v]);

  return *this;
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_ASSET_CASHFLOW_IXX
