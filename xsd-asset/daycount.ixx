// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_ASSET_DAYCOUNT_IXX
#define CXX___SCHEMA_XSD_ASSET_DAYCOUNT_IXX

// Begin prologue.
//
//
// End prologue.

#include "calendar.ixx"

// XsdDayCount
// 

inline
const XsdDayCount::Actual_optional& XsdDayCount::
Actual () const
{
  return this->Actual_;
}

inline
XsdDayCount::Actual_optional& XsdDayCount::
Actual ()
{
  return this->Actual_;
}

inline
void XsdDayCount::
Actual (const Actual_type& x)
{
  this->Actual_.set (x);
}

inline
void XsdDayCount::
Actual (const Actual_optional& x)
{
  this->Actual_ = x;
}

inline
void XsdDayCount::
Actual (::std::auto_ptr< Actual_type > x)
{
  this->Actual_.set (x);
}

inline
const XsdDayCount::Actual360_optional& XsdDayCount::
Actual360 () const
{
  return this->Actual360_;
}

inline
XsdDayCount::Actual360_optional& XsdDayCount::
Actual360 ()
{
  return this->Actual360_;
}

inline
void XsdDayCount::
Actual360 (const Actual360_type& x)
{
  this->Actual360_.set (x);
}

inline
void XsdDayCount::
Actual360 (const Actual360_optional& x)
{
  this->Actual360_ = x;
}

inline
void XsdDayCount::
Actual360 (::std::auto_ptr< Actual360_type > x)
{
  this->Actual360_.set (x);
}

inline
const XsdDayCount::Actual364_optional& XsdDayCount::
Actual364 () const
{
  return this->Actual364_;
}

inline
XsdDayCount::Actual364_optional& XsdDayCount::
Actual364 ()
{
  return this->Actual364_;
}

inline
void XsdDayCount::
Actual364 (const Actual364_type& x)
{
  this->Actual364_.set (x);
}

inline
void XsdDayCount::
Actual364 (const Actual364_optional& x)
{
  this->Actual364_ = x;
}

inline
void XsdDayCount::
Actual364 (::std::auto_ptr< Actual364_type > x)
{
  this->Actual364_.set (x);
}

inline
const XsdDayCount::Actual365_optional& XsdDayCount::
Actual365 () const
{
  return this->Actual365_;
}

inline
XsdDayCount::Actual365_optional& XsdDayCount::
Actual365 ()
{
  return this->Actual365_;
}

inline
void XsdDayCount::
Actual365 (const Actual365_type& x)
{
  this->Actual365_.set (x);
}

inline
void XsdDayCount::
Actual365 (const Actual365_optional& x)
{
  this->Actual365_ = x;
}

inline
void XsdDayCount::
Actual365 (::std::auto_ptr< Actual365_type > x)
{
  this->Actual365_.set (x);
}

inline
const XsdDayCount::Actual366_optional& XsdDayCount::
Actual366 () const
{
  return this->Actual366_;
}

inline
XsdDayCount::Actual366_optional& XsdDayCount::
Actual366 ()
{
  return this->Actual366_;
}

inline
void XsdDayCount::
Actual366 (const Actual366_type& x)
{
  this->Actual366_.set (x);
}

inline
void XsdDayCount::
Actual366 (const Actual366_optional& x)
{
  this->Actual366_ = x;
}

inline
void XsdDayCount::
Actual366 (::std::auto_ptr< Actual366_type > x)
{
  this->Actual366_.set (x);
}

inline
const XsdDayCount::Business_optional& XsdDayCount::
Business () const
{
  return this->Business_;
}

inline
XsdDayCount::Business_optional& XsdDayCount::
Business ()
{
  return this->Business_;
}

inline
void XsdDayCount::
Business (const Business_type& x)
{
  this->Business_.set (x);
}

inline
void XsdDayCount::
Business (const Business_optional& x)
{
  this->Business_ = x;
}

inline
void XsdDayCount::
Business (::std::auto_ptr< Business_type > x)
{
  this->Business_.set (x);
}

inline
const XsdDayCount::Calendar_optional& XsdDayCount::
Calendar () const
{
  return this->Calendar_;
}

inline
XsdDayCount::Calendar_optional& XsdDayCount::
Calendar ()
{
  return this->Calendar_;
}

inline
void XsdDayCount::
Calendar (const Calendar_type& x)
{
  this->Calendar_.set (x);
}

inline
void XsdDayCount::
Calendar (const Calendar_optional& x)
{
  this->Calendar_ = x;
}

inline
void XsdDayCount::
Calendar (::std::auto_ptr< Calendar_type > x)
{
  this->Calendar_.set (x);
}

inline
const XsdDayCount::ThirtyActual_optional& XsdDayCount::
ThirtyActual () const
{
  return this->ThirtyActual_;
}

inline
XsdDayCount::ThirtyActual_optional& XsdDayCount::
ThirtyActual ()
{
  return this->ThirtyActual_;
}

inline
void XsdDayCount::
ThirtyActual (const ThirtyActual_type& x)
{
  this->ThirtyActual_.set (x);
}

inline
void XsdDayCount::
ThirtyActual (const ThirtyActual_optional& x)
{
  this->ThirtyActual_ = x;
}

inline
void XsdDayCount::
ThirtyActual (::std::auto_ptr< ThirtyActual_type > x)
{
  this->ThirtyActual_.set (x);
}

inline
const XsdDayCount::Thirty360_optional& XsdDayCount::
Thirty360 () const
{
  return this->Thirty360_;
}

inline
XsdDayCount::Thirty360_optional& XsdDayCount::
Thirty360 ()
{
  return this->Thirty360_;
}

inline
void XsdDayCount::
Thirty360 (const Thirty360_type& x)
{
  this->Thirty360_.set (x);
}

inline
void XsdDayCount::
Thirty360 (const Thirty360_optional& x)
{
  this->Thirty360_ = x;
}

inline
void XsdDayCount::
Thirty360 (::std::auto_ptr< Thirty360_type > x)
{
  this->Thirty360_.set (x);
}

inline
const XsdDayCount::Thirty365_optional& XsdDayCount::
Thirty365 () const
{
  return this->Thirty365_;
}

inline
XsdDayCount::Thirty365_optional& XsdDayCount::
Thirty365 ()
{
  return this->Thirty365_;
}

inline
void XsdDayCount::
Thirty365 (const Thirty365_type& x)
{
  this->Thirty365_.set (x);
}

inline
void XsdDayCount::
Thirty365 (const Thirty365_optional& x)
{
  this->Thirty365_ = x;
}

inline
void XsdDayCount::
Thirty365 (::std::auto_ptr< Thirty365_type > x)
{
  this->Thirty365_.set (x);
}


// XsdDayCountTest
// 

inline
const XsdDayCountTest::result_optional& XsdDayCountTest::
result () const
{
  return this->result_;
}

inline
XsdDayCountTest::result_optional& XsdDayCountTest::
result ()
{
  return this->result_;
}

inline
void XsdDayCountTest::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
void XsdDayCountTest::
result (const result_optional& x)
{
  this->result_ = x;
}

inline
void XsdDayCountTest::
result (::std::auto_ptr< result_type > x)
{
  this->result_.set (x);
}

inline
const XsdDayCountTest::refDate_type& XsdDayCountTest::
refDate () const
{
  return this->refDate_.get ();
}

inline
XsdDayCountTest::refDate_type& XsdDayCountTest::
refDate ()
{
  return this->refDate_.get ();
}

inline
void XsdDayCountTest::
refDate (const refDate_type& x)
{
  this->refDate_.set (x);
}

inline
void XsdDayCountTest::
refDate (::std::auto_ptr< refDate_type > x)
{
  this->refDate_.set (x);
}

inline
const XsdDayCountTest::beginDate_type& XsdDayCountTest::
beginDate () const
{
  return this->beginDate_.get ();
}

inline
XsdDayCountTest::beginDate_type& XsdDayCountTest::
beginDate ()
{
  return this->beginDate_.get ();
}

inline
void XsdDayCountTest::
beginDate (const beginDate_type& x)
{
  this->beginDate_.set (x);
}

inline
void XsdDayCountTest::
beginDate (::std::auto_ptr< beginDate_type > x)
{
  this->beginDate_.set (x);
}

inline
const XsdDayCountTest::endDate_type& XsdDayCountTest::
endDate () const
{
  return this->endDate_.get ();
}

inline
XsdDayCountTest::endDate_type& XsdDayCountTest::
endDate ()
{
  return this->endDate_.get ();
}

inline
void XsdDayCountTest::
endDate (const endDate_type& x)
{
  this->endDate_.set (x);
}

inline
void XsdDayCountTest::
endDate (::std::auto_ptr< endDate_type > x)
{
  this->endDate_.set (x);
}

inline
const XsdDayCountTest::dayCount_type& XsdDayCountTest::
dayCount () const
{
  return this->dayCount_.get ();
}

inline
XsdDayCountTest::dayCount_type& XsdDayCountTest::
dayCount ()
{
  return this->dayCount_.get ();
}

inline
void XsdDayCountTest::
dayCount (const dayCount_type& x)
{
  this->dayCount_.set (x);
}

inline
void XsdDayCountTest::
dayCount (::std::auto_ptr< dayCount_type > x)
{
  this->dayCount_.set (x);
}


// XsdThirty360Type
// 

inline
XsdThirty360Type::
XsdThirty360Type ()
: ::xml_schema::string ()
{
}

inline
XsdThirty360Type::
XsdThirty360Type (value v)
: ::xml_schema::string (_xsd_XsdThirty360Type_literals_[v])
{
}

inline
XsdThirty360Type::
XsdThirty360Type (const char* v)
: ::xml_schema::string (v)
{
}

inline
XsdThirty360Type::
XsdThirty360Type (const ::std::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdThirty360Type::
XsdThirty360Type (const ::xml_schema::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdThirty360Type::
XsdThirty360Type (const XsdThirty360Type& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
: ::xml_schema::string (v, f, c)
{
}

inline
XsdThirty360Type& XsdThirty360Type::
operator= (value v)
{
  static_cast< ::xml_schema::string& > (*this) = 
  ::xml_schema::string (_xsd_XsdThirty360Type_literals_[v]);

  return *this;
}


// XsdActual365Type
// 

inline
XsdActual365Type::
XsdActual365Type ()
: ::xml_schema::string ()
{
}

inline
XsdActual365Type::
XsdActual365Type (value v)
: ::xml_schema::string (_xsd_XsdActual365Type_literals_[v])
{
}

inline
XsdActual365Type::
XsdActual365Type (const char* v)
: ::xml_schema::string (v)
{
}

inline
XsdActual365Type::
XsdActual365Type (const ::std::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdActual365Type::
XsdActual365Type (const ::xml_schema::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdActual365Type::
XsdActual365Type (const XsdActual365Type& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
: ::xml_schema::string (v, f, c)
{
}

inline
XsdActual365Type& XsdActual365Type::
operator= (value v)
{
  static_cast< ::xml_schema::string& > (*this) = 
  ::xml_schema::string (_xsd_XsdActual365Type_literals_[v]);

  return *this;
}


// XsdActualType
// 

inline
XsdActualType::
XsdActualType ()
: ::xml_schema::string ()
{
}

inline
XsdActualType::
XsdActualType (value v)
: ::xml_schema::string (_xsd_XsdActualType_literals_[v])
{
}

inline
XsdActualType::
XsdActualType (const char* v)
: ::xml_schema::string (v)
{
}

inline
XsdActualType::
XsdActualType (const ::std::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdActualType::
XsdActualType (const ::xml_schema::string& v)
: ::xml_schema::string (v)
{
}

inline
XsdActualType::
XsdActualType (const XsdActualType& v,
               ::xml_schema::flags f,
               ::xml_schema::container* c)
: ::xml_schema::string (v, f, c)
{
}

inline
XsdActualType& XsdActualType::
operator= (value v)
{
  static_cast< ::xml_schema::string& > (*this) = 
  ::xml_schema::string (_xsd_XsdActualType_literals_[v]);

  return *this;
}


// XsdBusinessDayCount
// 

inline
const XsdBusinessDayCount::daysPerYear_optional& XsdBusinessDayCount::
daysPerYear () const
{
  return this->daysPerYear_;
}

inline
XsdBusinessDayCount::daysPerYear_optional& XsdBusinessDayCount::
daysPerYear ()
{
  return this->daysPerYear_;
}

inline
void XsdBusinessDayCount::
daysPerYear (const daysPerYear_type& x)
{
  this->daysPerYear_.set (x);
}

inline
void XsdBusinessDayCount::
daysPerYear (const daysPerYear_optional& x)
{
  this->daysPerYear_ = x;
}

inline
XsdBusinessDayCount::daysPerYear_type XsdBusinessDayCount::
daysPerYear_default_value ()
{
  return daysPerYear_type (252ULL);
}

inline
const XsdBusinessDayCount::calendar_optional& XsdBusinessDayCount::
calendar () const
{
  return this->calendar_;
}

inline
XsdBusinessDayCount::calendar_optional& XsdBusinessDayCount::
calendar ()
{
  return this->calendar_;
}

inline
void XsdBusinessDayCount::
calendar (const calendar_type& x)
{
  this->calendar_.set (x);
}

inline
void XsdBusinessDayCount::
calendar (const calendar_optional& x)
{
  this->calendar_ = x;
}

inline
void XsdBusinessDayCount::
calendar (::std::auto_ptr< calendar_type > x)
{
  this->calendar_.set (x);
}


// Actual
// 

inline
const Actual::type_type& Actual::
type () const
{
  return this->type_.get ();
}

inline
Actual::type_type& Actual::
type ()
{
  return this->type_.get ();
}

inline
void Actual::
type (const type_type& x)
{
  this->type_.set (x);
}

inline
void Actual::
type (::std::auto_ptr< type_type > x)
{
  this->type_.set (x);
}

inline
const Actual::type_type& Actual::
type_default_value ()
{
  return type_default_value_;
}

inline
const Actual::noLeap_type& Actual::
noLeap () const
{
  return this->noLeap_.get ();
}

inline
Actual::noLeap_type& Actual::
noLeap ()
{
  return this->noLeap_.get ();
}

inline
void Actual::
noLeap (const noLeap_type& x)
{
  this->noLeap_.set (x);
}

inline
Actual::noLeap_type Actual::
noLeap_default_value ()
{
  return noLeap_type (false);
}


// Actual360
// 

inline
const Actual360::noLeap_type& Actual360::
noLeap () const
{
  return this->noLeap_.get ();
}

inline
Actual360::noLeap_type& Actual360::
noLeap ()
{
  return this->noLeap_.get ();
}

inline
void Actual360::
noLeap (const noLeap_type& x)
{
  this->noLeap_.set (x);
}

inline
Actual360::noLeap_type Actual360::
noLeap_default_value ()
{
  return noLeap_type (false);
}


// Actual365
// 

inline
const Actual365::type_type& Actual365::
type () const
{
  return this->type_.get ();
}

inline
Actual365::type_type& Actual365::
type ()
{
  return this->type_.get ();
}

inline
void Actual365::
type (const type_type& x)
{
  this->type_.set (x);
}

inline
void Actual365::
type (::std::auto_ptr< type_type > x)
{
  this->type_.set (x);
}

inline
const Actual365::type_type& Actual365::
type_default_value ()
{
  return type_default_value_;
}


// Thirty360
// 

inline
const Thirty360::type_type& Thirty360::
type () const
{
  return this->type_.get ();
}

inline
Thirty360::type_type& Thirty360::
type ()
{
  return this->type_.get ();
}

inline
void Thirty360::
type (const type_type& x)
{
  this->type_.set (x);
}

inline
void Thirty360::
type (::std::auto_ptr< type_type > x)
{
  this->type_.set (x);
}

inline
const Thirty360::type_type& Thirty360::
type_default_value ()
{
  return type_default_value_;
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_ASSET_DAYCOUNT_IXX
