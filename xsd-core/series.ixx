// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_CORE_SERIES_IXX
#define CXX___SCHEMA_XSD_CORE_SERIES_IXX

// Begin prologue.
//
//
// End prologue.

#include "result.ixx"

// XsdDoubleValue
// 

inline
const XsdDoubleValue::index_type& XsdDoubleValue::
index () const
{
  return this->index_.get ();
}

inline
XsdDoubleValue::index_type& XsdDoubleValue::
index ()
{
  return this->index_.get ();
}

inline
void XsdDoubleValue::
index (const index_type& x)
{
  this->index_.set (x);
}


// XsdTenorValue
// 

inline
const XsdTenorValue::tenor_type& XsdTenorValue::
tenor () const
{
  return this->tenor_.get ();
}

inline
XsdTenorValue::tenor_type& XsdTenorValue::
tenor ()
{
  return this->tenor_.get ();
}

inline
void XsdTenorValue::
tenor (const tenor_type& x)
{
  this->tenor_.set (x);
}

inline
void XsdTenorValue::
tenor (::std::auto_ptr< tenor_type > x)
{
  this->tenor_.set (x);
}


// XsdTimeValue
// 

inline
const XsdTimeValue::time_type& XsdTimeValue::
time () const
{
  return this->time_.get ();
}

inline
XsdTimeValue::time_type& XsdTimeValue::
time ()
{
  return this->time_.get ();
}

inline
void XsdTimeValue::
time (const time_type& x)
{
  this->time_.set (x);
}

inline
void XsdTimeValue::
time (::std::auto_ptr< time_type > x)
{
  this->time_.set (x);
}


// XsdDateValue
// 

inline
const XsdDateValue::date_type& XsdDateValue::
date () const
{
  return this->date_.get ();
}

inline
XsdDateValue::date_type& XsdDateValue::
date ()
{
  return this->date_.get ();
}

inline
void XsdDateValue::
date (const date_type& x)
{
  this->date_.set (x);
}

inline
void XsdDateValue::
date (::std::auto_ptr< date_type > x)
{
  this->date_.set (x);
}


// XsdDateSeries
// 

inline
const XsdDateSeries::value_sequence& XsdDateSeries::
value () const
{
  return this->value_;
}

inline
XsdDateSeries::value_sequence& XsdDateSeries::
value ()
{
  return this->value_;
}

inline
void XsdDateSeries::
value (const value_sequence& s)
{
  this->value_ = s;
}


// XsdDoubleSeries
// 

inline
const XsdDoubleSeries::value_sequence& XsdDoubleSeries::
value () const
{
  return this->value_;
}

inline
XsdDoubleSeries::value_sequence& XsdDoubleSeries::
value ()
{
  return this->value_;
}

inline
void XsdDoubleSeries::
value (const value_sequence& s)
{
  this->value_ = s;
}


// XsdTenorSeries
// 

inline
const XsdTenorSeries::value_sequence& XsdTenorSeries::
value () const
{
  return this->value_;
}

inline
XsdTenorSeries::value_sequence& XsdTenorSeries::
value ()
{
  return this->value_;
}

inline
void XsdTenorSeries::
value (const value_sequence& s)
{
  this->value_ = s;
}


// XsdTimeSeries
// 

inline
const XsdTimeSeries::value_sequence& XsdTimeSeries::
value () const
{
  return this->value_;
}

inline
XsdTimeSeries::value_sequence& XsdTimeSeries::
value ()
{
  return this->value_;
}

inline
void XsdTimeSeries::
value (const value_sequence& s)
{
  this->value_ = s;
}


// XsdDateSeriesResult
// 

inline
const XsdDateSeriesResult::series_type& XsdDateSeriesResult::
series () const
{
  return this->series_.get ();
}

inline
XsdDateSeriesResult::series_type& XsdDateSeriesResult::
series ()
{
  return this->series_.get ();
}

inline
void XsdDateSeriesResult::
series (const series_type& x)
{
  this->series_.set (x);
}

inline
void XsdDateSeriesResult::
series (::std::auto_ptr< series_type > x)
{
  this->series_.set (x);
}


// XsdDoubleSeriesResult
// 

inline
const XsdDoubleSeriesResult::series_type& XsdDoubleSeriesResult::
series () const
{
  return this->series_.get ();
}

inline
XsdDoubleSeriesResult::series_type& XsdDoubleSeriesResult::
series ()
{
  return this->series_.get ();
}

inline
void XsdDoubleSeriesResult::
series (const series_type& x)
{
  this->series_.set (x);
}

inline
void XsdDoubleSeriesResult::
series (::std::auto_ptr< series_type > x)
{
  this->series_.set (x);
}


// XsdTenorSeriesResult
// 

inline
const XsdTenorSeriesResult::series_type& XsdTenorSeriesResult::
series () const
{
  return this->series_.get ();
}

inline
XsdTenorSeriesResult::series_type& XsdTenorSeriesResult::
series ()
{
  return this->series_.get ();
}

inline
void XsdTenorSeriesResult::
series (const series_type& x)
{
  this->series_.set (x);
}

inline
void XsdTenorSeriesResult::
series (::std::auto_ptr< series_type > x)
{
  this->series_.set (x);
}


// XsdTimeSeriesResult
// 

inline
const XsdTimeSeriesResult::series_type& XsdTimeSeriesResult::
series () const
{
  return this->series_.get ();
}

inline
XsdTimeSeriesResult::series_type& XsdTimeSeriesResult::
series ()
{
  return this->series_.get ();
}

inline
void XsdTimeSeriesResult::
series (const series_type& x)
{
  this->series_.set (x);
}

inline
void XsdTimeSeriesResult::
series (::std::auto_ptr< series_type > x)
{
  this->series_.set (x);
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_CORE_SERIES_IXX
