// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_CORE_MATRIX_IXX
#define CXX___SCHEMA_XSD_CORE_MATRIX_IXX

// Begin prologue.
//
//
// End prologue.

#include "vector.ixx"

// XsdMatrix
// 


// XsdDoubleMatrix
// 

inline
const XsdDoubleMatrix::data_optional& XsdDoubleMatrix::
data () const
{
  return this->data_;
}

inline
XsdDoubleMatrix::data_optional& XsdDoubleMatrix::
data ()
{
  return this->data_;
}

inline
void XsdDoubleMatrix::
data (const data_type& x)
{
  this->data_.set (x);
}

inline
void XsdDoubleMatrix::
data (const data_optional& x)
{
  this->data_ = x;
}

inline
void XsdDoubleMatrix::
data (::std::auto_ptr< data_type > x)
{
  this->data_.set (x);
}

inline
const XsdDoubleMatrix::row_sequence& XsdDoubleMatrix::
row () const
{
  return this->row_;
}

inline
XsdDoubleMatrix::row_sequence& XsdDoubleMatrix::
row ()
{
  return this->row_;
}

inline
void XsdDoubleMatrix::
row (const row_sequence& s)
{
  this->row_ = s;
}

inline
const XsdDoubleMatrix::column_sequence& XsdDoubleMatrix::
column () const
{
  return this->column_;
}

inline
XsdDoubleMatrix::column_sequence& XsdDoubleMatrix::
column ()
{
  return this->column_;
}

inline
void XsdDoubleMatrix::
column (const column_sequence& s)
{
  this->column_ = s;
}

inline
const XsdDoubleMatrix::rows_type& XsdDoubleMatrix::
rows () const
{
  return this->rows_.get ();
}

inline
XsdDoubleMatrix::rows_type& XsdDoubleMatrix::
rows ()
{
  return this->rows_.get ();
}

inline
void XsdDoubleMatrix::
rows (const rows_type& x)
{
  this->rows_.set (x);
}

inline
XsdDoubleMatrix::rows_type XsdDoubleMatrix::
rows_default_value ()
{
  return rows_type (0);
}

inline
const XsdDoubleMatrix::columns_type& XsdDoubleMatrix::
columns () const
{
  return this->columns_.get ();
}

inline
XsdDoubleMatrix::columns_type& XsdDoubleMatrix::
columns ()
{
  return this->columns_.get ();
}

inline
void XsdDoubleMatrix::
columns (const columns_type& x)
{
  this->columns_.set (x);
}

inline
XsdDoubleMatrix::columns_type XsdDoubleMatrix::
columns_default_value ()
{
  return columns_type (0);
}


// XsdSizeMatrix
// 

inline
const XsdSizeMatrix::data_optional& XsdSizeMatrix::
data () const
{
  return this->data_;
}

inline
XsdSizeMatrix::data_optional& XsdSizeMatrix::
data ()
{
  return this->data_;
}

inline
void XsdSizeMatrix::
data (const data_type& x)
{
  this->data_.set (x);
}

inline
void XsdSizeMatrix::
data (const data_optional& x)
{
  this->data_ = x;
}

inline
void XsdSizeMatrix::
data (::std::auto_ptr< data_type > x)
{
  this->data_.set (x);
}

inline
const XsdSizeMatrix::row_sequence& XsdSizeMatrix::
row () const
{
  return this->row_;
}

inline
XsdSizeMatrix::row_sequence& XsdSizeMatrix::
row ()
{
  return this->row_;
}

inline
void XsdSizeMatrix::
row (const row_sequence& s)
{
  this->row_ = s;
}

inline
const XsdSizeMatrix::column_sequence& XsdSizeMatrix::
column () const
{
  return this->column_;
}

inline
XsdSizeMatrix::column_sequence& XsdSizeMatrix::
column ()
{
  return this->column_;
}

inline
void XsdSizeMatrix::
column (const column_sequence& s)
{
  this->column_ = s;
}

inline
const XsdSizeMatrix::rows_type& XsdSizeMatrix::
rows () const
{
  return this->rows_.get ();
}

inline
XsdSizeMatrix::rows_type& XsdSizeMatrix::
rows ()
{
  return this->rows_.get ();
}

inline
void XsdSizeMatrix::
rows (const rows_type& x)
{
  this->rows_.set (x);
}

inline
XsdSizeMatrix::rows_type XsdSizeMatrix::
rows_default_value ()
{
  return rows_type (0);
}

inline
const XsdSizeMatrix::columns_type& XsdSizeMatrix::
columns () const
{
  return this->columns_.get ();
}

inline
XsdSizeMatrix::columns_type& XsdSizeMatrix::
columns ()
{
  return this->columns_.get ();
}

inline
void XsdSizeMatrix::
columns (const columns_type& x)
{
  this->columns_.set (x);
}

inline
XsdSizeMatrix::columns_type XsdSizeMatrix::
columns_default_value ()
{
  return columns_type (0);
}


// XsdSymmetricDoubleMatrix
// 

inline
const XsdSymmetricDoubleMatrix::data_optional& XsdSymmetricDoubleMatrix::
data () const
{
  return this->data_;
}

inline
XsdSymmetricDoubleMatrix::data_optional& XsdSymmetricDoubleMatrix::
data ()
{
  return this->data_;
}

inline
void XsdSymmetricDoubleMatrix::
data (const data_type& x)
{
  this->data_.set (x);
}

inline
void XsdSymmetricDoubleMatrix::
data (const data_optional& x)
{
  this->data_ = x;
}

inline
void XsdSymmetricDoubleMatrix::
data (::std::auto_ptr< data_type > x)
{
  this->data_.set (x);
}

inline
const XsdSymmetricDoubleMatrix::row_sequence& XsdSymmetricDoubleMatrix::
row () const
{
  return this->row_;
}

inline
XsdSymmetricDoubleMatrix::row_sequence& XsdSymmetricDoubleMatrix::
row ()
{
  return this->row_;
}

inline
void XsdSymmetricDoubleMatrix::
row (const row_sequence& s)
{
  this->row_ = s;
}

inline
const XsdSymmetricDoubleMatrix::column_sequence& XsdSymmetricDoubleMatrix::
column () const
{
  return this->column_;
}

inline
XsdSymmetricDoubleMatrix::column_sequence& XsdSymmetricDoubleMatrix::
column ()
{
  return this->column_;
}

inline
void XsdSymmetricDoubleMatrix::
column (const column_sequence& s)
{
  this->column_ = s;
}

inline
const XsdSymmetricDoubleMatrix::size_type& XsdSymmetricDoubleMatrix::
size () const
{
  return this->size_.get ();
}

inline
XsdSymmetricDoubleMatrix::size_type& XsdSymmetricDoubleMatrix::
size ()
{
  return this->size_.get ();
}

inline
void XsdSymmetricDoubleMatrix::
size (const size_type& x)
{
  this->size_.set (x);
}

inline
XsdSymmetricDoubleMatrix::size_type XsdSymmetricDoubleMatrix::
size_default_value ()
{
  return size_type (0ULL);
}

inline
const XsdSymmetricDoubleMatrix::storage_type& XsdSymmetricDoubleMatrix::
storage () const
{
  return this->storage_.get ();
}

inline
XsdSymmetricDoubleMatrix::storage_type& XsdSymmetricDoubleMatrix::
storage ()
{
  return this->storage_.get ();
}

inline
void XsdSymmetricDoubleMatrix::
storage (const storage_type& x)
{
  this->storage_.set (x);
}

inline
void XsdSymmetricDoubleMatrix::
storage (::std::auto_ptr< storage_type > x)
{
  this->storage_.set (x);
}

inline
const XsdSymmetricDoubleMatrix::storage_type& XsdSymmetricDoubleMatrix::
storage_default_value ()
{
  return storage_default_value_;
}


// XsdLowerTriangularDoubleMatrix
// 

inline
const XsdLowerTriangularDoubleMatrix::data_optional& XsdLowerTriangularDoubleMatrix::
data () const
{
  return this->data_;
}

inline
XsdLowerTriangularDoubleMatrix::data_optional& XsdLowerTriangularDoubleMatrix::
data ()
{
  return this->data_;
}

inline
void XsdLowerTriangularDoubleMatrix::
data (const data_type& x)
{
  this->data_.set (x);
}

inline
void XsdLowerTriangularDoubleMatrix::
data (const data_optional& x)
{
  this->data_ = x;
}

inline
void XsdLowerTriangularDoubleMatrix::
data (::std::auto_ptr< data_type > x)
{
  this->data_.set (x);
}

inline
const XsdLowerTriangularDoubleMatrix::row_sequence& XsdLowerTriangularDoubleMatrix::
row () const
{
  return this->row_;
}

inline
XsdLowerTriangularDoubleMatrix::row_sequence& XsdLowerTriangularDoubleMatrix::
row ()
{
  return this->row_;
}

inline
void XsdLowerTriangularDoubleMatrix::
row (const row_sequence& s)
{
  this->row_ = s;
}

inline
const XsdLowerTriangularDoubleMatrix::column_sequence& XsdLowerTriangularDoubleMatrix::
column () const
{
  return this->column_;
}

inline
XsdLowerTriangularDoubleMatrix::column_sequence& XsdLowerTriangularDoubleMatrix::
column ()
{
  return this->column_;
}

inline
void XsdLowerTriangularDoubleMatrix::
column (const column_sequence& s)
{
  this->column_ = s;
}

inline
const XsdLowerTriangularDoubleMatrix::size_type& XsdLowerTriangularDoubleMatrix::
size () const
{
  return this->size_.get ();
}

inline
XsdLowerTriangularDoubleMatrix::size_type& XsdLowerTriangularDoubleMatrix::
size ()
{
  return this->size_.get ();
}

inline
void XsdLowerTriangularDoubleMatrix::
size (const size_type& x)
{
  this->size_.set (x);
}

inline
XsdLowerTriangularDoubleMatrix::size_type XsdLowerTriangularDoubleMatrix::
size_default_value ()
{
  return size_type (0ULL);
}


// XsdUpperTriangularDoubleMatrix
// 

inline
const XsdUpperTriangularDoubleMatrix::data_optional& XsdUpperTriangularDoubleMatrix::
data () const
{
  return this->data_;
}

inline
XsdUpperTriangularDoubleMatrix::data_optional& XsdUpperTriangularDoubleMatrix::
data ()
{
  return this->data_;
}

inline
void XsdUpperTriangularDoubleMatrix::
data (const data_type& x)
{
  this->data_.set (x);
}

inline
void XsdUpperTriangularDoubleMatrix::
data (const data_optional& x)
{
  this->data_ = x;
}

inline
void XsdUpperTriangularDoubleMatrix::
data (::std::auto_ptr< data_type > x)
{
  this->data_.set (x);
}

inline
const XsdUpperTriangularDoubleMatrix::row_sequence& XsdUpperTriangularDoubleMatrix::
row () const
{
  return this->row_;
}

inline
XsdUpperTriangularDoubleMatrix::row_sequence& XsdUpperTriangularDoubleMatrix::
row ()
{
  return this->row_;
}

inline
void XsdUpperTriangularDoubleMatrix::
row (const row_sequence& s)
{
  this->row_ = s;
}

inline
const XsdUpperTriangularDoubleMatrix::column_sequence& XsdUpperTriangularDoubleMatrix::
column () const
{
  return this->column_;
}

inline
XsdUpperTriangularDoubleMatrix::column_sequence& XsdUpperTriangularDoubleMatrix::
column ()
{
  return this->column_;
}

inline
void XsdUpperTriangularDoubleMatrix::
column (const column_sequence& s)
{
  this->column_ = s;
}

inline
const XsdUpperTriangularDoubleMatrix::size_type& XsdUpperTriangularDoubleMatrix::
size () const
{
  return this->size_.get ();
}

inline
XsdUpperTriangularDoubleMatrix::size_type& XsdUpperTriangularDoubleMatrix::
size ()
{
  return this->size_.get ();
}

inline
void XsdUpperTriangularDoubleMatrix::
size (const size_type& x)
{
  this->size_.set (x);
}

inline
XsdUpperTriangularDoubleMatrix::size_type XsdUpperTriangularDoubleMatrix::
size_default_value ()
{
  return size_type (0);
}


// XsdSparseDoubleMatrix
// 

inline
const XsdSparseDoubleMatrix::value_sequence& XsdSparseDoubleMatrix::
value () const
{
  return this->value_;
}

inline
XsdSparseDoubleMatrix::value_sequence& XsdSparseDoubleMatrix::
value ()
{
  return this->value_;
}

inline
void XsdSparseDoubleMatrix::
value (const value_sequence& s)
{
  this->value_ = s;
}

inline
const XsdSparseDoubleMatrix::rows_type& XsdSparseDoubleMatrix::
rows () const
{
  return this->rows_.get ();
}

inline
XsdSparseDoubleMatrix::rows_type& XsdSparseDoubleMatrix::
rows ()
{
  return this->rows_.get ();
}

inline
void XsdSparseDoubleMatrix::
rows (const rows_type& x)
{
  this->rows_.set (x);
}

inline
XsdSparseDoubleMatrix::rows_type XsdSparseDoubleMatrix::
rows_default_value ()
{
  return rows_type (0);
}

inline
const XsdSparseDoubleMatrix::columns_type& XsdSparseDoubleMatrix::
columns () const
{
  return this->columns_.get ();
}

inline
XsdSparseDoubleMatrix::columns_type& XsdSparseDoubleMatrix::
columns ()
{
  return this->columns_.get ();
}

inline
void XsdSparseDoubleMatrix::
columns (const columns_type& x)
{
  this->columns_.set (x);
}

inline
XsdSparseDoubleMatrix::columns_type XsdSparseDoubleMatrix::
columns_default_value ()
{
  return columns_type (0);
}


// XsdBandDoubleMatrix
// 

inline
const XsdBandDoubleMatrix::band_sequence& XsdBandDoubleMatrix::
band () const
{
  return this->band_;
}

inline
XsdBandDoubleMatrix::band_sequence& XsdBandDoubleMatrix::
band ()
{
  return this->band_;
}

inline
void XsdBandDoubleMatrix::
band (const band_sequence& s)
{
  this->band_ = s;
}

inline
const XsdBandDoubleMatrix::size_type& XsdBandDoubleMatrix::
size () const
{
  return this->size_.get ();
}

inline
XsdBandDoubleMatrix::size_type& XsdBandDoubleMatrix::
size ()
{
  return this->size_.get ();
}

inline
void XsdBandDoubleMatrix::
size (const size_type& x)
{
  this->size_.set (x);
}

inline
XsdBandDoubleMatrix::size_type XsdBandDoubleMatrix::
size_default_value ()
{
  return size_type (0);
}


// XsdComplexMatrix
// 

inline
const XsdComplexMatrix::data_optional& XsdComplexMatrix::
data () const
{
  return this->data_;
}

inline
XsdComplexMatrix::data_optional& XsdComplexMatrix::
data ()
{
  return this->data_;
}

inline
void XsdComplexMatrix::
data (const data_type& x)
{
  this->data_.set (x);
}

inline
void XsdComplexMatrix::
data (const data_optional& x)
{
  this->data_ = x;
}

inline
void XsdComplexMatrix::
data (::std::auto_ptr< data_type > x)
{
  this->data_.set (x);
}

inline
const XsdComplexMatrix::row_sequence& XsdComplexMatrix::
row () const
{
  return this->row_;
}

inline
XsdComplexMatrix::row_sequence& XsdComplexMatrix::
row ()
{
  return this->row_;
}

inline
void XsdComplexMatrix::
row (const row_sequence& s)
{
  this->row_ = s;
}

inline
const XsdComplexMatrix::column_sequence& XsdComplexMatrix::
column () const
{
  return this->column_;
}

inline
XsdComplexMatrix::column_sequence& XsdComplexMatrix::
column ()
{
  return this->column_;
}

inline
void XsdComplexMatrix::
column (const column_sequence& s)
{
  this->column_ = s;
}

inline
const XsdComplexMatrix::rows_type& XsdComplexMatrix::
rows () const
{
  return this->rows_.get ();
}

inline
XsdComplexMatrix::rows_type& XsdComplexMatrix::
rows ()
{
  return this->rows_.get ();
}

inline
void XsdComplexMatrix::
rows (const rows_type& x)
{
  this->rows_.set (x);
}

inline
XsdComplexMatrix::rows_type XsdComplexMatrix::
rows_default_value ()
{
  return rows_type (0);
}

inline
const XsdComplexMatrix::columns_type& XsdComplexMatrix::
columns () const
{
  return this->columns_.get ();
}

inline
XsdComplexMatrix::columns_type& XsdComplexMatrix::
columns ()
{
  return this->columns_.get ();
}

inline
void XsdComplexMatrix::
columns (const columns_type& x)
{
  this->columns_.set (x);
}

inline
XsdComplexMatrix::columns_type XsdComplexMatrix::
columns_default_value ()
{
  return columns_type (0);
}


// XsdHermitianMatrix
// 

inline
const XsdHermitianMatrix::data_optional& XsdHermitianMatrix::
data () const
{
  return this->data_;
}

inline
XsdHermitianMatrix::data_optional& XsdHermitianMatrix::
data ()
{
  return this->data_;
}

inline
void XsdHermitianMatrix::
data (const data_type& x)
{
  this->data_.set (x);
}

inline
void XsdHermitianMatrix::
data (const data_optional& x)
{
  this->data_ = x;
}

inline
void XsdHermitianMatrix::
data (::std::auto_ptr< data_type > x)
{
  this->data_.set (x);
}

inline
const XsdHermitianMatrix::row_sequence& XsdHermitianMatrix::
row () const
{
  return this->row_;
}

inline
XsdHermitianMatrix::row_sequence& XsdHermitianMatrix::
row ()
{
  return this->row_;
}

inline
void XsdHermitianMatrix::
row (const row_sequence& s)
{
  this->row_ = s;
}

inline
const XsdHermitianMatrix::column_sequence& XsdHermitianMatrix::
column () const
{
  return this->column_;
}

inline
XsdHermitianMatrix::column_sequence& XsdHermitianMatrix::
column ()
{
  return this->column_;
}

inline
void XsdHermitianMatrix::
column (const column_sequence& s)
{
  this->column_ = s;
}

inline
const XsdHermitianMatrix::size_type& XsdHermitianMatrix::
size () const
{
  return this->size_.get ();
}

inline
XsdHermitianMatrix::size_type& XsdHermitianMatrix::
size ()
{
  return this->size_.get ();
}

inline
void XsdHermitianMatrix::
size (const size_type& x)
{
  this->size_.set (x);
}

inline
XsdHermitianMatrix::size_type XsdHermitianMatrix::
size_default_value ()
{
  return size_type (0);
}

inline
const XsdHermitianMatrix::storage_type& XsdHermitianMatrix::
storage () const
{
  return this->storage_.get ();
}

inline
XsdHermitianMatrix::storage_type& XsdHermitianMatrix::
storage ()
{
  return this->storage_.get ();
}

inline
void XsdHermitianMatrix::
storage (const storage_type& x)
{
  this->storage_.set (x);
}

inline
void XsdHermitianMatrix::
storage (::std::auto_ptr< storage_type > x)
{
  this->storage_.set (x);
}

inline
const XsdHermitianMatrix::storage_type& XsdHermitianMatrix::
storage_default_value ()
{
  return storage_default_value_;
}


// XsdDoubleMatrixResult
// 

inline
const XsdDoubleMatrixResult::value_type& XsdDoubleMatrixResult::
value () const
{
  return this->value_.get ();
}

inline
XsdDoubleMatrixResult::value_type& XsdDoubleMatrixResult::
value ()
{
  return this->value_.get ();
}

inline
void XsdDoubleMatrixResult::
value (const value_type& x)
{
  this->value_.set (x);
}

inline
void XsdDoubleMatrixResult::
value (::std::auto_ptr< value_type > x)
{
  this->value_.set (x);
}


// XsdSizeMatrixResult
// 

inline
const XsdSizeMatrixResult::value_type& XsdSizeMatrixResult::
value () const
{
  return this->value_.get ();
}

inline
XsdSizeMatrixResult::value_type& XsdSizeMatrixResult::
value ()
{
  return this->value_.get ();
}

inline
void XsdSizeMatrixResult::
value (const value_type& x)
{
  this->value_.set (x);
}

inline
void XsdSizeMatrixResult::
value (::std::auto_ptr< value_type > x)
{
  this->value_.set (x);
}


// XsdBandDoubleMatrixResult
// 

inline
const XsdBandDoubleMatrixResult::value_type& XsdBandDoubleMatrixResult::
value () const
{
  return this->value_.get ();
}

inline
XsdBandDoubleMatrixResult::value_type& XsdBandDoubleMatrixResult::
value ()
{
  return this->value_.get ();
}

inline
void XsdBandDoubleMatrixResult::
value (const value_type& x)
{
  this->value_.set (x);
}

inline
void XsdBandDoubleMatrixResult::
value (::std::auto_ptr< value_type > x)
{
  this->value_.set (x);
}


// XsdDoubleBand
// 

inline
const XsdDoubleBand::offset_type& XsdDoubleBand::
offset () const
{
  return this->offset_.get ();
}

inline
XsdDoubleBand::offset_type& XsdDoubleBand::
offset ()
{
  return this->offset_.get ();
}

inline
void XsdDoubleBand::
offset (const offset_type& x)
{
  this->offset_.set (x);
}


// XsdSparseDouble
// 

inline
const XsdSparseDouble::row_type& XsdSparseDouble::
row () const
{
  return this->row_.get ();
}

inline
XsdSparseDouble::row_type& XsdSparseDouble::
row ()
{
  return this->row_.get ();
}

inline
void XsdSparseDouble::
row (const row_type& x)
{
  this->row_.set (x);
}

inline
const XsdSparseDouble::column_type& XsdSparseDouble::
column () const
{
  return this->column_.get ();
}

inline
XsdSparseDouble::column_type& XsdSparseDouble::
column ()
{
  return this->column_.get ();
}

inline
void XsdSparseDouble::
column (const column_type& x)
{
  this->column_.set (x);
}


// XsdDoubleMatrixData
// 

inline
const XsdDoubleMatrixData::order_type& XsdDoubleMatrixData::
order () const
{
  return this->order_.get ();
}

inline
XsdDoubleMatrixData::order_type& XsdDoubleMatrixData::
order ()
{
  return this->order_.get ();
}

inline
void XsdDoubleMatrixData::
order (const order_type& x)
{
  this->order_.set (x);
}

inline
void XsdDoubleMatrixData::
order (::std::auto_ptr< order_type > x)
{
  this->order_.set (x);
}

inline
const XsdDoubleMatrixData::order_type& XsdDoubleMatrixData::
order_default_value ()
{
  return order_default_value_;
}


// XsdComplexMatrixData
// 

inline
const XsdComplexMatrixData::order_type& XsdComplexMatrixData::
order () const
{
  return this->order_.get ();
}

inline
XsdComplexMatrixData::order_type& XsdComplexMatrixData::
order ()
{
  return this->order_.get ();
}

inline
void XsdComplexMatrixData::
order (const order_type& x)
{
  this->order_.set (x);
}

inline
void XsdComplexMatrixData::
order (::std::auto_ptr< order_type > x)
{
  this->order_.set (x);
}

inline
const XsdComplexMatrixData::order_type& XsdComplexMatrixData::
order_default_value ()
{
  return order_default_value_;
}


// XsdSizeMatrixData
// 

inline
const XsdSizeMatrixData::order_type& XsdSizeMatrixData::
order () const
{
  return this->order_.get ();
}

inline
XsdSizeMatrixData::order_type& XsdSizeMatrixData::
order ()
{
  return this->order_.get ();
}

inline
void XsdSizeMatrixData::
order (const order_type& x)
{
  this->order_.set (x);
}

inline
void XsdSizeMatrixData::
order (::std::auto_ptr< order_type > x)
{
  this->order_.set (x);
}

inline
const XsdSizeMatrixData::order_type& XsdSizeMatrixData::
order_default_value ()
{
  return order_default_value_;
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_CORE_MATRIX_IXX
