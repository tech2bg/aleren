// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef CXX___SCHEMA_XSD_CORE_VALUE_IXX
#define CXX___SCHEMA_XSD_CORE_VALUE_IXX

// Begin prologue.
//
//
// End prologue.

// XsdBoolean
// 

inline
const XsdBoolean::refID_optional& XsdBoolean::
refID () const
{
  return this->refID_;
}

inline
XsdBoolean::refID_optional& XsdBoolean::
refID ()
{
  return this->refID_;
}

inline
void XsdBoolean::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdBoolean::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdBoolean::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdBoolean::xpath_optional& XsdBoolean::
xpath () const
{
  return this->xpath_;
}

inline
XsdBoolean::xpath_optional& XsdBoolean::
xpath ()
{
  return this->xpath_;
}

inline
void XsdBoolean::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdBoolean::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdBoolean::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdBoolean::result_type& XsdBoolean::
result () const
{
  return this->result_.get ();
}

inline
XsdBoolean::result_type& XsdBoolean::
result ()
{
  return this->result_.get ();
}

inline
void XsdBoolean::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdBoolean::result_type XsdBoolean::
result_default_value ()
{
  return result_type (true);
}


// XsdComplex
// 

inline
const XsdComplex::real_optional& XsdComplex::
real () const
{
  return this->real_;
}

inline
XsdComplex::real_optional& XsdComplex::
real ()
{
  return this->real_;
}

inline
void XsdComplex::
real (const real_type& x)
{
  this->real_.set (x);
}

inline
void XsdComplex::
real (const real_optional& x)
{
  this->real_ = x;
}

inline
XsdComplex::real_type XsdComplex::
real_default_value ()
{
  return real_type (.0);
}

inline
const XsdComplex::imaginary_optional& XsdComplex::
imaginary () const
{
  return this->imaginary_;
}

inline
XsdComplex::imaginary_optional& XsdComplex::
imaginary ()
{
  return this->imaginary_;
}

inline
void XsdComplex::
imaginary (const imaginary_type& x)
{
  this->imaginary_.set (x);
}

inline
void XsdComplex::
imaginary (const imaginary_optional& x)
{
  this->imaginary_ = x;
}

inline
XsdComplex::imaginary_type XsdComplex::
imaginary_default_value ()
{
  return imaginary_type (.0);
}

inline
const XsdComplex::refID_optional& XsdComplex::
refID () const
{
  return this->refID_;
}

inline
XsdComplex::refID_optional& XsdComplex::
refID ()
{
  return this->refID_;
}

inline
void XsdComplex::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdComplex::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdComplex::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdComplex::xpath_optional& XsdComplex::
xpath () const
{
  return this->xpath_;
}

inline
XsdComplex::xpath_optional& XsdComplex::
xpath ()
{
  return this->xpath_;
}

inline
void XsdComplex::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdComplex::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdComplex::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdComplex::result_type& XsdComplex::
result () const
{
  return this->result_.get ();
}

inline
XsdComplex::result_type& XsdComplex::
result ()
{
  return this->result_.get ();
}

inline
void XsdComplex::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdComplex::result_type XsdComplex::
result_default_value ()
{
  return result_type (true);
}


// XsdSimpleCorrelation
// 


// XsdCorrelation
// 

inline
const XsdCorrelation::refID_optional& XsdCorrelation::
refID () const
{
  return this->refID_;
}

inline
XsdCorrelation::refID_optional& XsdCorrelation::
refID ()
{
  return this->refID_;
}

inline
void XsdCorrelation::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdCorrelation::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdCorrelation::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdCorrelation::xpath_optional& XsdCorrelation::
xpath () const
{
  return this->xpath_;
}

inline
XsdCorrelation::xpath_optional& XsdCorrelation::
xpath ()
{
  return this->xpath_;
}

inline
void XsdCorrelation::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdCorrelation::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdCorrelation::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdCorrelation::result_type& XsdCorrelation::
result () const
{
  return this->result_.get ();
}

inline
XsdCorrelation::result_type& XsdCorrelation::
result ()
{
  return this->result_.get ();
}

inline
void XsdCorrelation::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdCorrelation::result_type XsdCorrelation::
result_default_value ()
{
  return result_type (true);
}


// XsdDate
// 

inline
const XsdDate::refID_optional& XsdDate::
refID () const
{
  return this->refID_;
}

inline
XsdDate::refID_optional& XsdDate::
refID ()
{
  return this->refID_;
}

inline
void XsdDate::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdDate::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdDate::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdDate::xpath_optional& XsdDate::
xpath () const
{
  return this->xpath_;
}

inline
XsdDate::xpath_optional& XsdDate::
xpath ()
{
  return this->xpath_;
}

inline
void XsdDate::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdDate::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdDate::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdDate::result_type& XsdDate::
result () const
{
  return this->result_.get ();
}

inline
XsdDate::result_type& XsdDate::
result ()
{
  return this->result_.get ();
}

inline
void XsdDate::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdDate::result_type XsdDate::
result_default_value ()
{
  return result_type (true);
}


// XsdDateTime
// 

inline
const XsdDateTime::refID_optional& XsdDateTime::
refID () const
{
  return this->refID_;
}

inline
XsdDateTime::refID_optional& XsdDateTime::
refID ()
{
  return this->refID_;
}

inline
void XsdDateTime::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdDateTime::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdDateTime::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdDateTime::xpath_optional& XsdDateTime::
xpath () const
{
  return this->xpath_;
}

inline
XsdDateTime::xpath_optional& XsdDateTime::
xpath ()
{
  return this->xpath_;
}

inline
void XsdDateTime::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdDateTime::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdDateTime::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdDateTime::result_type& XsdDateTime::
result () const
{
  return this->result_.get ();
}

inline
XsdDateTime::result_type& XsdDateTime::
result ()
{
  return this->result_.get ();
}

inline
void XsdDateTime::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdDateTime::result_type XsdDateTime::
result_default_value ()
{
  return result_type (true);
}


// XsdDouble
// 

inline
const XsdDouble::refID_optional& XsdDouble::
refID () const
{
  return this->refID_;
}

inline
XsdDouble::refID_optional& XsdDouble::
refID ()
{
  return this->refID_;
}

inline
void XsdDouble::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdDouble::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdDouble::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdDouble::xpath_optional& XsdDouble::
xpath () const
{
  return this->xpath_;
}

inline
XsdDouble::xpath_optional& XsdDouble::
xpath ()
{
  return this->xpath_;
}

inline
void XsdDouble::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdDouble::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdDouble::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdDouble::result_type& XsdDouble::
result () const
{
  return this->result_.get ();
}

inline
XsdDouble::result_type& XsdDouble::
result ()
{
  return this->result_.get ();
}

inline
void XsdDouble::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdDouble::result_type XsdDouble::
result_default_value ()
{
  return result_type (true);
}


// XsdDuration
// 

inline
const XsdDuration::refID_optional& XsdDuration::
refID () const
{
  return this->refID_;
}

inline
XsdDuration::refID_optional& XsdDuration::
refID ()
{
  return this->refID_;
}

inline
void XsdDuration::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdDuration::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdDuration::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdDuration::xpath_optional& XsdDuration::
xpath () const
{
  return this->xpath_;
}

inline
XsdDuration::xpath_optional& XsdDuration::
xpath ()
{
  return this->xpath_;
}

inline
void XsdDuration::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdDuration::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdDuration::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdDuration::result_type& XsdDuration::
result () const
{
  return this->result_.get ();
}

inline
XsdDuration::result_type& XsdDuration::
result ()
{
  return this->result_.get ();
}

inline
void XsdDuration::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdDuration::result_type XsdDuration::
result_default_value ()
{
  return result_type (true);
}


// XsdInteger
// 

inline
const XsdInteger::refID_optional& XsdInteger::
refID () const
{
  return this->refID_;
}

inline
XsdInteger::refID_optional& XsdInteger::
refID ()
{
  return this->refID_;
}

inline
void XsdInteger::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdInteger::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdInteger::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdInteger::xpath_optional& XsdInteger::
xpath () const
{
  return this->xpath_;
}

inline
XsdInteger::xpath_optional& XsdInteger::
xpath ()
{
  return this->xpath_;
}

inline
void XsdInteger::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdInteger::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdInteger::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdInteger::result_type& XsdInteger::
result () const
{
  return this->result_.get ();
}

inline
XsdInteger::result_type& XsdInteger::
result ()
{
  return this->result_.get ();
}

inline
void XsdInteger::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdInteger::result_type XsdInteger::
result_default_value ()
{
  return result_type (true);
}


// XsdSimpleNonNegativeDouble
// 


// XsdNonNegativeDouble
// 

inline
const XsdNonNegativeDouble::refID_optional& XsdNonNegativeDouble::
refID () const
{
  return this->refID_;
}

inline
XsdNonNegativeDouble::refID_optional& XsdNonNegativeDouble::
refID ()
{
  return this->refID_;
}

inline
void XsdNonNegativeDouble::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdNonNegativeDouble::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdNonNegativeDouble::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdNonNegativeDouble::xpath_optional& XsdNonNegativeDouble::
xpath () const
{
  return this->xpath_;
}

inline
XsdNonNegativeDouble::xpath_optional& XsdNonNegativeDouble::
xpath ()
{
  return this->xpath_;
}

inline
void XsdNonNegativeDouble::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdNonNegativeDouble::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdNonNegativeDouble::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdNonNegativeDouble::result_type& XsdNonNegativeDouble::
result () const
{
  return this->result_.get ();
}

inline
XsdNonNegativeDouble::result_type& XsdNonNegativeDouble::
result ()
{
  return this->result_.get ();
}

inline
void XsdNonNegativeDouble::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdNonNegativeDouble::result_type XsdNonNegativeDouble::
result_default_value ()
{
  return result_type (true);
}


// XsdNonNegativeInteger
// 

inline
const XsdNonNegativeInteger::refID_optional& XsdNonNegativeInteger::
refID () const
{
  return this->refID_;
}

inline
XsdNonNegativeInteger::refID_optional& XsdNonNegativeInteger::
refID ()
{
  return this->refID_;
}

inline
void XsdNonNegativeInteger::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdNonNegativeInteger::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdNonNegativeInteger::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdNonNegativeInteger::xpath_optional& XsdNonNegativeInteger::
xpath () const
{
  return this->xpath_;
}

inline
XsdNonNegativeInteger::xpath_optional& XsdNonNegativeInteger::
xpath ()
{
  return this->xpath_;
}

inline
void XsdNonNegativeInteger::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdNonNegativeInteger::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdNonNegativeInteger::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdNonNegativeInteger::result_type& XsdNonNegativeInteger::
result () const
{
  return this->result_.get ();
}

inline
XsdNonNegativeInteger::result_type& XsdNonNegativeInteger::
result ()
{
  return this->result_.get ();
}

inline
void XsdNonNegativeInteger::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdNonNegativeInteger::result_type XsdNonNegativeInteger::
result_default_value ()
{
  return result_type (true);
}


// XsdPositiveInteger
// 

inline
const XsdPositiveInteger::refID_optional& XsdPositiveInteger::
refID () const
{
  return this->refID_;
}

inline
XsdPositiveInteger::refID_optional& XsdPositiveInteger::
refID ()
{
  return this->refID_;
}

inline
void XsdPositiveInteger::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdPositiveInteger::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdPositiveInteger::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdPositiveInteger::xpath_optional& XsdPositiveInteger::
xpath () const
{
  return this->xpath_;
}

inline
XsdPositiveInteger::xpath_optional& XsdPositiveInteger::
xpath ()
{
  return this->xpath_;
}

inline
void XsdPositiveInteger::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdPositiveInteger::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdPositiveInteger::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdPositiveInteger::result_type& XsdPositiveInteger::
result () const
{
  return this->result_.get ();
}

inline
XsdPositiveInteger::result_type& XsdPositiveInteger::
result ()
{
  return this->result_.get ();
}

inline
void XsdPositiveInteger::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdPositiveInteger::result_type XsdPositiveInteger::
result_default_value ()
{
  return result_type (true);
}


// XsdSimplePositiveDouble
// 


// XsdPositiveDouble
// 

inline
const XsdPositiveDouble::refID_optional& XsdPositiveDouble::
refID () const
{
  return this->refID_;
}

inline
XsdPositiveDouble::refID_optional& XsdPositiveDouble::
refID ()
{
  return this->refID_;
}

inline
void XsdPositiveDouble::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdPositiveDouble::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdPositiveDouble::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdPositiveDouble::xpath_optional& XsdPositiveDouble::
xpath () const
{
  return this->xpath_;
}

inline
XsdPositiveDouble::xpath_optional& XsdPositiveDouble::
xpath ()
{
  return this->xpath_;
}

inline
void XsdPositiveDouble::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdPositiveDouble::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdPositiveDouble::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdPositiveDouble::result_type& XsdPositiveDouble::
result () const
{
  return this->result_.get ();
}

inline
XsdPositiveDouble::result_type& XsdPositiveDouble::
result ()
{
  return this->result_.get ();
}

inline
void XsdPositiveDouble::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdPositiveDouble::result_type XsdPositiveDouble::
result_default_value ()
{
  return result_type (true);
}


// XsdSimpleProbability
// 


// XsdProbability
// 

inline
const XsdProbability::refID_optional& XsdProbability::
refID () const
{
  return this->refID_;
}

inline
XsdProbability::refID_optional& XsdProbability::
refID ()
{
  return this->refID_;
}

inline
void XsdProbability::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdProbability::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdProbability::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdProbability::xpath_optional& XsdProbability::
xpath () const
{
  return this->xpath_;
}

inline
XsdProbability::xpath_optional& XsdProbability::
xpath ()
{
  return this->xpath_;
}

inline
void XsdProbability::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdProbability::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdProbability::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdProbability::result_type& XsdProbability::
result () const
{
  return this->result_.get ();
}

inline
XsdProbability::result_type& XsdProbability::
result ()
{
  return this->result_.get ();
}

inline
void XsdProbability::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdProbability::result_type XsdProbability::
result_default_value ()
{
  return result_type (true);
}


// XsdString
// 

inline
const XsdString::refID_optional& XsdString::
refID () const
{
  return this->refID_;
}

inline
XsdString::refID_optional& XsdString::
refID ()
{
  return this->refID_;
}

inline
void XsdString::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdString::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdString::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdString::xpath_optional& XsdString::
xpath () const
{
  return this->xpath_;
}

inline
XsdString::xpath_optional& XsdString::
xpath ()
{
  return this->xpath_;
}

inline
void XsdString::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdString::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdString::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdString::result_type& XsdString::
result () const
{
  return this->result_.get ();
}

inline
XsdString::result_type& XsdString::
result ()
{
  return this->result_.get ();
}

inline
void XsdString::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdString::result_type XsdString::
result_default_value ()
{
  return result_type (true);
}


// XsdUnsignedInteger
// 

inline
const XsdUnsignedInteger::refID_optional& XsdUnsignedInteger::
refID () const
{
  return this->refID_;
}

inline
XsdUnsignedInteger::refID_optional& XsdUnsignedInteger::
refID ()
{
  return this->refID_;
}

inline
void XsdUnsignedInteger::
refID (const refID_type& x)
{
  this->refID_.set (x);
}

inline
void XsdUnsignedInteger::
refID (const refID_optional& x)
{
  this->refID_ = x;
}

inline
void XsdUnsignedInteger::
refID (::std::auto_ptr< refID_type > x)
{
  this->refID_.set (x);
}

inline
const XsdUnsignedInteger::xpath_optional& XsdUnsignedInteger::
xpath () const
{
  return this->xpath_;
}

inline
XsdUnsignedInteger::xpath_optional& XsdUnsignedInteger::
xpath ()
{
  return this->xpath_;
}

inline
void XsdUnsignedInteger::
xpath (const xpath_type& x)
{
  this->xpath_.set (x);
}

inline
void XsdUnsignedInteger::
xpath (const xpath_optional& x)
{
  this->xpath_ = x;
}

inline
void XsdUnsignedInteger::
xpath (::std::auto_ptr< xpath_type > x)
{
  this->xpath_.set (x);
}

inline
const XsdUnsignedInteger::result_type& XsdUnsignedInteger::
result () const
{
  return this->result_.get ();
}

inline
XsdUnsignedInteger::result_type& XsdUnsignedInteger::
result ()
{
  return this->result_.get ();
}

inline
void XsdUnsignedInteger::
result (const result_type& x)
{
  this->result_.set (x);
}

inline
XsdUnsignedInteger::result_type XsdUnsignedInteger::
result_default_value ()
{
  return result_type (true);
}


// Begin epilogue.
//
//
// End epilogue.

#endif // CXX___SCHEMA_XSD_CORE_VALUE_IXX
